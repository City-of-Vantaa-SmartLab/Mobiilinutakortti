var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/classes/Admin.html",[0,0.099,1,0.852]],["body/classes/Admin.html",[0,0.131,1,1.392,2,1.002,3,0.268,4,0.236,5,0.236,6,2.738,7,1.42,8,2.818,9,3.78,10,0.268,11,1.481,12,2.837,13,2.088,14,1.946,15,3.098,16,2.088,17,3.098,18,0.752,19,0.026,20,1.127,21,1.984,22,3.243,23,2.282,24,4.667,25,3.803,26,0.895,27,3.243,28,4.716,29,3.243,30,3.321,31,3.243,32,2.477,33,3.243,34,2.477,35,3.803,36,3.243,37,3.243,38,3.243,39,0.475,40,2.406,41,1.321,42,2.978,43,1.231,44,3.243,45,0.268,46,2.738,47,2.738,48,0.012,49,0.017,50,0.012]],["title/controllers/AdminController.html",[51,1.595,52,2.044]],["body/controllers/AdminController.html",[0,0.043,1,1.165,3,0.121,4,0.107,5,0.107,7,1.771,10,0.121,18,0.457,19,0.027,20,0.765,21,1.444,23,2.359,26,0.652,34,1.349,39,0.466,45,0.121,48,0.006,49,0.009,50,0.006,51,1.476,52,1.473,53,0.692,54,1.238,55,1.238,56,2.437,57,2.058,58,2.437,59,1.243,60,4.834,61,1.8,62,2.437,63,2.082,64,2.058,65,2.437,66,4.091,67,2.058,68,2.437,69,4.366,70,2.437,71,1.998,72,2.437,73,2.437,74,2.437,75,2.058,76,2.437,77,2.437,78,4.091,79,2.058,80,2.058,81,0.863,82,2.596,83,3.078,84,2.437,85,2.437,86,3.078,87,3.078,88,2.058,89,3.078,90,1.466,91,1.466,92,2.642,93,2.437,94,2.082,95,2.437,96,2.437,97,2.058,98,2.437,99,2.642,100,2.437,101,2.437,102,2.058,103,1.466,104,3.217,105,1.466,106,1.466,107,1.466,108,2.928,109,2.058,110,1.858,111,3.595,112,1.384,113,1.384,114,1.384,115,4.596,116,1.466,117,3.687,118,1.466,119,1.466,120,2.058,121,2.058,122,2.437,123,2.058,124,2.437,125,2.437,126,2.058,127,2.058,128,2.058,129,1.622,130,1.238,131,2.416,132,1.466,133,1.466,134,1.466,135,3.645,136,3.645,137,1.466,138,1.466,139,3.078,140,1.473,141,1.238,142,2.638,143,1.238,144,1.466,145,2.437,146,2.437,147,2.437,148,2.437,149,1.595,150,1.808,151,1.238,152,1.238,153,3.416,154,1.238,155,1.238,156,0.369,157,0.642,158,1.595,159,1.238,160,1.595,161,1.238,162,1.238,163,0.886,164,2.063,165,1.238,166,0.976,167,1.238,168,0.886,169,1.238,170,0.976,171,1.238,172,1.466,173,0.557,174,1.067,175,0.614,176,2.425,177,3.078,178,1.466,179,1.466,180,1.908,181,2.437,182,3.078,183,1.238,184,1.238,185,1.238,186,1.238,187,1.238,188,1.238,189,1.466,190,3.128,191,1.238,192,1.466,193,1.466,194,1.238,195,1.238,196,1.466,197,1.238,198,1.466]],["title/injectables/AdminEditInterceptor.html",[170,2.251,199,0.912]],["body/injectables/AdminEditInterceptor.html",[0,0.072,1,1.31,3,0.203,4,0.179,5,0.179,7,1.604,10,0.203,18,0.459,19,0.027,26,0.547,34,1.358,39,0.524,41,0.999,45,0.203,48,0.009,49,0.014,50,0.009,61,0.812,63,1.633,71,0.869,81,1.298,82,1.919,97,3.093,110,1.868,112,1.391,113,1.391,114,1.391,131,2.027,156,0.618,157,1.919,170,2.437,173,1.391,174,1.074,175,0.618,176,2.917,180,1.157,199,0.988,200,1.157,201,2.072,202,3.663,203,3.093,204,3.663,205,3.663,206,3.663,207,3.663,208,3.093,209,2.072,210,3.019,211,2.454,212,3.252,213,3.093,214,3.607,215,4.105,216,4.105,217,2.454,218,3.663,219,3.663,220,3.607,221,3.663,222,3.663,223,3.607,224,3.663,225,3.663,226,1.868,227,3.093,228,1.483,229,2.072,230,1.82,231,1.483,232,0.932,233,1.633,234,1.483,235,1.483,236,1.82,237,1.82,238,2.426,239,1.633,240,2.072,241,2.072,242,3.093,243,2.454,244,2.214,245,1.483,246,5.107,247,3.663,248,2.454,249,3.663,250,3.701,251,3.093,252,3.701,253,3.093,254,2.072,255,4.383,256,2.072,257,3.663,258,2.072,259,2.072]],["title/modules/AdminModule.html",[260,1.284,261,1.872]],["body/modules/AdminModule.html",[0,0.107,1,1.221,3,0.302,4,0.266,5,0.266,19,0.027,39,0.588,45,0.302,48,0.014,49,0.019,50,0.014,52,3.292,53,2.288,59,1.862,156,0.919,158,3.405,159,3.084,232,1.386,233,2.43,260,2.204,261,3.507,262,1.723,263,1.723,264,2.021,265,2.021,266,1.723,267,3.015,268,3.015,269,3.084,270,3.084,271,3.084,272,2.685,273,2.021,274,3.652,275,3.228,276,2.43,277,3.652,278,2.473,279,2.709,280,1.499,281,2.43,282,2.207,283,2.709]],["title/injectables/AdminService.html",[158,1.724,199,0.912]],["body/injectables/AdminService.html",[0,0.054,1,1.538,3,0.152,4,0.134,5,0.134,7,2.128,8,1.498,10,0.152,12,2.69,13,0.751,14,1.116,15,1.115,16,0.751,17,1.115,18,0.572,19,0.027,20,0.642,26,0.726,39,0.506,41,0.751,45,0.152,48,0.007,49,0.011,50,0.007,57,2.481,61,1.751,66,3.528,71,1.616,78,3.528,81,1.041,82,2.648,104,2.525,109,2.481,110,2.13,111,2.18,112,1.732,113,1.732,114,1.732,129,2.78,131,2.312,139,2.481,140,2.213,156,0.464,157,0.808,158,1.498,173,1.116,174,0.808,175,0.464,176,3.036,180,2.573,199,0.793,200,0.87,203,2.481,209,1.557,210,2.69,212,2.718,220,2.18,226,3.048,228,1.115,231,1.115,232,0.7,233,1.227,234,1.115,235,1.115,237,1.368,238,2.525,244,2.213,245,1.115,284,1.557,285,2.939,286,2.939,287,2.939,288,2.939,289,2.939,290,4.178,291,2.939,292,1.844,293,2.939,294,1.844,295,4.47,296,2.939,297,2.939,298,1.844,299,2.939,300,2.939,301,2.939,302,2.939,303,1.844,304,2.481,305,2.939,306,1.844,307,2.939,308,2.939,309,2.939,310,1.844,311,2.481,312,1.557,313,1.557,314,1.227,315,1.955,316,1.557,317,1.844,318,1.844,319,1.844,320,1.844,321,1.844,322,2.481,323,1.844,324,2.939,325,2.939,326,1.844,327,1.557,328,1.557,329,2.939,330,1.844,331,1.844,332,1.557,333,1.844,334,2.939,335,1.844,336,2.939,337,1.844,338,2.939,339,1.557,340,1.557,341,1.557,342,1.557,343,1.844,344,1.844,345,1.844,346,1.557]],["title/classes/AdminUserViewModel.html",[0,0.099,140,2.044]],["body/classes/AdminUserViewModel.html",[0,0.101,1,1.537,2,1.063,3,0.284,4,0.25,5,0.25,7,2.041,8,2.376,9,3.936,10,0.284,11,1.542,12,2.925,13,2.153,14,2.007,15,3.194,16,2.153,18,0.766,19,0.027,20,1.113,26,0.911,32,2.579,39,0.319,45,0.284,48,0.013,49,0.018,50,0.013,64,3.936,94,3.101,111,3.458,112,1.306,113,1.306,114,1.306,140,2.817,173,1.306,176,2.289,233,2.289,347,2.905,348,3.936,349,4.661,350,4.661,351,4.661,352,3.44,353,3.44,354,3.44,355,3.44,356,2.905,357,2.905,358,3.44,359,3.44,360,2.905,361,2.905,362,2.905,363,2.905,364,3.44,365,3.44]],["title/controllers/AppController.html",[51,1.595,366,2.251]],["body/controllers/AppController.html",[0,0.129,3,0.364,4,0.321,5,0.321,10,0.364,19,0.026,20,0.959,21,1.458,26,0.658,39,0.508,45,0.364,48,0.017,49,0.021,50,0.017,51,2.582,53,2.079,61,1.458,71,1.561,81,1.939,156,1.11,175,1.11,366,3.643,367,3.722,368,5.259,369,4.407,370,3.296,371,3.722,372,3.722,373,4.407]],["title/modules/AppModule.html",[260,1.284,374,2.251]],["body/modules/AppModule.html",[0,0.089,1,0.766,3,0.251,4,0.221,5,0.221,19,0.027,39,0.61,41,1.239,45,0.251,48,0.012,49,0.016,50,0.012,52,2.993,53,2.019,59,1.551,156,0.766,175,0.766,232,1.155,260,1.881,261,3.252,262,1.435,263,1.435,264,1.683,265,1.683,266,1.435,267,2.741,268,1.683,272,2.369,273,1.683,276,2.024,278,2.996,279,2.257,280,1.323,281,2.024,282,2.587,283,2.257,366,3.296,370,3.252,371,2.569,372,2.569,374,4.377,375,2.569,376,2.569,377,2.569,378,3.551,379,3.252,380,3.042,381,2.993,382,4.954,383,3.042,384,3.042,385,2.569,386,2.024,387,3.042,388,2.569,389,3.042,390,3.042,391,2.024,392,3.042]],["title/injectables/AppService.html",[199,0.912,370,1.872]],["body/injectables/AppService.html",[0,0.136,3,0.382,4,0.336,5,0.336,10,0.382,19,0.026,20,0.988,26,0.69,39,0.429,45,0.382,48,0.018,49,0.022,50,0.018,61,1.53,71,1.638,81,1.997,156,1.164,199,1.521,200,2.181,368,5.348,370,3.12,393,3.904,394,4.624,395,3.904,396,4.624]],["title/modules/AuthenticationModule.html",[260,1.284,278,1.724]],["body/modules/AuthenticationModule.html",[0,0.102,3,0.288,4,0.253,5,0.253,19,0.027,39,0.591,45,0.288,48,0.013,49,0.018,50,0.013,59,1.776,149,1.776,156,0.877,160,3.38,163,2.105,260,2.019,261,2.601,262,1.643,263,1.643,264,1.927,265,1.927,266,1.643,267,2.944,268,2.944,272,2.601,273,1.927,275,3.539,278,3.29,282,2.105,379,2.601,385,2.941,388,2.941,397,2.941,398,2.941,399,2.941,400,3.702,401,3.483,402,3.483,403,2.584,404,4.7,405,3.483,406,2.941,407,3.483,408,3.483,409,2.941,410,2.941,411,3.483,412,3.483,413,3.483]],["title/injectables/AuthenticationService.html",[160,1.724,199,0.912]],["body/injectables/AuthenticationService.html",[0,0.071,3,0.2,4,0.176,5,0.176,10,0.2,18,0.68,19,0.027,20,0.906,26,0.72,39,0.549,45,0.2,48,0.009,49,0.014,50,0.009,61,1.437,71,1.539,81,1.283,82,2.59,110,2.215,112,1.832,113,1.832,114,1.832,127,2.041,129,2.41,142,2.916,150,2.687,156,0.609,158,2.868,160,1.847,173,1.375,174,1.902,175,1.094,180,2.276,199,0.977,200,1.14,226,2.766,228,1.46,234,1.46,235,1.46,238,2.404,244,2.625,245,1.46,275,1.608,304,2.041,314,1.608,403,1.793,414,2.041,415,3.622,416,3.622,417,3.622,418,2.417,419,2.95,420,5.625,421,2.417,422,3.622,423,2.417,424,3.622,425,3.622,426,2.916,427,2.417,428,3.622,429,3.622,430,4.074,431,2.417,432,2.417,433,2.417,434,2.417,435,2.417,436,2.417,437,2.417,438,2.417,439,2.89,440,2.417,441,3.622,442,2.417,443,2.417,444,3.622,445,2.417,446,3.622,447,2.417,448,2.041,449,4.344,450,2.417,451,2.417,452,3.622,453,3.622,454,3.622,455,2.041,456,2.417,457,2.417,458,2.417,459,2.417,460,3.622,461,2.417,462,2.417]],["title/classes/Challenge.html",[0,0.099,463,1.872]],["body/classes/Challenge.html",[0,0.118,2,1.245,3,0.333,4,0.293,5,0.293,8,2.638,10,0.333,11,1.711,14,2.169,18,0.717,19,0.026,20,1.056,21,1.89,26,0.853,28,4.239,30,3.838,39,0.48,40,2.99,41,1.642,45,0.333,48,0.015,49,0.02,50,0.015,280,2.005,463,3.451,464,3.403,465,4.03,466,4.03,467,4.03,468,4.03,469,4.03,470,5.173,471,4.03,472,4.03]],["title/classes/ConfigHelper.html",[0,0.099,386,2.251]],["body/classes/ConfigHelper.html",[0,0.104,2,1.1,3,0.294,4,0.259,5,0.259,10,0.294,17,2.882,18,0.446,19,0.027,20,0.836,23,1.815,26,0.803,32,1.97,39,0.33,45,0.294,48,0.014,49,0.018,50,0.014,61,1.779,71,1.905,81,1.689,123,3.006,174,2.355,232,1.351,386,3.173,473,3.006,474,6.482,475,5.745,476,5.745,477,5.745,478,3.56,479,5.378,480,3.56,481,3.56,482,3.56,483,3.006,484,3.56,485,3.56,486,3.56,487,2.641,488,3.56,489,3.56,490,4.769,491,3.56,492,3.56,493,3.56,494,3.56,495,3.56,496,3.56,497,3.56,498,3.56,499,3.56,500,3.006,501,3.56,502,3.56,503,2.151,504,3.56,505,3.56]],["title/classes/EditAdminDto.html",[0,0.099,131,1.872]],["body/classes/EditAdminDto.html",[0,0.146,1,1.251,2,1.17,3,0.313,4,0.275,5,0.275,7,1.658,10,0.313,11,1.644,12,3.069,13,2.259,14,2.105,15,3.351,16,2.259,18,0.767,19,0.026,20,1.137,21,1.644,26,0.913,32,2.75,39,0.351,42,3.69,43,1.438,45,0.313,48,0.015,49,0.019,50,0.015,108,3.002,131,2.75,157,2.175,175,1.396,506,3.197,507,4.969,508,3.786,509,3.786,510,2.827,511,3.786,512,3.786,513,3.786]],["title/classes/EditJuniorDto.html",[0,0.099,514,1.872]],["body/classes/EditJuniorDto.html",[0,0.153,2,1.259,3,0.336,4,0.296,5,0.296,10,0.336,11,1.723,13,2.339,14,2.18,16,2.339,18,0.759,19,0.026,20,1.154,21,1.723,26,0.904,39,0.378,43,1.546,45,0.336,48,0.016,49,0.02,50,0.016,175,1.446,510,2.928,514,2.883,515,3.44,516,3.178,517,4.073,518,4.073,519,4.073,520,3.466,521,4.073,522,2.71]],["title/modules/GuardsModule.html",[260,1.284,378,2.044]],["body/modules/GuardsModule.html",[0,0.119,1,1.018,3,0.334,4,0.294,5,0.294,19,0.027,39,0.579,45,0.334,48,0.015,49,0.02,50,0.015,59,2.062,156,1.018,164,3.353,232,1.535,260,2.173,262,1.908,263,1.908,264,2.238,265,2.238,266,1.908,267,2.87,268,3.168,272,2.87,273,2.238,276,2.691,280,1.602,281,2.691,282,2.444,283,3.001,378,3.772,391,2.691,523,3.415,524,3.415,525,4.044,526,4.044]],["title/interfaces/JWTToken.html",[439,2.251,527,2.251]],["body/interfaces/JWTToken.html",[3,0.402,4,0.354,5,0.354,10,0.402,11,1.923,18,0.61,19,0.025,20,1.089,45,0.402,48,0.019,49,0.022,50,0.019,150,4.779,439,3.868,527,3.236,528,4.863,529,4.106]],["title/classes/Junior.html",[0,0.099,280,1.045]],["body/classes/Junior.html",[0,0.147,2,1.186,3,0.317,4,0.279,5,0.279,8,2.556,10,0.317,11,1.658,13,2.274,14,2.119,16,2.274,18,0.742,19,0.026,20,1.14,21,1.958,23,2.556,26,0.884,28,4.673,30,3.719,39,0.465,40,2.848,41,1.563,43,1.457,45,0.317,46,3.241,48,0.015,49,0.019,50,0.015,280,1.549,516,3.089,520,2.554,522,2.554,530,3.241,531,3.838,532,3.838,533,3.838,534,3.838,535,3.838]],["title/controllers/JuniorController.html",[51,1.595,381,2.044]],["body/controllers/JuniorController.html",[0,0.067,3,0.189,4,0.166,5,0.166,10,0.189,18,0.588,19,0.027,21,1.757,23,2.141,26,0.793,39,0.54,45,0.189,48,0.009,49,0.013,50,0.009,51,1.078,53,1.078,55,1.929,60,1.929,61,1.757,63,1.52,71,1.881,81,1.23,82,2.824,83,3.96,86,2.931,87,3.96,88,2.931,89,3.545,92,1.929,94,1.52,99,1.929,112,1.78,113,1.78,114,1.78,115,4.802,117,3.96,130,1.929,141,1.929,143,1.929,149,1.165,151,1.929,152,1.929,153,3.545,154,1.929,155,1.929,156,0.575,157,1,160,2.141,161,1.929,162,1.929,163,1.381,164,2.571,165,1.929,166,1.52,167,1.929,168,1.381,169,1.929,171,1.929,173,0.867,174,1.52,175,0.874,177,2.931,180,2.379,182,3.96,183,3.545,184,1.929,185,1.929,186,1.929,187,1.929,188,1.929,191,1.929,194,1.929,195,1.929,197,1.929,280,0.706,381,2.098,419,2.141,426,2.834,514,2.595,536,1.929,537,2.931,538,2.931,539,2.285,540,2.285,541,2.285,542,2.285,543,2.285,544,2.285,545,2.285,546,2.285,547,2.834,548,2.285,549,2.285,550,2.285,551,2.285,552,3.12,553,3.472,554,2.285,555,1.929,556,1.52,557,2.285,558,2.285,559,2.285,560,2.285,561,2.285,562,2.285,563,2.285,564,2.285,565,2.285,566,2.285]],["title/injectables/JuniorEditInterceptor.html",[199,0.912,556,2.251]],["body/injectables/JuniorEditInterceptor.html",[0,0.086,3,0.243,4,0.214,5,0.214,10,0.243,18,0.524,19,0.027,26,0.624,34,1.626,39,0.554,41,1.197,45,0.243,48,0.011,49,0.016,50,0.011,61,0.972,63,1.956,71,1.041,81,1.48,82,2.128,110,2.13,112,1.586,113,1.586,114,1.586,156,0.74,157,1.287,173,1.586,174,1.287,175,0.74,180,1.386,199,1.127,200,1.386,208,3.528,210,2.93,213,3.528,214,3.928,215,4.105,216,4.47,223,2.181,226,2.13,227,3.528,228,1.776,229,2.482,230,2.181,231,1.776,232,1.116,234,1.776,235,1.776,236,2.181,238,2.69,239,1.956,240,2.482,241,2.482,242,3.528,244,2.525,245,1.776,246,5.159,250,4.105,251,3.528,252,4.105,253,3.528,258,2.482,259,2.482,280,0.908,503,1.776,514,2.312,556,2.78,567,2.482,568,2.482,569,2.939,570,3.1,571,2.939,572,2.181,573,2.939,574,4.861,575,4.178]],["title/modules/JuniorModule.html",[260,1.284,379,1.872]],["body/modules/JuniorModule.html",[0,0.108,1,1.229,3,0.305,4,0.268,5,0.268,19,0.027,39,0.589,45,0.305,48,0.014,49,0.019,50,0.014,53,2.303,59,1.88,156,0.928,232,1.4,260,2.078,262,1.739,263,1.739,264,2.041,265,2.041,266,1.739,267,3.029,268,3.029,272,2.702,273,2.041,275,3.249,276,2.454,278,2.489,279,2.736,280,1.14,282,2.228,379,3.516,381,3.308,391,2.454,419,3.41,463,2.702,503,2.228,555,3.114,576,3.114,577,3.114,578,3.114,579,3.688,580,3.688,581,3.688]],["title/injectables/JuniorService.html",[199,0.912,419,1.724]],["body/injectables/JuniorService.html",[0,0.07,3,0.119,4,0.105,5,0.105,10,0.119,13,0.586,14,0.911,16,0.586,18,0.626,19,0.027,20,1.035,26,0.769,34,0.796,39,0.478,41,0.586,43,0.546,45,0.119,48,0.006,49,0.009,50,0.006,61,1.75,71,1.954,75,1.214,79,2.025,80,2.025,81,0.85,82,2.753,94,1.596,110,2.205,112,1.895,113,1.895,114,1.895,120,3.041,126,2.025,129,3.052,156,0.362,157,0.63,173,0.911,174,1.753,175,0.604,180,2.812,199,0.647,200,0.678,210,2.539,226,2.943,228,0.869,231,0.869,232,0.546,234,0.869,235,0.869,238,3.053,244,2.419,245,0.869,256,2.606,280,1.672,295,2.025,311,1.214,312,1.214,313,1.214,314,0.957,315,1.596,316,1.214,322,2.025,327,1.214,328,1.214,332,1.214,339,1.214,340,1.214,341,1.214,342,1.214,346,1.214,419,1.223,448,1.214,463,2.851,487,1.067,503,0.869,514,1.993,516,2.215,537,3.041,538,2.025,547,2.176,568,1.214,570,1.78,572,1.067,582,1.214,583,2.399,584,2.399,585,2.399,586,2.399,587,2.399,588,3.601,589,2.399,590,3.086,591,1.438,592,2.399,593,1.438,594,2.399,595,2.399,596,1.438,597,2.399,598,1.438,599,2.399,600,1.438,601,2.399,602,1.438,603,1.438,604,2.399,605,1.438,606,2.025,607,2.399,608,2.399,609,2.399,610,2.399,611,2.399,612,2.399,613,1.438,614,2.399,615,2.399,616,2.399,617,1.438,618,0.957,619,1.438,620,1.214,621,1.438,622,1.438,623,1.438,624,1.214,625,1.438,626,1.438,627,2.399,628,3.086,629,2.399,630,1.438,631,1.438,632,1.438,633,1.438,634,1.438,635,1.438,636,1.438,637,1.438,638,1.438,639,1.438,640,2.399,641,2.399,642,1.438,643,1.438,644,1.438,645,2.399,646,1.438,647,2.399,648,1.438,649,1.438,650,1.438,651,2.399,652,3.086,653,2.399,654,1.438,655,1.438,656,1.438,657,1.214,658,1.438,659,1.438,660,1.438,661,1.438,662,1.438,663,1.438,664,1.438,665,1.438,666,1.438,667,1.438,668,1.438,669,1.438,670,1.438,671,1.438,672,1.438]],["title/classes/JuniorUserViewModel.html",[0,0.099,618,2.251]],["body/classes/JuniorUserViewModel.html",[0,0.113,2,1.194,3,0.319,4,0.281,5,0.281,8,1.97,10,0.319,11,1.666,13,2.281,14,2.126,16,2.281,18,0.772,19,0.026,20,1.142,26,0.919,39,0.358,45,0.319,48,0.015,49,0.019,50,0.015,112,1.467,113,1.467,114,1.467,173,1.467,280,1.834,348,4.252,356,3.263,357,3.263,360,3.263,361,3.263,362,3.263,363,3.263,503,2.335,516,3.099,618,3.35,673,3.263,674,5.035,675,3.864,676,3.864,677,3.864,678,3.864,679,3.864]],["title/injectables/JwtStrategy.html",[199,0.912,400,2.044]],["body/injectables/JwtStrategy.html",[0,0.115,3,0.324,4,0.285,5,0.285,10,0.324,18,0.491,19,0.027,26,0.758,34,2.168,39,0.553,45,0.324,48,0.015,49,0.019,50,0.015,61,1.296,71,1.388,81,1.8,82,2.468,112,1.487,113,1.487,114,1.487,128,3.308,149,2.59,156,0.986,163,2.368,173,2.14,199,1.37,200,1.848,400,3.07,406,3.308,410,3.308,430,3.308,620,4.29,680,3.308,681,3.918,682,5.08,683,3.918,684,3.918,685,3.918,686,3.918,687,3.308,688,3.918,689,3.918,690,3.918,691,3.918,692,3.918,693,3.918,694,3.918,695,3.918]],["title/classes/LoginAdminDto.html",[0,0.099,142,2.044]],["body/classes/LoginAdminDto.html",[0,0.154,1,1.318,2,1.268,3,0.339,4,0.299,5,0.299,7,1.796,10,0.339,11,1.731,12,3.189,17,3.482,18,0.656,19,0.026,20,1.064,21,1.731,26,0.781,39,0.38,42,3.482,43,1.558,45,0.339,48,0.016,49,0.02,50,0.016,108,3.162,142,3.162,157,2.291,175,1.614,510,3.094,696,3.465,697,5.233,698,4.103,699,4.103,700,4.103]],["title/classes/LoginJuniorDto.html",[0,0.099,426,2.044]],["body/classes/LoginJuniorDto.html",[0,0.159,2,1.336,3,0.357,4,0.315,5,0.315,10,0.357,11,1.789,14,2.241,18,0.678,19,0.026,20,1.084,21,1.789,26,0.808,39,0.401,43,1.641,45,0.357,48,0.017,49,0.021,50,0.017,175,1.636,426,3.268,463,3.267,510,3.247,701,3.65,702,4.323,703,4.323]],["title/classes/RegisterAdminDto.html",[0,0.099,104,2.044]],["body/classes/RegisterAdminDto.html",[0,0.138,1,1.186,2,1.08,3,0.289,4,0.254,5,0.254,7,1.53,10,0.289,11,1.558,12,2.948,13,2.17,15,3.219,16,2.17,17,3.219,18,0.746,19,0.026,20,1.117,21,1.969,26,0.889,32,2.606,39,0.324,42,3.134,43,1.326,45,0.289,48,0.013,49,0.018,50,0.013,104,2.846,108,2.846,157,2.062,175,1.698,510,3.327,704,2.95,705,4.71,706,3.494,707,3.494,708,3.494,709,3.494,710,3.494,711,3.494]],["title/classes/RegisterJuniorDto.html",[0,0.099,547,2.044]],["body/classes/RegisterJuniorDto.html",[0,0.152,2,1.25,3,0.334,4,0.294,5,0.294,10,0.334,11,1.715,13,2.332,16,2.332,18,0.718,19,0.026,20,1.119,21,1.893,26,0.855,39,0.375,43,1.535,45,0.334,48,0.015,49,0.02,50,0.015,175,1.673,510,3.256,516,3.168,520,2.691,522,2.691,547,3.133,712,3.415,713,4.044,714,4.044,715,3.415,716,4.044]],["title/classes/ResetJuniorDto.html",[0,0.099,552,2.251]],["body/classes/ResetJuniorDto.html",[0,0.164,2,1.412,3,0.377,4,0.332,5,0.332,10,0.377,11,1.851,18,0.573,19,0.026,20,0.981,21,1.511,26,0.682,39,0.424,43,1.734,45,0.377,48,0.017,49,0.021,50,0.017,175,1.523,510,2.853,516,3.349,520,3.039,522,3.039,552,3.724,715,3.857,717,3.857,718,4.568]],["title/guards/RolesGuard.html",[164,1.724,719,2.509]],["body/guards/RolesGuard.html",[0,0.08,1,1.17,3,0.224,4,0.197,5,0.197,10,0.224,14,1.765,18,0.583,19,0.027,20,0.814,23,1.383,26,0.694,39,0.541,41,1.105,45,0.224,48,0.01,49,0.015,50,0.01,61,1.305,71,1.646,81,1.397,82,2.476,112,1.765,113,1.765,114,1.765,156,0.683,164,2.011,168,3.276,173,1.498,174,2.476,175,1.17,180,2.192,199,1.064,210,3.23,212,3.448,214,3.786,223,2.013,226,2.601,231,1.639,232,1.03,236,2.013,237,2.013,238,3.31,239,1.805,280,0.838,281,1.805,391,1.805,570,3.448,572,2.013,624,2.291,720,2.713,721,2.291,722,5.103,723,3.945,724,2.713,725,5.656,726,2.713,727,3.945,728,2.713,729,3.945,730,2.713,731,2.291,732,2.713,733,2.713,734,2.713,735,2.713,736,2.713,737,2.713,738,2.713,739,3.945,740,2.713,741,2.713,742,3.945,743,2.713,744,2.713,745,2.713,746,2.713,747,2.713]],["title/coverage.html",[748,3.89]],["body/coverage.html",[0,0.187,1,0.983,5,0.195,6,2.258,18,0.335,19,0.026,25,1.984,35,1.984,48,0.01,49,0.015,50,0.01,51,2.174,52,1.616,54,2.258,104,1.616,110,1.364,131,1.48,140,1.616,142,1.616,149,1.364,158,1.364,160,1.364,164,1.364,166,1.78,170,1.78,199,1.567,201,2.258,266,1.262,280,0.827,284,2.258,315,1.78,347,2.258,366,1.78,367,2.258,370,1.48,381,1.616,386,1.78,393,2.258,400,1.616,414,2.258,419,1.364,426,1.616,439,1.78,455,3.296,463,1.48,464,2.258,473,2.258,506,2.258,514,1.48,515,2.258,527,1.78,529,2.258,530,2.258,536,2.258,547,1.616,552,1.78,556,1.78,567,2.258,582,2.258,618,1.78,657,5.696,673,2.258,680,2.258,696,2.258,701,2.258,704,2.258,712,2.258,717,2.258,719,1.984,721,2.258,748,2.258,749,2.258,750,2.674,751,2.674,752,3.904,753,2.674,754,2.258,755,5.811,756,2.674,757,4.61,758,4.61,759,3.904,760,3.904,761,2.674,762,2.674,763,2.674,764,2.674,765,5.068,766,3.296,767,5.957,768,4.61,769,4.61,770,3.296,771,5.068,772,2.674,773,2.674,774,2.674,775,2.674,776,2.258,777,2.258,778,1.984,779,2.258,780,2.258,781,2.258,782,2.674,783,2.674]],["title/dependencies.html",[263,1.918,784,2.829]],["body/dependencies.html",[0,0.158,19,0.027,24,3.623,41,1.748,43,1.629,48,0.016,49,0.021,50,0.016,149,2.187,156,1.08,163,2.592,230,3.183,232,1.629,263,2.024,314,2.855,403,3.183,687,4.546,731,3.623,785,5.883,786,4.29,787,4.29,788,4.29,789,4.29,790,4.29,791,4.29,792,4.29,793,4.29,794,4.29,795,4.29,796,4.29,797,4.29,798,4.29,799,4.29,800,4.29,801,4.29,802,4.29,803,4.29,804,4.29]],["title/miscellaneous/enumerations.html",[805,1.334,806,3.433]],["body/miscellaneous/enumerations.html",[1,1.297,10,0.425,19,0.023,48,0.02,49,0.023,50,0.02,168,3.634,280,1.592,805,2.43,806,4.35,807,5.151,808,5.151,809,5.151]],["title/miscellaneous/functions.html",[805,1.334,810,3.433]],["body/miscellaneous/functions.html",[10,0.414,19,0.024,48,0.019,49,0.023,50,0.019,61,1.659,226,2.556,266,2.971,776,4.234,780,4.234,781,5.318,805,2.365,810,4.234,811,5.014,812,5.014]],["title/index.html",[10,0.234,813,2.829,814,2.829]],["body/index.html",[4,0.24,7,1.445,19,0.025,48,0.013,49,0.017,50,0.013,51,1.556,53,1.556,67,2.786,102,2.786,108,1.994,121,3.825,210,1.826,395,2.786,483,2.786,487,2.448,500,4.368,606,2.786,749,2.786,815,3.3,816,3.3,817,4.53,818,3.3,819,3.3,820,3.3,821,3.3,822,3.3,823,3.3,824,3.3,825,3.3,826,4.53,827,3.3,828,3.3,829,3.3,830,3.3,831,3.3,832,3.3,833,3.3,834,3.3,835,3.3,836,5.173,837,3.3,838,3.3,839,3.3,840,6.029,841,3.3,842,3.3,843,3.3,844,5.836,845,3.3,846,3.3,847,4.53,848,3.3,849,3.3,850,6.029,851,3.3,852,3.3,853,3.3,854,3.3,855,3.3,856,3.3,857,3.3,858,4.53,859,3.3,860,3.3,861,3.3,862,3.3,863,3.3,864,3.3,865,3.3,866,4.53,867,3.3,868,3.3,869,4.53,870,3.3,871,3.3,872,4.53,873,4.53,874,3.3,875,3.3,876,3.3,877,3.3,878,2.786,879,3.3,880,3.3,881,3.3,882,3.3,883,3.3,884,3.3,885,3.3,886,3.3,887,3.3,888,3.3,889,3.3,890,3.3,891,3.3,892,3.3,893,3.3,894,3.3]],["title/modules.html",[262,2.173]],["body/modules.html",[19,0.022,48,0.018,49,0.022,50,0.018,261,2.657,262,2.264,278,2.447,374,3.194,378,2.901,379,2.657,878,5.54,895,6.561,896,6.561,897,6.561]],["title/overview.html",[898,3.89]],["body/overview.html",[2,1.066,19,0.026,48,0.013,49,0.018,50,0.013,53,1.628,59,1.759,158,3.185,160,3.185,164,2.892,200,1.628,260,1.31,261,3.381,262,1.628,263,1.628,264,1.91,265,1.91,266,1.628,267,1.91,268,1.91,269,2.914,270,2.914,271,2.914,272,2.585,273,1.91,278,3.24,370,2.93,374,4.405,375,2.914,376,2.914,377,2.914,378,3.428,379,3.381,397,2.914,398,2.914,399,2.914,400,3.199,419,3.185,523,2.914,524,2.914,527,2.296,576,2.914,577,2.914,578,2.914,719,2.56,898,2.914,899,3.451,900,3.451,901,3.451,902,3.451,903,4.671]],["title/miscellaneous/typealiases.html",[805,1.334,904,4.065]],["body/miscellaneous/typealiases.html",[10,0.429,18,0.652,19,0.023,48,0.02,49,0.023,50,0.02,778,3.857,805,2.452,905,5.198,906,5.105,907,4.39]],["title/miscellaneous/variables.html",[805,1.334,908,3.433]],["body/miscellaneous/variables.html",[1,1.15,8,2.328,10,0.276,18,0.735,19,0.027,20,0.981,23,1.702,25,3.388,32,2.527,35,3.388,47,5.23,48,0.013,49,0.017,50,0.013,149,2.328,166,3.039,168,3.145,220,2.477,239,2.222,254,2.819,315,3.039,409,2.819,754,2.819,766,2.819,770,2.819,777,2.819,778,2.477,779,3.856,805,1.575,906,2.819,907,2.819,908,2.819,909,3.339,910,3.339,911,4.567,912,4.567,913,6.194,914,3.339,915,3.339,916,3.339,917,3.339,918,3.339,919,3.339,920,3.339,921,4.567,922,6.05,923,4.567,924,4.567,925,3.339,926,3.339,927,3.339,928,3.339,929,3.339,930,3.339,931,3.339,932,3.339,933,4.567,934,3.339]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":657,"title":{},"body":{"injectables/JuniorService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":903,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":902,"title":{},"body":{"overview.html":{}}}],["14",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["2/11",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{}}}],["201",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{}}}],["3",{"_index":900,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":899,"title":{},"body":{"overview.html":{}}}],["5432",{"_index":496,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["6.1.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":901,"title":{},"body":{"overview.html":{}}}],["7.12.1",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9000)).tostring",{"_index":668,"title":{},"body":{"injectables/JuniorService.html":{}}}],["access",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthenticationService.html":{},"interfaces/JWTToken.html":{}}}],["accurate",{"_index":205,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["actions",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["activechallenge",{"_index":647,"title":{},"body":{"injectables/JuniorService.html":{}}}],["add",{"_index":296,"title":{},"body":{"injectables/AdminService.html":{}}}],["added",{"_index":459,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["admin",{"_index":1,"title":{"classes/Admin.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"modules/AppModule.html":{},"classes/EditAdminDto.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admin.controller",{"_index":277,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.entity",{"_index":233,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{}}}],["admin.issuperuser",{"_index":746,"title":{},"body":{"guards/RolesGuard.html":{}}}],["admin.service",{"_index":159,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.controller",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/admin.entity",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"guards/RolesGuard.html":{}}}],["admin/admin.module",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["admin/admin.service",{"_index":435,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["admin/dto",{"_index":436,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["admin/super",{"_index":101,"title":{},"body":{"controllers/AdminController.html":{}}}],["admincontroller",{"_index":52,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["admineditinterceptor",{"_index":170,"title":{"injectables/AdminEditInterceptor.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"coverage.html":{}}}],["adminmodule",{"_index":261,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrepo",{"_index":212,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"guards/RolesGuard.html":{}}}],["admins",{"_index":111,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{}}}],["adminservice",{"_index":158,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["adminuserviewmodel",{"_index":140,"title":{"classes/AdminUserViewModel.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"coverage.html":{}}}],["adminuserviewmodel(e",{"_index":319,"title":{},"body":{"injectables/AdminService.html":{}}}],["affected",{"_index":614,"title":{},"body":{"injectables/JuniorService.html":{}}}],["aliases",{"_index":905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{}}}],["allowedroles",{"_index":166,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowedroles(roles.admin",{"_index":183,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["allowedroles(roles.junior",{"_index":560,"title":{},"body":{"controllers/JuniorController.html":{}}}],["allowedroles(roles.superuser",{"_index":190,"title":{},"body":{"controllers/AdminController.html":{}}}],["allows",{"_index":93,"title":{},"body":{"controllers/AdminController.html":{}}}],["amazing",{"_index":879,"title":{},"body":{"index.html":{}}}],["angular",{"_index":835,"title":{},"body":{"index.html":{}}}],["api",{"_index":395,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["app",{"_index":842,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":371,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":366,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":832,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":374,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":370,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":82,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["attempt",{"_index":432,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attempt.expected",{"_index":462,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attemptchallenge",{"_index":583,"title":{},"body":{"injectables/JuniorService.html":{}}}],["attemptchallenge(challengeid",{"_index":592,"title":{},"body":{"injectables/JuniorService.html":{}}}],["attempts",{"_index":145,"title":{},"body":{"controllers/AdminController.html":{}}}],["authentication.consts",{"_index":406,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["authentication.service",{"_index":405,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication/authentication.consts",{"_index":316,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["authentication/authentication.module",{"_index":279,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/JuniorModule.html":{}}}],["authentication/authentication.service",{"_index":161,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["authenticationmodule",{"_index":278,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/JuniorModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":160,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":162,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["author",{"_index":887,"title":{},"body":{"index.html":{}}}],["autologin",{"_index":83,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["await",{"_index":180,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["back",{"_index":608,"title":{},"body":{"injectables/JuniorService.html":{}}}],["backers",{"_index":880,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":228,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["badrequestexception(content.datanotchanged",{"_index":258,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["badrequestexception(content.usernotfound",{"_index":245,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["badrequestexception(errors",{"_index":658,"title":{},"body":{"injectables/JuniorService.html":{}}}],["bcrypt",{"_index":314,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorService.html":{},"dependencies.html":{}}}],["before",{"_index":123,"title":{},"body":{"controllers/AdminController.html":{},"classes/ConfigHelper.html":{}}}],["being",{"_index":304,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{}}}],["belongs",{"_index":100,"title":{},"body":{"controllers/AdminController.html":{}}}],["benefical",{"_index":631,"title":{},"body":{"injectables/JuniorService.html":{}}}],["body",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["body.email",{"_index":247,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["body.email.tolowercase",{"_index":248,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["body.firstname",{"_index":250,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["body.issuperuser",{"_index":255,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["body.lastname",{"_index":252,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["body.phonenumber",{"_index":574,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["bool",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":32,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/RegisterAdminDto.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":266,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":897,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":895,"title":{},"body":{"modules.html":{}}}],["building",{"_index":827,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":216,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["canactivate",{"_index":722,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":727,"title":{},"body":{"guards/RolesGuard.html":{}}}],["carried",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["case",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{}}}],["challenge",{"_index":463,"title":{"classes/Challenge.html":{}},"body":{"classes/Challenge.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/LoginJuniorDto.html":{},"coverage.html":{}}}],["challengedata",{"_index":671,"title":{},"body":{"injectables/JuniorService.html":{}}}],["challengeid",{"_index":594,"title":{},"body":{"injectables/JuniorService.html":{}}}],["challengerepo",{"_index":590,"title":{},"body":{"injectables/JuniorService.html":{}}}],["challengeresponse",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["change",{"_index":299,"title":{},"body":{"injectables/AdminService.html":{}}}],["changed",{"_index":225,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["check",{"_index":219,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["class",{"_index":0,"title":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"overview.html":{}}}],["cleaner",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_adminmodule",{"_index":269,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":270,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":271,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":397,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":398,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":399,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_guardsmodule",{"_index":523,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule_exports",{"_index":524,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_juniormodule",{"_index":576,"title":{},"body":{"modules/JuniorModule.html":{},"overview.html":{}}}],["cluster_juniormodule_exports",{"_index":577,"title":{},"body":{"modules/JuniorModule.html":{},"overview.html":{}}}],["cluster_juniormodule_providers",{"_index":578,"title":{},"body":{"modules/JuniorModule.html":{},"overview.html":{}}}],["code",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{}}}],["column",{"_index":28,"title":{},"body":{"classes/Admin.html":{},"classes/Challenge.html":{},"classes/Junior.html":{}}}],["column({default",{"_index":33,"title":{},"body":{"classes/Admin.html":{}}}],["common/transformers",{"_index":44,"title":{},"body":{"classes/Admin.html":{}}}],["compare",{"_index":434,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["compare(attempt.provided",{"_index":461,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["compodoc",{"_index":817,"title":{},"body":{"index.html":{}}}],["confighandler",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["confighelper",{"_index":386,"title":{"classes/ConfigHelper.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["confighelper.getjwtsecret",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":312,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["conflictexception(content.adminalreadyexists",{"_index":324,"title":{},"body":{"injectables/AdminService.html":{}}}],["conflictexception(content.junioralreadyexists",{"_index":640,"title":{},"body":{"injectables/JuniorService.html":{}}}],["conflictexception(content.usernotfound",{"_index":646,"title":{},"body":{"injectables/JuniorService.html":{}}}],["connection",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["consider",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{}}}],["const",{"_index":238,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["constructor",{"_index":173,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["constructor(adminrepo",{"_index":209,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":418,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(entity",{"_index":348,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["constructor(juniorrepo",{"_index":568,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["constructor(private",{"_index":372,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["constructor(reflector",{"_index":724,"title":{},"body":{"guards/RolesGuard.html":{}}}],["contain",{"_index":864,"title":{},"body":{"index.html":{}}}],["container",{"_index":854,"title":{},"body":{"index.html":{}}}],["contains",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{}}}],["content",{"_index":234,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["content.created",{"_index":332,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["content.json",{"_index":235,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["content.updated",{"_index":346,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["context",{"_index":223,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":734,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":240,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":735,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":51,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/JuniorController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/JuniorController.html":{},"coverage.html":{},"index.html":{}}}],["controller('admin",{"_index":172,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('junior",{"_index":557,"title":{},"body":{"controllers/JuniorController.html":{}}}],["controllers",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/JuniorController.html":{},"modules/JuniorModule.html":{},"index.html":{},"overview.html":{}}}],["convert",{"_index":350,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["corrected",{"_index":609,"title":{},"body":{"injectables/JuniorService.html":{}}}],["coverage",{"_index":748,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":84,"title":{},"body":{"controllers/AdminController.html":{}}}],["create(@body",{"_index":192,"title":{},"body":{"controllers/AdminController.html":{}}}],["create(userdata",{"_index":103,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin",{"_index":287,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(details",{"_index":293,"title":{},"body":{"injectables/AdminService.html":{}}}],["createjunior",{"_index":584,"title":{},"body":{"injectables/JuniorService.html":{}}}],["createjunior(details",{"_index":595,"title":{},"body":{"injectables/JuniorService.html":{}}}],["createparamdecorator((data",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtest",{"_index":85,"title":{},"body":{"controllers/AdminController.html":{}}}],["createtest(@body",{"_index":179,"title":{},"body":{"controllers/AdminController.html":{}}}],["createtest(userdata",{"_index":116,"title":{},"body":{"controllers/AdminController.html":{}}}],["current",{"_index":97,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{}}}],["currently",{"_index":126,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JuniorService.html":{}}}],["data",{"_index":220,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":500,"title":{},"body":{"classes/ConfigHelper.html":{},"index.html":{}}}],["datachanged",{"_index":246,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["db",{"_index":493,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["deal",{"_index":286,"title":{},"body":{"injectables/AdminService.html":{}}}],["decided",{"_index":863,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":265,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["decorator",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":21,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"classes/Challenge.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["default",{"_index":47,"title":{},"body":{"classes/Admin.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["deleted",{"_index":858,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":263,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{},"index.html":{}}}],["designed",{"_index":203,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{}}}],["details",{"_index":295,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["details.email",{"_index":338,"title":{},"body":{"injectables/AdminService.html":{}}}],["details.email.tolowercase",{"_index":335,"title":{},"body":{"injectables/AdminService.html":{}}}],["details.firstname",{"_index":340,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["details.issuperuser",{"_index":344,"title":{},"body":{"injectables/AdminService.html":{}}}],["details.lastname",{"_index":342,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["details.phonenumber",{"_index":652,"title":{},"body":{"injectables/JuniorService.html":{}}}],["development",{"_index":843,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":504,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["docker",{"_index":853,"title":{},"body":{"index.html":{}}}],["documenation",{"_index":816,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":749,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":157,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/EditAdminDto.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["during",{"_index":868,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":866,"title":{},"body":{"index.html":{}}}],["edit",{"_index":86,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["edit(@body",{"_index":195,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["edit(userdata",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["editadmin",{"_index":288,"title":{},"body":{"injectables/AdminService.html":{}}}],["editadmin(details",{"_index":297,"title":{},"body":{"injectables/AdminService.html":{}}}],["editadmindto",{"_index":131,"title":{"classes/EditAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/EditAdminDto.html":{},"coverage.html":{}}}],["editing",{"_index":507,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["editjunior",{"_index":585,"title":{},"body":{"injectables/JuniorService.html":{}}}],["editjunior(details",{"_index":597,"title":{},"body":{"injectables/JuniorService.html":{}}}],["editjuniordto",{"_index":514,"title":{"classes/EditJuniorDto.html":{}},"body":{"classes/EditJuniorDto.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"coverage.html":{}}}],["editting",{"_index":207,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["efficient",{"_index":828,"title":{},"body":{"index.html":{}}}],["email",{"_index":12,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["emailinuse",{"_index":336,"title":{},"body":{"injectables/AdminService.html":{}}}],["encodeuri(await",{"_index":669,"title":{},"body":{"injectables/JuniorService.html":{}}}],["entities",{"_index":503,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity",{"_index":8,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"miscellaneous/variables.html":{}}}],["entity.email",{"_index":359,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["entity.firstname",{"_index":361,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity.id",{"_index":357,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity.issuperuser",{"_index":365,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["entity.lastname",{"_index":363,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity.phonenumber",{"_index":679,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["entry",{"_index":627,"title":{},"body":{"injectables/JuniorService.html":{}}}],["entry.challenge",{"_index":636,"title":{},"body":{"injectables/JuniorService.html":{}}}],["entry.junior",{"_index":637,"title":{},"body":{"injectables/JuniorService.html":{}}}],["enumerations",{"_index":806,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":224,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["errors",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JuniorService.html":{}}}],["errors.length",{"_index":656,"title":{},"body":{"injectables/JuniorService.html":{}}}],["exception",{"_index":633,"title":{},"body":{"injectables/JuniorService.html":{}}}],["executioncontext",{"_index":214,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["expected",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["expiresin",{"_index":412,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["expiry",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["exports",{"_index":268,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["express",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":689,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":685,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":692,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":34,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["find",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findone",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":13,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{}}}],["form",{"_index":308,"title":{},"body":{"injectables/AdminService.html":{}}}],["forwardref",{"_index":275,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/JuniorModule.html":{}}}],["found",{"_index":221,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["framework",{"_index":826,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":94,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminUserViewModel.html":{},"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["function",{"_index":455,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["functions",{"_index":810,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":815,"title":{},"body":{"index.html":{}}}],["generating",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('list",{"_index":197,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["get('login",{"_index":184,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["getadminbyemail",{"_index":289,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyemail(email",{"_index":302,"title":{},"body":{"injectables/AdminService.html":{}}}],["getalladmins",{"_index":87,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["getdatabaseconnection",{"_index":475,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getjunior",{"_index":586,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjunior(id",{"_index":599,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjuniorbyphonenumber",{"_index":587,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjuniorbyphonenumber(phonenumber",{"_index":601,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjwtsecret",{"_index":476,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["gets",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{}}}],["getstatus",{"_index":368,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettestdb",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":813,"title":{"index.html":{}},"body":{}}],["getuserroles",{"_index":723,"title":{},"body":{"guards/RolesGuard.html":{}}}],["getuserroles(id",{"_index":729,"title":{},"body":{"guards/RolesGuard.html":{}}}],["going",{"_index":124,"title":{},"body":{"controllers/AdminController.html":{}}}],["grow",{"_index":875,"title":{},"body":{"index.html":{}}}],["guard",{"_index":719,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":720,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guardsmodule",{"_index":378,"title":{"modules/GuardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules.html":{},"overview.html":{}}}],["hash",{"_index":313,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["hash(registrationdata.password",{"_index":326,"title":{},"body":{"injectables/AdminService.html":{}}}],["hash(valuetohash",{"_index":670,"title":{},"body":{"injectables/JuniorService.html":{}}}],["hashedpassword",{"_index":325,"title":{},"body":{"injectables/AdminService.html":{}}}],["hasrole",{"_index":739,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heavily",{"_index":833,"title":{},"body":{"index.html":{}}}],["here",{"_index":884,"title":{},"body":{"index.html":{}}}],["hit",{"_index":185,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["host",{"_index":491,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["https://nestjs.com",{"_index":891,"title":{},"body":{"index.html":{}}}],["id",{"_index":14,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["identifier",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":693,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":236,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["imports",{"_index":282,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{}}}],["improved",{"_index":661,"title":{},"body":{"injectables/JuniorService.html":{}}}],["including",{"_index":300,"title":{},"body":{"injectables/AdminService.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["inject",{"_index":127,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthenticationService.html":{}}}],["inject(forwardref",{"_index":441,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":199,"title":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":200,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":231,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["injectrepository(admin",{"_index":237,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"guards/RolesGuard.html":{}}}],["injectrepository(challenge",{"_index":621,"title":{},"body":{"injectables/JuniorService.html":{}}}],["injectrepository(junior",{"_index":572,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["inspired",{"_index":834,"title":{},"body":{"index.html":{}}}],["installation",{"_index":839,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":841,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":208,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["intercept(context",{"_index":213,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["interceptor",{"_index":202,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["interceptors/edit.interceptor",{"_index":171,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["interface",{"_index":527,"title":{"interfaces/JWTToken.html":{}},"body":{"interfaces/JWTToken.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":528,"title":{},"body":{"interfaces/JWTToken.html":{}}}],["intergration",{"_index":664,"title":{},"body":{"injectables/JuniorService.html":{}}}],["introduced",{"_index":611,"title":{},"body":{"injectables/JuniorService.html":{}}}],["investigated",{"_index":860,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":42,"title":{},"body":{"classes/Admin.html":{},"classes/EditAdminDto.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["isemail()@column({unique",{"_index":22,"title":{},"body":{"classes/Admin.html":{}}}],["isemail()@isnotempty",{"_index":706,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["isjunior",{"_index":742,"title":{},"body":{"guards/RolesGuard.html":{}}}],["islive",{"_index":477,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["isnotempty",{"_index":510,"title":{},"body":{"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["isnotempty()@isemail",{"_index":698,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["isphonenumber",{"_index":522,"title":{},"body":{"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["isphonenumber('fi",{"_index":520,"title":{},"body":{"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["isphonenumber('fi')@column({unique",{"_index":534,"title":{},"body":{"classes/Junior.html":{}}}],["isphonenumber('fi')@isnotempty",{"_index":715,"title":{},"body":{"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["issue",{"_index":80,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JuniorService.html":{}}}],["issuperuser",{"_index":15,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["jest.fn",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.fn(entity",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":882,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":470,"title":{},"body":{"classes/Challenge.html":{}}}],["jsondatatoboolean",{"_index":35,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["junior",{"_index":280,"title":{"classes/Junior.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"classes/Challenge.html":{},"modules/GuardsModule.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["junior.controller",{"_index":580,"title":{},"body":{"modules/JuniorModule.html":{}}}],["junior.entity",{"_index":471,"title":{},"body":{"classes/Challenge.html":{}}}],["junior.service",{"_index":555,"title":{},"body":{"controllers/JuniorController.html":{},"modules/JuniorModule.html":{}}}],["junior/dto",{"_index":437,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["junior/entities",{"_index":281,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{},"guards/RolesGuard.html":{}}}],["junior/junior.controller",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["junior/junior.module",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["junior/junior.service",{"_index":438,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["juniorcontroller",{"_index":381,"title":{"controllers/JuniorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/JuniorController.html":{},"modules/JuniorModule.html":{},"coverage.html":{}}}],["junioreditinterceptor",{"_index":556,"title":{"injectables/JuniorEditInterceptor.html":{}},"body":{"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"coverage.html":{}}}],["juniormodule",{"_index":379,"title":{"modules/JuniorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/JuniorModule.html":{},"modules.html":{},"overview.html":{}}}],["juniorrepo",{"_index":570,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["juniorservice",{"_index":419,"title":{"injectables/JuniorService.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"coverage.html":{},"overview.html":{}}}],["junioruserviewmodel",{"_index":618,"title":{"classes/JuniorUserViewModel.html":{}},"body":{"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"coverage.html":{}}}],["junioruserviewmodel(e",{"_index":623,"title":{},"body":{"injectables/JuniorService.html":{}}}],["jwt",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthenticationModule.html":{},"controllers/JuniorController.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.expiry",{"_index":413,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwt.model",{"_index":440,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwt.secret",{"_index":410,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwt.strategy",{"_index":407,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtfromrequest",{"_index":691,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":402,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.register",{"_index":408,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtservice",{"_index":420,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtstrategy",{"_index":400,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":439,"title":{"interfaces/JWTToken.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/JWTToken.html":{},"coverage.html":{}}}],["kamil",{"_index":888,"title":{},"body":{"index.html":{}}}],["kept",{"_index":456,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastname",{"_index":16,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{}}}],["legend",{"_index":264,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["license",{"_index":894,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":873,"title":{},"body":{"index.html":{}}}],["list",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["listalladmins",{"_index":290,"title":{},"body":{"injectables/AdminService.html":{}}}],["listalljuniors",{"_index":588,"title":{},"body":{"injectables/JuniorService.html":{}}}],["literal",{"_index":429,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["live",{"_index":125,"title":{},"body":{"controllers/AdminController.html":{}}}],["log",{"_index":146,"title":{},"body":{"controllers/AdminController.html":{}}}],["logging",{"_index":697,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["login",{"_index":88,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["login(@body",{"_index":188,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["login(userdata",{"_index":141,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["loginadmin",{"_index":415,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginadmin(logindata",{"_index":422,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginadmindto",{"_index":142,"title":{"classes/LoginAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AuthenticationService.html":{},"classes/LoginAdminDto.html":{},"coverage.html":{}}}],["logindata",{"_index":424,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindata.challenge",{"_index":451,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindata.password",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginjunior",{"_index":416,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginjunior(logindata",{"_index":425,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginjuniordto",{"_index":426,"title":{"classes/LoginJuniorDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"classes/LoginJuniorDto.html":{},"coverage.html":{}}}],["lowercase",{"_index":25,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":486,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["matching",{"_index":49,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(1000",{"_index":666,"title":{},"body":{"injectables/JuniorService.html":{}}}],["math.random",{"_index":667,"title":{},"body":{"injectables/JuniorService.html":{}}}],["message",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["metadata",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":218,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["methods",{"_index":81,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["miscellaneous",{"_index":805,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":872,"title":{},"body":{"index.html":{}}}],["mocktype",{"_index":906,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":847,"title":{},"body":{"index.html":{}}}],["model",{"_index":9,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{}}}],["models",{"_index":206,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["modified",{"_index":660,"title":{},"body":{"injectables/JuniorService.html":{}}}],["module",{"_index":260,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["modules",{"_index":262,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":487,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/JuniorService.html":{},"index.html":{}}}],["myśliwiec",{"_index":889,"title":{},"body":{"index.html":{}}}],["n",{"_index":820,"title":{},"body":{"index.html":{}}}],["name",{"_index":113,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["need",{"_index":606,"title":{},"body":{"injectables/JuniorService.html":{},"index.html":{}}}],["nest",{"_index":836,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":893,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":227,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["nestjs/common",{"_index":156,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/GuardsModule.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":731,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":403,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":163,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthenticationModule.html":{},"controllers/JuniorController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":232,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/ConfigHelper.html":{},"modules/GuardsModule.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["new",{"_index":110,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"coverage.html":{}}}],["next",{"_index":215,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["next.handle",{"_index":259,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["node.js",{"_index":825,"title":{},"body":{"index.html":{}}}],["note",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{}}}],["npm",{"_index":840,"title":{},"body":{"index.html":{}}}],["number",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nuta",{"_index":502,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["object",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":229,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["onetoone",{"_index":469,"title":{},"body":{"classes/Challenge.html":{}}}],["onetoone((type",{"_index":472,"title":{},"body":{"classes/Challenge.html":{}}}],["onetoone(undefined)@joincolumn",{"_index":467,"title":{},"body":{"classes/Challenge.html":{}}}],["open",{"_index":874,"title":{},"body":{"index.html":{}}}],["optional",{"_index":114,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["otherwise",{"_index":102,"title":{},"body":{"controllers/AdminController.html":{},"index.html":{}}}],["out",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["outside",{"_index":852,"title":{},"body":{"index.html":{}}}],["overview",{"_index":898,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":818,"title":{},"body":{"index.html":{}}}],["package",{"_index":784,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":176,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["parents",{"_index":458,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["pass",{"_index":607,"title":{},"body":{"injectables/JuniorService.html":{}}}],["passed",{"_index":859,"title":{},"body":{"index.html":{}}}],["passport",{"_index":687,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":404,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":688,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":690,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":17,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/ConfigHelper.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["passwordmatch",{"_index":460,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["payload",{"_index":684,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":695,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":516,"title":{},"body":{"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["phonenumberinuse",{"_index":653,"title":{},"body":{"injectables/JuniorService.html":{}}}],["pin:${pin",{"_index":643,"title":{},"body":{"injectables/JuniorService.html":{}}}],["please",{"_index":67,"title":{},"body":{"controllers/AdminController.html":{},"index.html":{}}}],["port",{"_index":494,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["post",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('edit",{"_index":194,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('login",{"_index":187,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('register",{"_index":191,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('registertemp",{"_index":178,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('reset",{"_index":553,"title":{},"body":{"controllers/JuniorController.html":{}}}],["postgres",{"_index":490,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["posts",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{}}}],["prefix",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["primarygeneratedcolumn",{"_index":40,"title":{},"body":{"classes/Admin.html":{},"classes/Challenge.html":{},"classes/Junior.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":30,"title":{},"body":{"classes/Admin.html":{},"classes/Challenge.html":{},"classes/Junior.html":{}}}],["private",{"_index":174,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["process.env.jwt",{"_index":484,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.node_env",{"_index":482,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_db_name",{"_index":501,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_hostname",{"_index":492,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_password",{"_index":499,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_port",{"_index":495,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_username",{"_index":498,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["prod",{"_index":489,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["production",{"_index":483,"title":{},"body":{"classes/ConfigHelper.html":{},"index.html":{}}}],["progressive",{"_index":824,"title":{},"body":{"index.html":{}}}],["project",{"_index":869,"title":{},"body":{"index.html":{}}}],["promise",{"_index":226,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["provide",{"_index":204,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["provided",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["providers",{"_index":267,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["providing",{"_index":632,"title":{},"body":{"injectables/JuniorService.html":{}}}],["question",{"_index":301,"title":{},"body":{"injectables/AdminService.html":{}}}],["ran",{"_index":851,"title":{},"body":{"index.html":{}}}],["re",{"_index":861,"title":{},"body":{"index.html":{}}}],["read",{"_index":883,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":175,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["reflect",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":725,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":109,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["registeradmin",{"_index":291,"title":{},"body":{"injectables/AdminService.html":{}}}],["registeradmin(registrationdata",{"_index":309,"title":{},"body":{"injectables/AdminService.html":{}}}],["registeradmindto",{"_index":104,"title":{"classes/RegisterAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/RegisterAdminDto.html":{},"coverage.html":{}}}],["registering",{"_index":705,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["registerjunior",{"_index":537,"title":{},"body":{"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["registerjunior(@body",{"_index":558,"title":{},"body":{"controllers/JuniorController.html":{}}}],["registerjunior(registrationdata",{"_index":604,"title":{},"body":{"injectables/JuniorService.html":{}}}],["registerjunior(userdata",{"_index":546,"title":{},"body":{"controllers/JuniorController.html":{}}}],["registerjuniordto",{"_index":547,"title":{"classes/RegisterJuniorDto.html":{}},"body":{"controllers/JuniorController.html":{},"injectables/JuniorService.html":{},"classes/RegisterJuniorDto.html":{},"coverage.html":{}}}],["registrationdata",{"_index":311,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["registrationdata.email",{"_index":329,"title":{},"body":{"injectables/AdminService.html":{}}}],["registrationdata.firstname",{"_index":327,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["registrationdata.issuperuser",{"_index":330,"title":{},"body":{"injectables/AdminService.html":{}}}],["registrationdata.lastname",{"_index":328,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["registrationdata.phonenumber",{"_index":641,"title":{},"body":{"injectables/JuniorService.html":{}}}],["relations",{"_index":629,"title":{},"body":{"injectables/JuniorService.html":{}}}],["relevant",{"_index":79,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JuniorService.html":{}}}],["remember",{"_index":485,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["removed",{"_index":122,"title":{},"body":{"controllers/AdminController.html":{}}}],["repository",{"_index":210,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["repositorymockfactory",{"_index":779,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["req",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":239,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["request.body",{"_index":241,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["request.userid",{"_index":736,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":273,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["resetjuniordto",{"_index":552,"title":{"classes/ResetJuniorDto.html":{}},"body":{"controllers/JuniorController.html":{},"classes/ResetJuniorDto.html":{},"coverage.html":{}}}],["resetlogin",{"_index":538,"title":{},"body":{"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["resetlogin(@body",{"_index":562,"title":{},"body":{"controllers/JuniorController.html":{}}}],["resetlogin(phonenumber",{"_index":612,"title":{},"body":{"injectables/JuniorService.html":{}}}],["resetlogin(userdata",{"_index":551,"title":{},"body":{"controllers/JuniorController.html":{}}}],["result",{"_index":48,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["returned",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminUserViewModel.html":{}}}],["returning",{"_index":630,"title":{},"body":{"injectables/JuniorService.html":{}}}],["returns",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":168,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.enum",{"_index":732,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.guard",{"_index":526,"title":{},"body":{"modules/GuardsModule.html":{}}}],["roles.includes(role",{"_index":741,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.push(roles.admin",{"_index":745,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.push(roles.junior",{"_index":743,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.push(roles.superuser",{"_index":747,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles/roles.decorator",{"_index":167,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["roles/roles.enum",{"_index":169,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["roles/roles.guard",{"_index":165,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["roles/roles.module",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["rolesguard",{"_index":164,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AdminController.html":{},"modules/GuardsModule.html":{},"controllers/JuniorController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["rolesguard)@allowedroles(roles.admin)@get('list",{"_index":543,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.admin)@get('login",{"_index":90,"title":{},"body":{"controllers/AdminController.html":{}}}],["rolesguard)@allowedroles(roles.admin)@post('register",{"_index":549,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.admin)@useinterceptors(junioreditinterceptor)@post('edit",{"_index":541,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.junior)@get('login",{"_index":539,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.superuser)@get('list",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{}}}],["rolesguard)@allowedroles(roles.superuser)@useinterceptors(admineditinterceptor)@usepipes(new",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{}}}],["rolesguard)@allowedroles(roles.superuser)@usepipes(new",{"_index":105,"title":{},"body":{"controllers/AdminController.html":{}}}],["route",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["routes",{"_index":865,"title":{},"body":{"index.html":{}}}],["run",{"_index":844,"title":{},"body":{"index.html":{}}}],["running",{"_index":396,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":230,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"dependencies.html":{}}}],["s",{"_index":823,"title":{},"body":{"index.html":{}}}],["saltrounds",{"_index":315,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["same",{"_index":615,"title":{},"body":{"injectables/JuniorService.html":{}}}],["scalable",{"_index":829,"title":{},"body":{"index.html":{}}}],["searched",{"_index":305,"title":{},"body":{"injectables/AdminService.html":{}}}],["secret",{"_index":409,"title":{},"body":{"modules/AuthenticationModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":694,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":488,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["security",{"_index":635,"title":{},"body":{"injectables/JuniorService.html":{}}}],["serve",{"_index":821,"title":{},"body":{"index.html":{}}}],["server",{"_index":830,"title":{},"body":{"index.html":{}}}],["service",{"_index":285,"title":{},"body":{"injectables/AdminService.html":{}}}],["setchallenge",{"_index":589,"title":{},"body":{"injectables/JuniorService.html":{}}}],["setchallenge(phonenumber",{"_index":616,"title":{},"body":{"injectables/JuniorService.html":{}}}],["setmetadata('roles",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":831,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":411,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["simple",{"_index":92,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["sms",{"_index":663,"title":{},"body":{"injectables/JuniorService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["spawned",{"_index":857,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":877,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":856,"title":{},"body":{"index.html":{}}}],["src/.../admin.decorator.ts",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.consts.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transformers.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/admin/admin.controller.ts",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.controller.ts:100",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:34",{"_index":119,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:46",{"_index":91,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:59",{"_index":144,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:73",{"_index":107,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:88",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.decorator.ts",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/admin.entity.ts",{"_index":6,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{}}}],["src/admin/admin.entity.ts:12",{"_index":31,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:15",{"_index":29,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:18",{"_index":37,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:21",{"_index":38,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:25",{"_index":27,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:28",{"_index":36,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.module.ts",{"_index":274,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":284,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/admin.service.ts:15",{"_index":292,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:28",{"_index":306,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:36",{"_index":303,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:43",{"_index":294,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:51",{"_index":310,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:67",{"_index":298,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/dto/edit.dto.ts",{"_index":506,"title":{},"body":{"classes/EditAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/edit.dto.ts:12",{"_index":508,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:14",{"_index":509,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:16",{"_index":513,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:18",{"_index":512,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:9",{"_index":511,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/login.dto.ts",{"_index":696,"title":{},"body":{"classes/LoginAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/login.dto.ts:10",{"_index":699,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["src/admin/dto/login.dto.ts:13",{"_index":700,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["src/admin/dto/register.dto.ts",{"_index":704,"title":{},"body":{"classes/RegisterAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/register.dto.ts:10",{"_index":707,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:13",{"_index":711,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:16",{"_index":708,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:19",{"_index":710,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:22",{"_index":709,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/interceptors/edit.interceptor.ts",{"_index":201,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"coverage.html":{}}}],["src/admin/interceptors/edit.interceptor.ts:13",{"_index":211,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["src/admin/interceptors/edit.interceptor.ts:28",{"_index":217,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["src/admin/vm/admin.vm.ts",{"_index":347,"title":{},"body":{"classes/AdminUserViewModel.html":{},"coverage.html":{}}}],["src/admin/vm/admin.vm.ts:10",{"_index":355,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:11",{"_index":349,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:7",{"_index":354,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:8",{"_index":352,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:9",{"_index":353,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/app.controller.ts",{"_index":367,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":369,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":393,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":394,"title":{},"body":{"injectables/AppService.html":{}}}],["src/authentication/authentication.consts.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/authentication.module.ts",{"_index":401,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/authentication.service.ts",{"_index":414,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/authentication/authentication.service.ts:12",{"_index":421,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:20",{"_index":423,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:28",{"_index":427,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:35",{"_index":431,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/jwt.model.ts",{"_index":529,"title":{},"body":{"interfaces/JWTToken.html":{},"coverage.html":{}}}],["src/authentication/jwt.strategy.ts",{"_index":680,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/authentication/jwt.strategy.ts:16",{"_index":683,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/jwt.strategy.ts:7",{"_index":681,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/transformers.ts",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/confighandler.ts",{"_index":473,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["src/confighandler.ts:13",{"_index":478,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["src/confighandler.ts:5",{"_index":481,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["src/confighandler.ts:9",{"_index":480,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["src/junior/dto/edit.dto.ts",{"_index":515,"title":{},"body":{"classes/EditJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/edit.dto.ts:11",{"_index":517,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/edit.dto.ts:13",{"_index":519,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/edit.dto.ts:6",{"_index":518,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/edit.dto.ts:9",{"_index":521,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/login.dto.ts",{"_index":701,"title":{},"body":{"classes/LoginJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/login.dto.ts:6",{"_index":703,"title":{},"body":{"classes/LoginJuniorDto.html":{}}}],["src/junior/dto/login.dto.ts:9",{"_index":702,"title":{},"body":{"classes/LoginJuniorDto.html":{}}}],["src/junior/dto/register.dto.ts",{"_index":712,"title":{},"body":{"classes/RegisterJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/register.dto.ts:10",{"_index":713,"title":{},"body":{"classes/RegisterJuniorDto.html":{}}}],["src/junior/dto/register.dto.ts:13",{"_index":714,"title":{},"body":{"classes/RegisterJuniorDto.html":{}}}],["src/junior/dto/register.dto.ts:7",{"_index":716,"title":{},"body":{"classes/RegisterJuniorDto.html":{}}}],["src/junior/dto/reset.dto.ts",{"_index":717,"title":{},"body":{"classes/ResetJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/reset.dto.ts:7",{"_index":718,"title":{},"body":{"classes/ResetJuniorDto.html":{}}}],["src/junior/entities/challenge.entity.ts",{"_index":464,"title":{},"body":{"classes/Challenge.html":{},"coverage.html":{}}}],["src/junior/entities/challenge.entity.ts:12",{"_index":468,"title":{},"body":{"classes/Challenge.html":{}}}],["src/junior/entities/challenge.entity.ts:15",{"_index":465,"title":{},"body":{"classes/Challenge.html":{}}}],["src/junior/entities/challenge.entity.ts:8",{"_index":466,"title":{},"body":{"classes/Challenge.html":{}}}],["src/junior/entities/junior.entity.ts",{"_index":530,"title":{},"body":{"classes/Junior.html":{},"coverage.html":{}}}],["src/junior/entities/junior.entity.ts:10",{"_index":531,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/entities/junior.entity.ts:13",{"_index":533,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/entities/junior.entity.ts:17",{"_index":535,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/entities/junior.entity.ts:7",{"_index":532,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/interceptors/edit.interceptor.ts",{"_index":567,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"coverage.html":{}}}],["src/junior/interceptors/edit.interceptor.ts:10",{"_index":569,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["src/junior/interceptors/edit.interceptor.ts:15",{"_index":571,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["src/junior/junior.controller.ts",{"_index":536,"title":{},"body":{"controllers/JuniorController.html":{},"coverage.html":{}}}],["src/junior/junior.controller.ts:23",{"_index":550,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:30",{"_index":540,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:37",{"_index":545,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:42",{"_index":554,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:50",{"_index":542,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:57",{"_index":544,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.module.ts",{"_index":579,"title":{},"body":{"modules/JuniorModule.html":{}}}],["src/junior/junior.service.ts",{"_index":582,"title":{},"body":{"injectables/JuniorService.html":{},"coverage.html":{}}}],["src/junior/junior.service.ts:13",{"_index":591,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:22",{"_index":603,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:26",{"_index":600,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:30",{"_index":602,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:34",{"_index":596,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:38",{"_index":593,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:54",{"_index":605,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:70",{"_index":613,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:78",{"_index":598,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:97",{"_index":617,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/vm/junior.vm.ts",{"_index":673,"title":{},"body":{"classes/JuniorUserViewModel.html":{},"coverage.html":{}}}],["src/junior/vm/junior.vm.ts:4",{"_index":676,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/junior/vm/junior.vm.ts:5",{"_index":677,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/junior/vm/junior.vm.ts:6",{"_index":675,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/junior/vm/junior.vm.ts:7",{"_index":674,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/main.ts",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/roles/roles.decorator.ts",{"_index":777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/roles/roles.enum.ts",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/roles/roles.guard.ts",{"_index":721,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/roles/roles.guard.ts:17",{"_index":728,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:29",{"_index":730,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:9",{"_index":726,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.module.ts",{"_index":525,"title":{},"body":{"modules/GuardsModule.html":{}}}],["start",{"_index":845,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":848,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":849,"title":{},"body":{"index.html":{}}}],["started",{"_index":814,"title":{"index.html":{}},"body":{}}],["starter",{"_index":838,"title":{},"body":{"index.html":{}}}],["statements",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":474,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["status",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{}}}],["stay",{"_index":885,"title":{},"body":{"index.html":{}}}],["str",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.tolocalelowercase",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":686,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":454,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["success",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["successful",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["suffice",{"_index":867,"title":{},"body":{"index.html":{}}}],["super",{"_index":128,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JwtStrategy.html":{}}}],["superuser",{"_index":809,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["superusers",{"_index":136,"title":{},"body":{"controllers/AdminController.html":{}}}],["support",{"_index":878,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":896,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":505,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["system",{"_index":147,"title":{},"body":{"controllers/AdminController.html":{}}}],["table",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["tell",{"_index":95,"title":{},"body":{"controllers/AdminController.html":{}}}],["terms",{"_index":634,"title":{},"body":{"injectables/JuniorService.html":{}}}],["test",{"_index":121,"title":{},"body":{"controllers/AdminController.html":{},"index.html":{}}}],["test/.../mock.ts",{"_index":907,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["test/.../testdb.ts",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/mock.ts",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["test/testdb.sql",{"_index":862,"title":{},"body":{"index.html":{}}}],["test/testdb.ts",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test:e2esupport",{"_index":871,"title":{},"body":{"index.html":{}}}],["testing",{"_index":855,"title":{},"body":{"index.html":{}}}],["tests",{"_index":850,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":876,"title":{},"body":{"index.html":{}}}],["this.adminrepo.find()).map(e",{"_index":318,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.findone",{"_index":320,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.findone(body.id",{"_index":243,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["this.adminrepo.findone(details.id",{"_index":333,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.findone(id",{"_index":744,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.adminrepo.save(details",{"_index":321,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.save(user",{"_index":345,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.editadmin(userdata",{"_index":196,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminbyemail(logindata.email",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.adminservice.listalladmins",{"_index":198,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.registeradmin(userdata",{"_index":181,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.getstatus",{"_index":373,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticationservice.loginadmin(userdata",{"_index":189,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authenticationservice.loginjunior(userdata",{"_index":561,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.challengerepo.findone",{"_index":628,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.remove(activechallenge",{"_index":648,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.remove(entry",{"_index":638,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.save(challengedata",{"_index":672,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.createadmin(admin",{"_index":331,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.createjunior(junior",{"_index":642,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.email",{"_index":358,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["this.firstname",{"_index":360,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["this.getadminbyemail(details.email",{"_index":337,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(registrationdata.email",{"_index":323,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getjuniorbyphonenumber(details.phonenumber",{"_index":654,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getjuniorbyphonenumber(phonenumber",{"_index":645,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getjuniorbyphonenumber(registrationdata.phonenumber",{"_index":639,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getuserroles(id",{"_index":738,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.id",{"_index":356,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["this.issuperuser",{"_index":364,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["this.juniorrepo.find()).map(e",{"_index":622,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.findone",{"_index":625,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.findone(body.id",{"_index":573,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["this.juniorrepo.findone(details.id",{"_index":650,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.findone(id",{"_index":624,"title":{},"body":{"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["this.juniorrepo.save(details",{"_index":626,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.save(user",{"_index":659,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorservice.attemptchallenge(logindata.id",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.juniorservice.editjunior(userdata",{"_index":565,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.juniorservice.listalljuniors",{"_index":566,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.juniorservice.registerjunior(userdata",{"_index":559,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.juniorservice.resetlogin(userdata.phonenumber",{"_index":563,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.jwtservice.sign",{"_index":453,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.lastname",{"_index":362,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["this.phonenumber",{"_index":678,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["this.reflector.get('roles",{"_index":733,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.setchallenge(junior.phonenumber",{"_index":644,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.setchallenge(phonenumber",{"_index":649,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.validateuser",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throw",{"_index":244,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["todo",{"_index":120,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JuniorService.html":{}}}],["token",{"_index":98,"title":{},"body":{"controllers/AdminController.html":{}}}],["touch",{"_index":886,"title":{},"body":{"index.html":{}}}],["transform",{"_index":177,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["transformer",{"_index":24,"title":{},"body":{"classes/Admin.html":{},"dependencies.html":{}}}],["true",{"_index":23,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"classes/ConfigHelper.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":819,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":892,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":904,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":254,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":41,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Challenge.html":{},"classes/Junior.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":276,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{}}}],["typeormmodule.forfeature([admin",{"_index":283,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{}}}],["typeormmodule.forfeature([junior",{"_index":581,"title":{},"body":{"modules/JuniorModule.html":{}}}],["typeormmodule.forroot(confighelper.getdatabaseconnection",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":479,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["typescript",{"_index":837,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":433,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["unauthorizedexception(content.failedlogin",{"_index":452,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["undefined",{"_index":256,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["unique",{"_index":46,"title":{},"body":{"classes/Admin.html":{},"classes/Junior.html":{}}}],["unit",{"_index":870,"title":{},"body":{"index.html":{}}}],["upon",{"_index":662,"title":{},"body":{"injectables/JuniorService.html":{}}}],["use",{"_index":822,"title":{},"body":{"index.html":{}}}],["used",{"_index":108,"title":{},"body":{"controllers/AdminController.html":{},"classes/EditAdminDto.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{},"index.html":{}}}],["useful",{"_index":457,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["useguards",{"_index":154,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useguards(authguard('jwt",{"_index":182,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useguards(undefined",{"_index":89,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useinterceptors",{"_index":155,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useinterceptors(admineditinterceptor",{"_index":193,"title":{},"body":{"controllers/AdminController.html":{}}}],["useinterceptors(junioreditinterceptor",{"_index":564,"title":{},"body":{"controllers/JuniorController.html":{}}}],["usepipes",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["usepipes(new",{"_index":117,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["user",{"_index":129,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorService.html":{}}}],["user.email",{"_index":334,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.firstname",{"_index":339,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["user.id",{"_index":448,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JuniorService.html":{}}}],["user.issuperuser",{"_index":343,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.lastname",{"_index":341,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["user.password",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.phonenumber",{"_index":651,"title":{},"body":{"injectables/JuniorService.html":{}}}],["userdata",{"_index":115,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["userexists",{"_index":322,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["userid",{"_index":430,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/JwtStrategy.html":{}}}],["username",{"_index":497,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["userroles",{"_index":737,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userroles.some((role",{"_index":740,"title":{},"body":{"guards/RolesGuard.html":{}}}],["usertoedit",{"_index":242,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["usertoedit.email",{"_index":249,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["usertoedit.firstname",{"_index":251,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["usertoedit.issuperuser",{"_index":257,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["usertoedit.lastname",{"_index":253,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["usertoedit.phonenumber",{"_index":575,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["valid",{"_index":99,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["validate",{"_index":620,"title":{},"body":{"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":682,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(user",{"_index":655,"title":{},"body":{"injectables/JuniorService.html":{}}}],["validateuser",{"_index":417,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validateuser(attempt",{"_index":428,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validationpipe",{"_index":153,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["validationpipe())@post('edit",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{}}}],["validationpipe())@post('login",{"_index":143,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["validationpipe())@post('register",{"_index":106,"title":{},"body":{"controllers/AdminController.html":{}}}],["validationpipe())@post('registertemp",{"_index":118,"title":{},"body":{"controllers/AdminController.html":{}}}],["validationpipe())@useguards(undefined",{"_index":548,"title":{},"body":{"controllers/JuniorController.html":{}}}],["validator",{"_index":43,"title":{},"body":{"classes/Admin.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"dependencies.html":{}}}],["value",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valuetohash",{"_index":665,"title":{},"body":{"injectables/JuniorService.html":{}}}],["valuetransformer",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":908,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":186,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["viewmodel",{"_index":307,"title":{},"body":{"injectables/AdminService.html":{}}}],["vm",{"_index":351,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["vm/admin.vm",{"_index":317,"title":{},"body":{"injectables/AdminService.html":{}}}],["vm/junior.vm",{"_index":619,"title":{},"body":{"injectables/JuniorService.html":{}}}],["watch",{"_index":846,"title":{},"body":{"index.html":{}}}],["website",{"_index":890,"title":{},"body":{"index.html":{}}}],["whether",{"_index":96,"title":{},"body":{"controllers/AdminController.html":{}}}],["within",{"_index":222,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["workflow",{"_index":610,"title":{},"body":{"injectables/JuniorService.html":{}}}],["you'd",{"_index":881,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":272,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.entity.ts\n        \n\n            \n                Description\n            \n            \n                Entity model for Admin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isSuperUser\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@Column({unique: true, transformer: lowercase})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, transformer: jsonDataToBoolean})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { IsEmail } from 'class-validator';\nimport { lowercase, jsonDataToBoolean } from '../common/transformers';\n\n/**\n * Entity model for Admin.\n */\n@Entity()\nexport class Admin {\n\n    @PrimaryGeneratedColumn('uuid')\n    id: string;\n\n    @Column()\n    firstName: string;\n\n    @Column()\n    lastName: string;\n\n    @Column()\n    password: string;\n\n    @IsEmail()\n    @Column({ unique: true, transformer: lowercase })\n    email: string;\n\n    @Column({ default: false, transformer: jsonDataToBoolean })\n    isSuperUser: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n            \n                Description\n            \n            \n                This controller contains all actions to be carried out on the '/admin' route.\nAll returns consider the body returned in the case of success, please note:\n\nsuccessful GETS return a 200.\nsuccessful POSTS return a 201.\nall errors return a status code and message relevant to the issue.\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                autoLogin\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createTest\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getAllAdmins\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autoLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@Get('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:46\n                \n            \n\n\n            \n                \n                    A simple route that allows the frontend to tell whether the current token is valid, and belongs to an Admin/Super Admin\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \ntrue if successful, false otherwise.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userData: RegisterAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.SUPERUSER)@UsePipes(new ValidationPipe())@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:73\n                \n            \n\n\n            \n                \n                    A route used to register new admins.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRegisterAdminDto\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        string - success message\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTest(userData: RegisterAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('registerTemp')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:34\n                \n            \n\n\n            \n                \n                    TODO: This is a test route and should be removed before going live.\nThis is currently used to inject a new super user.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nRegisterAdminDto\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \nstring success message\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(userData: EditAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.SUPERUSER)@UseInterceptors(AdminEditInterceptor)@UsePipes(new ValidationPipe())@Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:88\n                \n            \n\n\n            \n                \n                    A route used to allow superusers to edit other admins.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                EditAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEditAdminDto\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        string - success message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllAdmins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.SUPERUSER)@Get('list')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:100\n                \n            \n\n\n            \n                \n                    A route used to allow superusers to list other admins.\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        AdminUserViewModel[] - a list of all admins\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userData: LoginAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:59\n                \n            \n\n\n            \n                \n                    A route that attempts to log an admin into the system (generating a JWT).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                LoginAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nLoginAdminDto\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n{ access_token }\n\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UsePipes, ValidationPipe, UseGuards, UseInterceptors, Get } from '@nestjs/common';\nimport { RegisterAdminDto, LoginAdminDto, EditAdminDto } from './dto';\nimport { AdminService } from './admin.service';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RolesGuard } from '../roles/roles.guard';\nimport { AllowedRoles } from '../roles/roles.decorator';\nimport { Roles } from '../roles/roles.enum';\nimport { AdminEditInterceptor } from './interceptors/edit.interceptor';\n\n/**\n * This controller contains all actions to be carried out on the '/admin' route.\n * All returns consider the body returned in the case of success, please note:\n * - successful GETS return a 200.\n * - successful POSTS return a 201.\n * - all errors return a status code and message relevant to the issue.\n */\n@Controller('admin')\nexport class AdminController {\n  constructor(\n    private readonly adminService: AdminService,\n    private readonly authenticationService: AuthenticationService,\n  ) { }\n\n  /**\n   * TODO: This is a test route and should be removed before going live.\n   *\n   * This is currently used to inject a new super user.\n   * @param userData - RegisterAdminDto\n   * @returns - string success message\n   */\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('registerTemp')\n  async createTest(@Body() userData: RegisterAdminDto) {\n    return await this.adminService.registerAdmin(userData);\n  }\n\n  /**\n   * A simple route that allows the frontend to tell whether the current token is valid, and belongs to an Admin/Super Admin\n   *\n   * @returns - true if successful, false otherwise.\n   */\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.ADMIN)\n  @Get('login')\n  async autoLogin() {\n    // This is a simple route the frontend can hit to verify a valid JWT.\n    return true;\n  }\n\n  /**\n   * A route that attempts to log an admin into the system (generating a JWT).\n   *\n   * @param userData - LoginAdminDto\n   * @returns - { access_token }\n   */\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('login')\n  async login(@Body() userData: LoginAdminDto) {\n    return await this.authenticationService.loginAdmin(userData);\n  }\n\n  /**\n   * A route used to register new admins.\n   *\n   * @param userData - RegisterAdminDto\n   * @returns string - success message\n   */\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.SUPERUSER)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('register')\n  async create(@Body() userData: RegisterAdminDto) {\n    return await this.adminService.registerAdmin(userData);\n  }\n\n  /**\n   * A route used to allow superusers to edit other admins.\n   *\n   * @param userData - EditAdminDto\n   * @return string - success message.\n   */\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.SUPERUSER)\n  @UseInterceptors(AdminEditInterceptor)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('edit')\n  async edit(@Body() userData: EditAdminDto) {\n    return await this.adminService.editAdmin(userData);\n  }\n\n  /**\n   * A route used to allow superusers to list other admins.\n   *\n   * @return AdminUserViewModel[] - a list of all admins\n   */\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.SUPERUSER)\n  @Get('list')\n  async getAllAdmins() {\n    return await this.adminService.listAllAdmins();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminEditInterceptor.html":{"url":"injectables/AdminEditInterceptor.html","title":"injectable - AdminEditInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminEditInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/interceptors/edit.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                An interceptor designed to provide accurate models when editting an admin.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/admin/interceptors/edit.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Admin repository.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/interceptors/edit.interceptor.ts:28\n                \n            \n\n\n            \n                \n                    A method to check the dto data found within the current context. Will error if no data has changed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, BadRequestException } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Admin } from './../admin.entity';\nimport { Repository } from 'typeorm';\nimport { EditAdminDto } from '../dto';\nimport * as content from '../../content.json';\n\n/**\n * An interceptor designed to provide accurate models when editting an admin.\n */\n@Injectable()\nexport class AdminEditInterceptor implements NestInterceptor {\n\n    /**\n     * @param adminRepo - the Admin repository.\n     */\n    constructor(\n        @InjectRepository(Admin)\n        private readonly adminRepo: Repository) { }\n\n    /**\n     * A method to check the dto data found within the current context. Will error if no data has changed.\n     *\n     * @param context\n     * @param next\n     */\n    async intercept(context: ExecutionContext, next: CallHandler): Promise> {\n        const request = context.switchToHttp().getRequest();\n        const body = request.body as EditAdminDto;\n        const userToEdit = await this.adminRepo.findOne(body.id);\n        if (!userToEdit) { throw new BadRequestException(content.UserNotFound); }\n        let dataChanged = false;\n        body.email ? dataChanged = dataChanged || body.email.toLowerCase() !== userToEdit.email : body.email = userToEdit.email;\n        body.firstName ? dataChanged = dataChanged || body.firstName !== userToEdit.firstName : body.firstName = userToEdit.firstName;\n        body.lastName ? dataChanged = dataChanged || body.lastName !== userToEdit.lastName : body.lastName = userToEdit.lastName;\n        typeof body.isSuperUser !== 'undefined' ? dataChanged = dataChanged || body.isSuperUser !== userToEdit.isSuperUser\n            : body.isSuperUser = userToEdit.isSuperUser;\n        if (!dataChanged) { throw new BadRequestException(content.DataNotChanged); }\n        return next.handle();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './admin.service';\nimport { Admin } from './admin.entity';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { Junior } from '../junior/entities';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Admin, Junior]),\n  forwardRef(() => AuthenticationModule)],\n  controllers: [AdminController],\n  providers: [AdminService],\n  exports: [AdminService],\n})\n/**\n * The Admin module.\n */\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n            \n                Description\n            \n            \n                A service designed to deal with Admin actions.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                editAdmin\n                            \n                            \n                                    Async\n                                getAdminByEmail\n                            \n                            \n                                    Async\n                                listAllAdmins\n                            \n                            \n                                    Async\n                                registerAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe admin repository.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(details: Admin)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                Admin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe Admin data to add.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editAdmin(details: EditAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                EditAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe details to change, including the ID of the user in question.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise - a success message.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAdminByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe email of the admin.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise - the Admin entity being searched for.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listAllAdmins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllAdmins()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        AdminUserViewModel[] - a List of all admins in ViewModel form.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAdmin(registrationData: RegisterAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    registrationData\n                                    \n                                                RegisterAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe details to register.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise - a success message.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Admin } from './admin.entity';\nimport * as content from '../content.json';\nimport { EditAdminDto, RegisterAdminDto } from './dto';\nimport { hash } from 'bcrypt';\nimport { saltRounds } from '../authentication/authentication.consts';\nimport { AdminUserViewModel } from './vm/admin.vm';\n\n/**\n * A service designed to deal with Admin actions.\n */\n@Injectable()\nexport class AdminService {\n\n    /**\n     * @param adminRepo - The admin repository.\n     */\n    constructor(\n        @InjectRepository(Admin)\n        private readonly adminRepo: Repository,\n    ) { }\n\n    /**\n     * @returns AdminUserViewModel[] - a List of all admins in ViewModel form.\n     */\n    async listAllAdmins(): Promise {\n        return (await this.adminRepo.find()).map(e => new AdminUserViewModel(e));\n    }\n\n    /**\n     * @param email - the email of the admin.\n     * @returns Promise - the Admin entity being searched for.\n     */\n    async getAdminByEmail(email: string): Promise {\n        return await this.adminRepo.findOne({ email });\n    }\n\n    /**\n     * @param details - the Admin data to add.\n     */\n    async createAdmin(details: Admin) {\n        await this.adminRepo.save(details);\n    }\n\n    /**\n     * @param registrationData - the details to register.\n     * @returns Promise - a success message.\n     */\n    async registerAdmin(registrationData: RegisterAdminDto): Promise {\n        const userExists = await this.getAdminByEmail(registrationData.email);\n        if (userExists) { throw new ConflictException(content.AdminAlreadyExists); }\n        const hashedPassword = await hash(registrationData.password, saltRounds);\n        const admin = {\n            firstName: registrationData.firstName, lastName: registrationData.lastName,\n            email: registrationData.email, password: hashedPassword, isSuperUser: registrationData.isSuperUser,\n        } as Admin;\n        await this.createAdmin(admin);\n        return `${registrationData.email} ${content.Created}`;\n    }\n\n    /**\n     * @param details - the details to change, including the ID of the user in question.\n     * @return Promise - a success message.\n     */\n    async editAdmin(details: EditAdminDto): Promise {\n        const user = await this.adminRepo.findOne(details.id);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        if (user.email !== details.email.toLowerCase()) {\n            const emailInUse = await this.getAdminByEmail(details.email);\n            if (emailInUse) { throw new ConflictException(content.AdminAlreadyExists); }\n        }\n        user.email = details.email;\n        user.firstName = details.firstName;\n        user.lastName = details.lastName;\n        user.isSuperUser = details.isSuperUser;\n        await this.adminRepo.save(user);\n        return `${details.email} ${content.Updated}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminUserViewModel.html":{"url":"classes/AdminUserViewModel.html","title":"class - AdminUserViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminUserViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/vm/admin.vm.ts\n        \n\n            \n                Description\n            \n            \n                The model returned to the frontend for Admins.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isSuperUser\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Admin)\n                    \n                \n                        \n                            \n                                Defined in src/admin/vm/admin.vm.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        Admin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Admin to convert to a VM.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Admin } from '../admin.entity';\n\n/**\n * The model returned to the frontend for Admins.\n */\nexport class AdminUserViewModel {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    isSuperUser: boolean;\n\n    /**\n     * @param entity - the Admin to convert to a VM.\n     */\n    constructor(entity: Admin) {\n        this.id = entity.id;\n        this.email = entity.email;\n        this.firstName = entity.firstName;\n        this.lastName = entity.lastName;\n        this.isSuperUser = entity.isSuperUser;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getStatus(): string {\n    return this.appService.getStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nJuniorModule\n\nJuniorModule\n\nAppModule -->\n\nJuniorModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            AdminController\n                        \n                        \n                            JuniorController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            GuardsModule\n                        \n                        \n                            JuniorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { AppController } from './app.controller';\nimport { AdminController } from './admin/admin.controller';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { ConfigHelper } from './configHandler';\nimport { JuniorModule } from './junior/junior.module';\nimport { JuniorController } from './junior/junior.controller';\nimport { AppService } from './app.service';\nimport { GuardsModule } from './roles/roles.module';\nimport { Admin } from './admin/admin.entity';\nimport { Junior } from './junior/entities';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(ConfigHelper.getDatabaseConnection()),\n    TypeOrmModule.forFeature([Admin, Junior]),\n    AdminModule,\n    JuniorModule,\n    AuthenticationModule,\n    GuardsModule,\n  ],\n  providers: [AppService],\n  controllers: [AppController, AdminController, JuniorController],\n})\nexport class AppModule {\n  constructor(private readonly connection: Connection) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(): string {\n    return `API is running`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthenticationService } from './authentication.service';\nimport { AdminModule } from '../admin/admin.module';\nimport { jwt } from './authentication.consts';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JuniorModule } from '../junior/junior.module';\n\n@Module({\n  imports: [forwardRef(() => AdminModule), forwardRef(() => JuniorModule),\n    PassportModule,\n  JwtModule.register({\n    secret: jwt.secret,\n    signOptions: { expiresIn: jwt.expiry },\n  })],\n  providers: [AuthenticationService, JwtStrategy],\n  exports: [AuthenticationService],\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loginAdmin\n                            \n                            \n                                    Async\n                                loginJunior\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, juniorService: JuniorService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/authentication.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        juniorService\n                                                  \n                                                        \n                                                                        JuniorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAdmin(loginData: LoginAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginData\n                                    \n                                                LoginAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginJunior(loginData: LoginJuniorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginData\n                                    \n                                                LoginJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(attempt: literal type, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attempt\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef, BadRequestException, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcrypt';\nimport { AdminService } from '../admin/admin.service';\nimport { LoginAdminDto } from '../admin/dto';\nimport * as content from '../content.json';\nimport { LoginJuniorDto } from '../junior/dto';\nimport { JuniorService } from '../junior/junior.service';\nimport { JWTToken } from './jwt.model';\n\n@Injectable()\nexport class AuthenticationService {\n    constructor(\n        @Inject(forwardRef(() => AdminService))\n        private readonly adminService: AdminService,\n        @Inject(forwardRef(() => JuniorService))\n        private readonly juniorService: JuniorService,\n        private readonly jwtService: JwtService) { }\n\n    async loginAdmin(loginData: LoginAdminDto): Promise {\n        const user = await this.adminService.getAdminByEmail(loginData.email);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        return await this.validateUser({\n            provided: loginData.password, expected: user.password,\n        }, user.id);\n    }\n\n    async loginJunior(loginData: LoginJuniorDto): Promise {\n        const challengeResponse = await this.juniorService.attemptChallenge(loginData.id, loginData.challenge);\n        if (!challengeResponse) { throw new UnauthorizedException(content.FailedLogin); }\n        return { access_token: this.jwtService.sign({ sub: challengeResponse }) } as JWTToken;\n    }\n\n    // This function is being kept as it might be useful when parents are added.\n    async validateUser(attempt: { provided: string, expected: string }, userId: string): Promise {\n        const passwordMatch = await compare(attempt.provided, attempt.expected);\n\n        if (!passwordMatch) { throw new UnauthorizedException(content.FailedLogin); }\n        return { access_token: this.jwtService.sign({ sub: userId }) } as JWTToken;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Challenge.html":{"url":"classes/Challenge.html","title":"class - Challenge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Challenge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/entities/challenge.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                challenge\n                            \n                            \n                                id\n                            \n                            \n                                junior\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            challenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/challenge.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/challenge.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            junior\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Junior\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/challenge.entity.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, OneToOne, JoinColumn, PrimaryGeneratedColumn } from 'typeorm';\nimport { Junior } from './junior.entity';\n\n@Entity()\nexport class Challenge {\n\n    @PrimaryGeneratedColumn('uuid')\n    id: string;\n\n    @OneToOne((type) => Junior)\n    @JoinColumn()\n    junior: Junior;\n\n    @Column()\n    challenge: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configHandler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getDatabaseConnection\n                            \n                            \n                                    Static\n                                getJWTSecret\n                            \n                            \n                                    Private\n                                    Static\n                                isLive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getDatabaseConnection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/configHandler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getJWTSecret\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJWTSecret()\n                \n            \n\n\n            \n                \n                    Defined in src/configHandler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isLive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLive()\n                \n            \n\n\n            \n                \n                    Defined in src/configHandler.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nexport class ConfigHelper {\n\n    private static isLive() {\n        return process.env.NODE_ENV === 'production';\n    }\n\n    static getJWTSecret(): string {\n        return process.env.JWT || 'Remember to make me more secure before prod!';\n    }\n\n    static getDatabaseConnection(): TypeOrmModuleOptions {\n        return {\n            type: 'postgres',\n            host: process.env.RDS_HOSTNAME || 'db',\n            port: +process.env.RDS_PORT || 5432,\n            username: process.env.RDS_USERNAME || 'postgres',\n            password: process.env.RDS_PASSWORD || 'password',\n            database: process.env.RDS_DB_NAME || 'nuta',\n            entities: ['dist/**/*.entity{.ts,.js}'],\n            synchronize: true,\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditAdminDto.html":{"url":"classes/EditAdminDto.html","title":"class - EditAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/edit.dto.ts\n        \n\n            \n                Description\n            \n            \n                The dto to be used when editing an admin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                isSuperUser\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\n/**\n * The dto to be used when editing an admin.\n */\nexport class EditAdminDto {\n\n    @IsNotEmpty()\n    readonly id: string;\n\n    @IsEmail()\n    email: string;\n\n    firstName: string;\n\n    lastName: string;\n\n    isSuperUser: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditJuniorDto.html":{"url":"classes/EditJuniorDto.html","title":"class - EditJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/edit.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber } from 'class-validator';\n\nexport class EditJuniorDto {\n\n    @IsNotEmpty()\n    readonly id: string;\n\n    @IsPhoneNumber('FI')\n    phoneNumber: string;\n\n    firstName: string;\n\n    lastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n    Modules\n    GuardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_exports\n\n\n\n\nRolesGuard \n\nRolesGuard \n\n\n\nGuardsModule\n\nGuardsModule\n\nRolesGuard  -->\n\nGuardsModule->RolesGuard \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            RolesGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RolesGuard } from './roles.guard';\nimport { Junior } from '../junior/entities';\nimport { Admin } from '../admin/admin.entity';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([Admin, Junior]),\n    ],\n    providers: [RolesGuard],\n    exports: [RolesGuard],\n})\nexport class GuardsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTToken.html":{"url":"interfaces/JWTToken.html","title":"interface - JWTToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JWTToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/jwt.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JWTToken {\n    access_token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Junior.html":{"url":"classes/Junior.html","title":"class - Junior","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Junior\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/entities/junior.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')@Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { IsPhoneNumber } from 'class-validator';\n\n@Entity()\nexport class Junior {\n    @PrimaryGeneratedColumn('uuid')\n    id: string;\n\n    @Column()\n    firstName: string;\n\n    @Column()\n    lastName: string;\n\n    @IsPhoneNumber('FI')\n    @Column({ unique: true })\n    phoneNumber: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JuniorController.html":{"url":"controllers/JuniorController.html","title":"controller - JuniorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JuniorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/junior.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                junior\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                autoLogin\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getAllAdmins\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerJunior\n                            \n                            \n                                    Async\n                                resetLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autoLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.JUNIOR)@Get('login')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(userData: EditJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@UseInterceptors(JuniorEditInterceptor)@Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                EditJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllAdmins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@Get('list')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userData: LoginJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                LoginJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJunior(userData: RegisterJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetLogin(userData: ResetJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                ResetJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UsePipes, ValidationPipe, Post, Body, UseGuards, UseInterceptors, Get } from '@nestjs/common';\nimport { JuniorService } from './junior.service';\nimport { LoginJuniorDto, RegisterJuniorDto, EditJuniorDto, ResetJuniorDto } from './dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { AllowedRoles } from '../roles/roles.decorator';\nimport { Roles } from '../roles/roles.enum';\nimport { RolesGuard } from '../roles/roles.guard';\nimport { JuniorEditInterceptor } from './interceptors/edit.interceptor';\n\n@Controller('junior')\nexport class JuniorController {\n\n    constructor(\n        private readonly juniorService: JuniorService,\n        private readonly authenticationService: AuthenticationService,\n    ) { }\n\n    @UsePipes(new ValidationPipe({ transform: true }))\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.ADMIN)\n    @Post('register')\n    async registerJunior(@Body() userData: RegisterJuniorDto) {\n        return await this.juniorService.registerJunior(userData);\n    }\n\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.JUNIOR)\n    @Get('login')\n    async autoLogin() {\n        // This is a simple route the frontend can hit to verify a valid JWT.\n        return true;\n    }\n\n    @UsePipes(new ValidationPipe({ transform: true }))\n    @Post('login')\n    async login(@Body() userData: LoginJuniorDto) {\n        return await this.authenticationService.loginJunior(userData);\n    }\n\n    @Post('reset')\n    async resetLogin(@Body() userData: ResetJuniorDto) {\n        return await this.juniorService.resetLogin(userData.phoneNumber);\n    }\n\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.ADMIN)\n    @UseInterceptors(JuniorEditInterceptor)\n    @Post('edit')\n    async edit(@Body() userData: EditJuniorDto) {\n        return await this.juniorService.editJunior(userData);\n    }\n\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.ADMIN)\n    @Get('list')\n    async getAllAdmins() {\n        return await this.juniorService.listAllJuniors();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JuniorEditInterceptor.html":{"url":"injectables/JuniorEditInterceptor.html","title":"injectable - JuniorEditInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JuniorEditInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/interceptors/edit.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(juniorRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/junior/interceptors/edit.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        juniorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/interceptors/edit.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, BadRequestException } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Junior } from '../entities';\nimport { Repository } from 'typeorm';\nimport { EditJuniorDto } from '../dto/';\nimport * as content from '../../content.json';\n\n@Injectable()\nexport class JuniorEditInterceptor implements NestInterceptor {\n    constructor(\n        @InjectRepository(Junior)\n        private readonly juniorRepo: Repository) { }\n\n    async intercept(context: ExecutionContext, next: CallHandler): Promise> {\n        const request = context.switchToHttp().getRequest();\n        const body = request.body as EditJuniorDto;\n        const userToEdit = await this.juniorRepo.findOne(body.id);\n        if (!userToEdit) { throw new BadRequestException(content.UserNotFound); }\n        let dataChanged = false;\n        body.phoneNumber ? dataChanged = dataChanged || body.phoneNumber !== userToEdit.phoneNumber : body.phoneNumber = userToEdit.phoneNumber;\n        body.firstName ? dataChanged = dataChanged || body.firstName !== userToEdit.firstName : body.firstName = userToEdit.firstName;\n        body.lastName ? dataChanged = dataChanged || body.lastName !== userToEdit.lastName : body.lastName = userToEdit.lastName;\n        if (!dataChanged) { throw new BadRequestException(content.DataNotChanged); }\n        return next.handle();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JuniorModule.html":{"url":"modules/JuniorModule.html","title":"module - JuniorModule","body":"\n                   \n\n\n\n\n    Modules\n    JuniorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JuniorModule\n\n\n\ncluster_JuniorModule_exports\n\n\n\ncluster_JuniorModule_providers\n\n\n\n\nJuniorService \n\nJuniorService \n\n\n\nJuniorModule\n\nJuniorModule\n\nJuniorService  -->\n\nJuniorModule->JuniorService \n\n\n\n\n\nJuniorService\n\nJuniorService\n\nJuniorModule -->\n\nJuniorService->JuniorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/junior/junior.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JuniorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JuniorController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JuniorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { JuniorService } from './junior.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Junior, Challenge } from './entities';\nimport { JuniorController } from './junior.controller';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { Admin } from '../admin/admin.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Junior, Admin, Challenge]),\n  forwardRef(() => AuthenticationModule)],\n  controllers: [JuniorController],\n  providers: [JuniorService],\n  exports: [JuniorService],\n})\nexport class JuniorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JuniorService.html":{"url":"injectables/JuniorService.html","title":"injectable - JuniorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JuniorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/junior.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                attemptChallenge\n                            \n                            \n                                    Async\n                                createJunior\n                            \n                            \n                                    Async\n                                editJunior\n                            \n                            \n                                    Async\n                                getJunior\n                            \n                            \n                                    Async\n                                getJuniorByPhoneNumber\n                            \n                            \n                                    Async\n                                listAllJuniors\n                            \n                            \n                                    Async\n                                registerJunior\n                            \n                            \n                                    Async\n                                resetLogin\n                            \n                            \n                                    Private\n                                    Async\n                                setChallenge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(juniorRepo: Repository, challengeRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/junior/junior.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        juniorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        challengeRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            attemptChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attemptChallenge(challengeId: string, challenge: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    challengeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    challenge\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createJunior(details: Junior)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                Junior\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editJunior(details: EditJuniorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                EditJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJunior(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getJuniorByPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJuniorByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listAllJuniors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllJuniors()\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJunior(registrationData: RegisterJuniorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:54\n                \n            \n\n\n            \n                \n                    TODO:\nCurrently this returns the challenge as we need pass that back to frontend.\nWill be corrected when relevant workflow is introduced.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registrationData\n                                    \n                                                RegisterJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetLogin(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:70\n                \n            \n\n\n            \n                \n                    TODO:\naffected by the same issue as registerJunior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setChallenge(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, BadRequestException } from '@nestjs/common';\nimport { Junior, Challenge } from './entities';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RegisterJuniorDto, EditJuniorDto } from './dto';\nimport { hash } from 'bcrypt';\nimport { saltRounds } from '../authentication/authentication.consts';\nimport * as content from '../content.json';\nimport { JuniorUserViewModel } from './vm/junior.vm';\nimport { validate } from 'class-validator';\n\n@Injectable()\nexport class JuniorService {\n\n    constructor(\n        @InjectRepository(Junior)\n        private readonly juniorRepo: Repository,\n        @InjectRepository(Challenge)\n        private readonly challengeRepo: Repository,\n    ) { }\n\n    async listAllJuniors(): Promise {\n        return (await this.juniorRepo.find()).map(e => new JuniorUserViewModel(e));\n    }\n\n    async getJunior(id: string): Promise {\n        return await this.juniorRepo.findOne(id);\n    }\n\n    async getJuniorByPhoneNumber(phoneNumber: string): Promise {\n        return await this.juniorRepo.findOne({ phoneNumber });\n    }\n\n    async createJunior(details: Junior) {\n        await this.juniorRepo.save(details);\n    }\n\n    async attemptChallenge(challengeId: string, challenge: string): Promise {\n        const entry = await this.challengeRepo.findOne({ where: { id: challengeId }, relations: ['junior'] });\n        // Returning false could be more benefical than providing an exception in terms of security.\n        if (!entry) { return undefined; }\n        if (challenge !== entry.challenge) { return undefined; }\n        const user = entry.junior;\n        if (!user) { return undefined; }\n        await this.challengeRepo.remove(entry);\n        return user.id;\n    }\n\n    /**\n     * TODO:\n     * Currently this returns the challenge as we need pass that back to frontend.\n     * Will be corrected when relevant workflow is introduced.\n     */\n    async registerJunior(registrationData: RegisterJuniorDto): Promise {\n        const userExists = await this.getJuniorByPhoneNumber(registrationData.phoneNumber);\n        if (userExists) { throw new ConflictException(content.JuniorAlreadyExists); }\n        const junior = {\n            firstName: registrationData.firstName, lastName: registrationData.lastName,\n            phoneNumber: registrationData.phoneNumber,\n        } as Junior;\n        await this.createJunior(junior);\n        // return `${registrationData.phoneNumber} ${content.Created} (PIN:${pin})`;\n        return await this.setChallenge(junior.phoneNumber);\n    }\n\n    /**\n     * TODO:\n     * affected by the same issue as registerJunior.\n     */\n    async resetLogin(phoneNumber: string): Promise {\n        const user = await this.getJuniorByPhoneNumber(phoneNumber);\n        if (!user) { throw new ConflictException(content.UserNotFound); }\n        const activeChallenge = await this.challengeRepo.findOne({ where: { junior: user }, relations: ['junior'] });\n        if (activeChallenge) { this.challengeRepo.remove(activeChallenge); }\n        return await this.setChallenge(phoneNumber);\n    }\n\n    async editJunior(details: EditJuniorDto): Promise {\n        const user = await this.juniorRepo.findOne(details.id);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        if (user.phoneNumber !== details.phoneNumber) {\n            const phoneNumberInUse = await this.getJuniorByPhoneNumber(details.phoneNumber);\n            if (phoneNumberInUse) { throw new ConflictException(content.JuniorAlreadyExists); }\n        }\n        user.phoneNumber = details.phoneNumber;\n        user.firstName = details.firstName;\n        user.lastName = details.lastName;\n        const errors = await validate(user);\n        if (errors.length > 0) {\n            throw new BadRequestException(errors);\n        }\n        await this.juniorRepo.save(user);\n        return `${details.phoneNumber} ${content.Updated}`;\n    }\n\n    // Modified to return challenge, this will be improved upon SMS intergration.\n    private async setChallenge(phoneNumber: string): Promise {\n        const valueToHash = (Math.floor(1000 + Math.random() * 9000)).toString();\n        const challenge = encodeURI(await hash(valueToHash, saltRounds));\n        const junior = await this.getJuniorByPhoneNumber(phoneNumber);\n        const challengeData = { junior, challenge };\n        await this.challengeRepo.save(challengeData);\n        return await this.challengeRepo.findOne({ junior });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JuniorUserViewModel.html":{"url":"classes/JuniorUserViewModel.html","title":"class - JuniorUserViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JuniorUserViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/vm/junior.vm.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Junior)\n                    \n                \n                        \n                            \n                                Defined in src/junior/vm/junior.vm.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        Junior\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Junior } from '../entities';\n\nexport class JuniorUserViewModel {\n    id: string;\n    phoneNumber: string;\n    firstName: string;\n    lastName: string;\n\n    constructor(entity: Junior) {\n        this.id = entity.id;\n        this.phoneNumber = entity.phoneNumber;\n        this.firstName = entity.firstName;\n        this.lastName = entity.lastName;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/authentication/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwt } from './authentication.consts';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt.secret,\n        });\n    }\n\n    async validate(payload: any) {\n        return { userId: payload.sub };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAdminDto.html":{"url":"classes/LoginAdminDto.html","title":"class - LoginAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/login.dto.ts\n        \n\n            \n                Description\n            \n            \n                The dto to be used when logging in an admin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/login.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\n/**\n * The dto to be used when logging in an admin.\n */\nexport class LoginAdminDto {\n\n    @IsNotEmpty()\n    @IsEmail()\n    readonly email: string;\n\n    @IsNotEmpty()\n    readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginJuniorDto.html":{"url":"classes/LoginJuniorDto.html","title":"class - LoginJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                challenge\n                            \n                            \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            challenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/login.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginJuniorDto {\n\n    @IsNotEmpty()\n    readonly id: string;\n\n    @IsNotEmpty()\n    readonly challenge: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterAdminDto.html":{"url":"classes/RegisterAdminDto.html","title":"class - RegisterAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/register.dto.ts\n        \n\n            \n                Description\n            \n            \n                The dto to be used when registering an admin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isSuperUser\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\n/**\n * The dto to be used when registering an admin.\n */\nexport class RegisterAdminDto {\n\n    @IsEmail()\n    @IsNotEmpty()\n    readonly email: string;\n\n    @IsNotEmpty()\n    readonly password: string;\n\n    @IsNotEmpty()\n    readonly firstName: string;\n\n    @IsNotEmpty()\n    readonly lastName: string;\n\n    @IsNotEmpty()\n    readonly isSuperUser: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterJuniorDto.html":{"url":"classes/RegisterJuniorDto.html","title":"class - RegisterJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/register.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/register.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/register.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber } from 'class-validator';\n\nexport class RegisterJuniorDto {\n\n    @IsPhoneNumber('FI')\n    @IsNotEmpty()\n    readonly phoneNumber: string;\n\n    @IsNotEmpty()\n    readonly firstName: string;\n\n    @IsNotEmpty()\n    readonly lastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetJuniorDto.html":{"url":"classes/ResetJuniorDto.html","title":"class - ResetJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/reset.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/reset.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber } from 'class-validator';\n\nexport class ResetJuniorDto {\n\n    @IsPhoneNumber('FI')\n    @IsNotEmpty()\n    readonly phoneNumber: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/roles/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                getUserRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, juniorRepo: Repository, adminRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        juniorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUserRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRoles(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Roles } from './roles.enum';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Junior } from '../junior/entities';\nimport { Repository } from 'typeorm';\nimport { Admin } from '../admin/admin.entity';\n@Injectable()\nexport class RolesGuard implements CanActivate {\n    constructor(\n        private readonly reflector: Reflector,\n        @InjectRepository(Junior)\n        private readonly juniorRepo: Repository,\n        @InjectRepository(Admin)\n        private readonly adminRepo: Repository) { }\n\n    async canActivate(context: ExecutionContext): Promise {\n        const roles = this.reflector.get('roles', context.getHandler());\n        if (!roles) {\n            return true;\n        }\n        const request = context.switchToHttp().getRequest().user;\n        const id = request.userId;\n        const userRoles = await this.getUserRoles(id);\n        const hasRole = () => userRoles.some((role) => roles.includes(role));\n        return id && hasRole();\n    }\n\n    private async getUserRoles(id: string): Promise {\n        const roles = [];\n        const isJunior = await this.juniorRepo.findOne(id);\n        if (isJunior) {\n            roles.push(Roles.JUNIOR);\n        } else {\n            const admin = await this.adminRepo.findOne(id);\n            if (admin) {\n                roles.push(Roles.ADMIN);\n                if (admin.isSuperUser) {\n                    roles.push(Roles.SUPERUSER);\n                }\n            }\n        }\n        return roles;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/admin/admin.decorator.ts\n            \n            variable\n            Admin\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/admin/admin.entity.ts\n            \n            class\n            Admin\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/admin/dto/edit.dto.ts\n            \n            class\n            EditAdminDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/admin/dto/login.dto.ts\n            \n            class\n            LoginAdminDto\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/admin/dto/register.dto.ts\n            \n            class\n            RegisterAdminDto\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/admin/interceptors/edit.interceptor.ts\n            \n            injectable\n            AdminEditInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/admin/vm/admin.vm.ts\n            \n            class\n            AdminUserViewModel\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/authentication.consts.ts\n            \n            variable\n            jwt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/authentication.consts.ts\n            \n            variable\n            saltRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/jwt.model.ts\n            \n            interface\n            JWTToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/transformers.ts\n            \n            variable\n            jsonDataToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/transformers.ts\n            \n            variable\n            lowercase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configHandler.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/junior/dto/edit.dto.ts\n            \n            class\n            EditJuniorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/junior/dto/login.dto.ts\n            \n            class\n            LoginJuniorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/junior/dto/register.dto.ts\n            \n            class\n            RegisterJuniorDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/junior/dto/reset.dto.ts\n            \n            class\n            ResetJuniorDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/junior/entities/challenge.entity.ts\n            \n            class\n            Challenge\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/junior/entities/junior.entity.ts\n            \n            class\n            Junior\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/junior/interceptors/edit.interceptor.ts\n            \n            injectable\n            JuniorEditInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/junior/junior.controller.ts\n            \n            controller\n            JuniorController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/junior/junior.service.ts\n            \n            injectable\n            JuniorService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/junior/vm/junior.vm.ts\n            \n            class\n            JuniorUserViewModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.decorator.ts\n            \n            variable\n            AllowedRoles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                test/Mock.ts\n            \n            variable\n            repositoryMockFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/testdb.ts\n            \n            function\n            getTestDB\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.0\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            bcrypt : ^3.0.6\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.10.1\n        \n            passport : ^0.4.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^7.12.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            typeorm : ^0.2.19\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/roles/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 JUNIOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 SUPERUSER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getTestDB   (test/.../testdb.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    test/testdb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getTestDB\n                        \n                        \n                    \n                \n            \n            \n                \ngetTestDB()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTo generate documenation used compodoc -p ./tsconfig.json -n \"API\" to serve documentation use compodoc -s\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nTests should be ran outside of the Docker container.\nWhen testing a sqlite database will be spawned and deleted if all tests are passed. Otherwise this database can be investigated. To re-test the database will need to be deleted from test/testdb.sql\nAs we have decided that controllers should only contain routes, e2e tests should suffice for controller tests during this project.\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2eSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JuniorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_exports\n\n\n\ncluster_JuniorModule\n\n\n\ncluster_JuniorModule_exports\n\n\n\ncluster_JuniorModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nRolesGuard \n\nRolesGuard \n\nRolesGuard  -->\n\nGuardsModule->RolesGuard \n\n\n\n\n\nJuniorModule\n\nJuniorModule\n\nAppModule -->\n\nJuniorModule->AppModule\n\n\n\n\n\nJuniorService \n\nJuniorService \n\nJuniorService  -->\n\nJuniorModule->JuniorService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\nJuniorService\n\nJuniorService\n\nJuniorModule -->\n\nJuniorService->JuniorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MockType   (test/.../Mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/Mock.ts\n    \n    \n        \n            \n                \n                    \n                    MockType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Admin   (src/.../admin.decorator.ts)\n                        \n                        \n                            AllowedRoles   (src/.../roles.decorator.ts)\n                        \n                        \n                            jsonDataToBoolean   (src/.../transformers.ts)\n                        \n                        \n                            jwt   (src/.../authentication.consts.ts)\n                        \n                        \n                            lowercase   (src/.../transformers.ts)\n                        \n                        \n                            repositoryMockFactory   (test/.../Mock.ts)\n                        \n                        \n                            saltRounds   (src/.../authentication.consts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/admin.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => req.user)\n                        \n                    \n\n                \n                    \n                        A cleaner decorator to Access data from request.\n\n                    \n                \n\n            \n        \n\n    src/roles/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllowedRoles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: Roles[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    src/common/transformers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jsonDataToBoolean\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueTransformer\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    to: (str: string | boolean) => typeof str === 'string' ? str.toLocaleLowerCase() === 'true' : str,\n    from: (bool: boolean) => bool,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowercase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueTransformer\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    to: (str: string) => str.toLocaleLowerCase(),\n    from: (str: string) => str,\n}\n                        \n                    \n\n\n            \n        \n\n    src/authentication/authentication.consts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: ConfigHelper.getJWTSecret(),\n    expiry: `7d`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    test/Mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            repositoryMockFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockType>\n\n                        \n                    \n                    \n                        \n                            Default value : jest.fn(() => ({\n    findOne: jest.fn(entity => entity),\n    find: jest.fn(entity => entity),\n}))\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
