var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/classes/Admin.html",[0,0.099,1,1.045]],["body/classes/Admin.html",[0,0.13,1,1.367,2,0.985,3,0.263,4,0.232,5,0.232,6,2.692,7,0.263,8,1.463,9,2.811,10,2.069,11,2.069,12,3.07,13,2.069,14,3.07,15,0.748,16,0.026,17,1.212,18,1.973,19,3.188,20,1.937,21,4.634,22,3.769,23,0.891,24,3.188,25,4.699,26,3.188,27,3.736,28,3.188,29,2.448,30,3.188,31,2.673,32,3.769,33,3.188,34,3.188,35,3.188,36,0.471,37,2.448,38,2.692,39,1.299,40,2.944,41,1.21,42,3.188,43,0.263,44,2.366,45,2.692,46,0.012,47,0.017,48,0.012]],["title/controllers/AdminController.html",[49,1.595,50,2.044]],["body/controllers/AdminController.html",[0,0.06,1,0.633,3,0.169,4,0.149,5,0.149,7,0.169,15,0.555,16,0.027,18,1.682,20,2.102,23,0.759,36,0.523,43,0.169,46,0.008,47,0.012,48,0.008,49,0.967,50,1.929,51,0.967,52,1.731,53,1.731,54,1.131,55,2.774,56,3.74,57,3.193,58,3.193,59,2.696,60,3.74,61,2.696,62,3.74,63,2.049,64,2.049,65,1.682,66,2.049,67,3.208,68,2.049,69,2.049,70,2.049,71,1.681,72,1.681,73,1.681,74,4.637,75,2.049,76,4.293,77,2.049,78,2.049,79,1.731,80,2.451,81,2.049,82,2.049,83,2.049,84,2.049,85,2.049,86,1.731,87,2.676,88,1.731,89,2.049,90,1.731,91,1.364,92,1.731,93,4.053,94,1.731,95,1.731,96,0.516,97,1.364,98,2,99,1.731,100,2,101,1.731,102,1.731,103,1.238,104,2.447,105,1.731,106,1.364,107,1.731,108,1.238,109,1.731,110,1.364,111,1.731,112,2.049,113,0.778,114,1.398,115,0.804,116,1.731,117,2.049,118,1.731,119,2.049,120,1.731,121,2.049,122,2.049,123,1.731,124,3.74,125,2.049,126,2.049,127,1.801,128,2.264,129,3.193,130,3.74,131,1.731,132,1.731,133,1.731,134,1.731,135,1.521,136,1.731,137,1.731,138,1.731,139,1.045,140,1.731,141,1.731,142,2.049,143,3.923,144,1.731,145,2.049,146,2.049,147,1.731,148,1.731,149,2.049,150,1.731,151,2.049]],["title/injectables/AdminEditInterceptor.html",[110,2.251,152,0.912]],["body/injectables/AdminEditInterceptor.html",[0,0.078,1,0.824,3,0.22,4,0.194,5,0.194,7,0.22,15,0.488,16,0.027,23,0.582,31,1.611,36,0.538,39,1.086,43,0.22,46,0.01,47,0.015,48,0.01,54,1.38,55,2.015,65,0.882,71,1.479,72,1.479,73,1.479,80,2.156,91,1.774,96,0.671,110,2.592,113,1.479,114,1.167,115,0.671,127,0.945,128,1.258,152,1.05,153,1.258,154,2.252,155,3.289,156,2.252,157,2.801,158,2.666,159,2.89,160,3.289,161,3.755,162,3.886,163,4.274,164,2.666,165,1.978,166,1.986,167,3.289,168,1.611,169,2.252,170,1.978,171,1.611,172,1.012,173,1.774,174,2.252,175,1.611,176,1.611,177,1.978,178,1.978,179,2.547,180,1.978,181,2.252,182,2.252,183,3.289,184,2.666,185,2.354,186,2.156,187,1.611,188,5.209,189,3.895,190,2.666,191,3.895,192,3.886,193,3.289,194,3.886,195,3.289,196,2.252,197,4.602,198,2.666,199,3.895,200,2.252,201,2.252]],["title/modules/AdminModule.html",[202,1.284,203,1.872]],["body/modules/AdminModule.html",[0,0.105,1,1.104,3,0.295,4,0.26,5,0.26,16,0.026,36,0.585,43,0.295,46,0.014,47,0.018,48,0.014,50,3.256,51,2.255,96,0.899,98,3.394,99,3.016,172,1.356,173,2.377,202,2.045,203,3.488,204,1.685,205,1.685,206,1.977,207,1.977,208,1.685,209,2.981,210,2.981,211,3.016,212,3.016,213,3.016,214,2.645,215,1.977,216,1.977,217,3.572,218,3.181,219,2.377,220,3.572,221,2.437,222,2.65,223,1.581,224,3.016,225,2.158,226,2.65]],["title/injectables/AdminService.html",[98,1.724,152,0.912]],["body/injectables/AdminService.html",[0,0.062,1,1.595,3,0.176,4,0.155,5,0.155,7,0.176,9,2.223,10,0.867,12,1.285,13,0.867,14,1.285,15,0.612,16,0.027,17,0.759,23,0.771,36,0.529,39,0.867,43,0.176,46,0.008,47,0.013,48,0.008,54,1.164,55,2.727,65,1.616,67,2.73,71,1.854,72,1.854,73,1.854,80,2.5,96,0.536,97,1.415,98,1.676,113,1.248,114,0.931,115,0.536,127,1.6,128,2.691,152,0.886,153,1.003,156,1.796,157,2.5,159,2.438,166,2.834,168,1.285,171,1.285,172,0.808,173,1.415,175,1.285,176,1.285,178,1.578,179,2.703,185,2.427,186,2.5,187,1.285,227,1.796,228,3.287,229,3.287,230,3.287,231,4.518,232,3.287,233,2.127,234,3.287,235,2.127,236,2.775,237,3.287,238,2.127,239,3.287,240,2.127,241,2.127,242,3.287,243,2.127,244,1.796,245,1.796,246,1.796,247,1.415,248,2.187,249,1.796,250,1.415,251,2.127,252,2.127,253,2.127,254,2.127,255,2.127,256,2.775,257,2.127,258,3.287,259,3.287,260,2.127,261,1.796,262,1.796,263,3.287,264,2.127,265,2.127,266,1.796,267,2.438,268,2.127,269,3.287,270,2.127,271,3.287,272,2.127,273,3.287,274,1.796,275,1.796,276,1.796,277,1.796,278,2.127,279,2.127,280,2.127,281,1.796]],["title/classes/AdminUserViewModel.html",[0,0.099,250,2.251]],["body/classes/AdminUserViewModel.html",[0,0.105,1,1.778,2,1.104,3,0.295,4,0.26,5,0.26,7,0.295,8,1.581,9,2.981,10,2.195,11,2.195,12,3.256,13,2.195,15,0.774,16,0.026,17,1.211,23,0.921,29,2.645,36,0.331,37,1.977,43,0.295,46,0.014,47,0.018,48,0.014,71,1.356,72,1.356,73,1.356,113,1.356,173,2.377,250,3.181,282,3.016,283,4.036,284,4.78,285,3.572,286,3.572,287,3.572,288,3.572,289,3.016,290,3.016,291,3.572,292,3.572,293,3.016,294,3.016,295,3.016,296,3.016,297,3.572,298,3.572]],["title/controllers/AppController.html",[49,1.595,299,2.251]],["body/controllers/AppController.html",[0,0.126,3,0.355,4,0.313,5,0.313,7,0.355,16,0.026,17,1.02,18,1.423,23,0.642,36,0.5,43,0.355,46,0.016,47,0.021,48,0.016,49,2.544,51,2.029,54,1.91,65,1.423,96,1.083,115,1.083,127,1.524,299,3.588,300,3.633,301,5.214,302,4.302,303,3.26,304,3.633,305,3.633,306,4.302]],["title/modules/AppModule.html",[202,1.284,307,2.251]],["body/modules/AppModule.html",[0,0.085,1,0.892,3,0.238,4,0.21,5,0.21,16,0.027,36,0.605,39,1.176,43,0.238,46,0.011,47,0.016,48,0.011,50,2.909,51,1.946,96,0.727,115,0.727,172,1.096,202,1.828,203,3.197,204,1.362,205,1.362,206,1.598,207,1.598,208,1.362,209,2.664,210,1.598,214,2.283,215,1.598,216,1.598,219,1.921,221,2.946,222,2.142,223,1.365,225,2.493,226,2.142,299,3.203,303,3.197,304,2.438,305,2.438,307,4.341,308,2.438,309,2.438,310,2.438,311,3.491,312,3.197,313,2.887,314,2.909,315,4.814,316,2.887,317,2.887,318,2.438,319,1.921,320,2.887,321,2.438,322,2.887,323,2.887,324,1.921,325,2.438,326,2.887]],["title/injectables/AppService.html",[152,0.912,303,1.872]],["body/injectables/AppService.html",[0,0.133,3,0.374,4,0.33,5,0.33,7,0.374,16,0.026,17,1.053,23,0.677,36,0.42,43,0.374,46,0.017,47,0.021,48,0.017,54,1.974,65,1.5,96,1.141,127,1.606,152,1.502,153,2.139,301,5.312,303,3.083,327,3.828,328,4.534,329,4.534,330,4.534]],["title/modules/AuthenticationModule.html",[202,1.284,221,1.724]],["body/modules/AuthenticationModule.html",[0,0.098,3,0.275,4,0.243,5,0.243,16,0.027,36,0.585,43,0.275,46,0.013,47,0.017,48,0.013,96,0.84,100,3.357,103,2.016,139,1.701,202,1.975,203,2.526,204,1.573,205,1.573,206,1.846,207,1.846,208,1.573,209,2.879,210,2.879,214,2.526,215,1.846,216,1.846,218,3.462,221,3.261,225,2.016,312,2.526,318,2.817,321,2.817,331,2.817,332,2.817,333,2.817,334,3.655,335,3.336,336,3.336,337,2.475,338,4.564,339,3.336,340,2.817,341,3.336,342,3.336,343,2.817,344,2.817,345,3.336,346,3.336,347,3.336]],["title/injectables/AuthenticationService.html",[100,1.724,152,0.912]],["body/injectables/AuthenticationService.html",[0,0.067,3,0.189,4,0.166,5,0.166,7,0.189,15,0.666,16,0.027,17,0.954,23,0.7,36,0.54,43,0.189,46,0.009,47,0.013,48,0.009,54,1.23,55,2.551,65,1.389,71,1.781,72,1.781,73,1.781,87,2.835,96,0.576,98,2.814,100,1.771,113,1.319,114,1.839,115,1.057,120,3.546,127,1.488,128,2.505,152,0.937,153,1.078,166,2.708,168,1.381,175,1.381,176,1.381,179,2.324,185,2.538,186,2.324,187,2.099,218,1.521,247,1.521,267,4.22,337,1.696,348,1.93,349,3.473,350,3.473,351,3.473,352,2.286,353,2.9,354,5.52,355,2.286,356,3.473,357,2.286,358,3.473,359,3.473,360,2.835,361,2.286,362,3.473,363,3.473,364,2.286,365,2.286,366,2.286,367,2.286,368,2.286,369,2.286,370,2.286,371,2.286,372,2.286,373,2.311,374,2.286,375,3.473,376,2.286,377,3.473,378,2.286,379,3.473,380,2.286,381,3.473,382,2.286,383,2.286,384,3.473,385,3.473,386,2.286,387,2.286,388,2.286,389,2.286,390,1.93,391,2.286,392,2.286]],["title/classes/Challenge.html",[0,0.099,393,1.872]],["body/classes/Challenge.html",[0,0.124,2,1.302,3,0.348,4,0.306,5,0.306,7,0.348,8,1.76,11,2.376,15,0.667,16,0.026,17,1.159,18,1.76,20,2.33,23,0.794,25,4.328,36,0.391,37,2.945,39,1.716,43,0.348,44,3.125,46,0.016,47,0.02,48,0.016,393,3.498,394,3.557,395,4.212,396,4.212,397,4.212,398,5.321]],["title/classes/ConfigHelper.html",[0,0.099,319,2.251]],["body/classes/ConfigHelper.html",[0,0.1,2,1.055,3,0.282,4,0.248,5,0.248,7,0.282,14,2.802,15,0.428,16,0.026,17,0.877,20,1.495,23,0.786,29,1.89,36,0.317,43,0.282,46,0.013,47,0.018,48,0.013,54,1.643,65,1.742,114,2.305,118,2.883,127,1.865,172,1.296,319,3.086,399,2.883,400,6.427,401,5.648,402,5.648,403,5.648,404,3.415,405,5.266,406,3.415,407,3.415,408,3.415,409,2.883,410,3.415,411,3.415,412,3.415,413,2.533,414,3.415,415,3.415,416,4.637,417,3.415,418,3.415,419,3.415,420,3.415,421,3.415,422,3.415,423,3.415,424,3.415,425,3.415,426,2.883,427,3.415,428,3.415,429,3.415,430,3.415,431,3.415]],["title/classes/EditAdminDto.html",[0,0.099,80,1.872]],["body/classes/EditAdminDto.html",[0,0.146,2,1.179,3,0.315,4,0.278,5,0.278,7,0.315,8,1.652,9,3.08,10,2.267,11,2.267,12,3.363,13,2.267,15,0.768,16,0.026,17,1.229,18,1.652,23,0.915,29,2.763,36,0.354,40,3.703,41,1.448,43,0.315,46,0.015,47,0.019,48,0.015,80,2.763,115,1.401,432,3.221,433,3.814,434,3.814,435,2.837,436,3.814,437,3.814,438,3.814]],["title/classes/EditJuniorDto.html",[0,0.099,439,1.872]],["body/classes/EditJuniorDto.html",[0,0.15,2,1.22,3,0.326,4,0.287,5,0.287,7,0.326,8,1.689,10,2.305,11,2.305,13,2.305,15,0.75,16,0.026,17,1.238,18,1.689,23,0.893,36,0.366,41,1.499,43,0.326,46,0.015,47,0.02,48,0.015,115,1.425,435,2.885,439,2.826,440,3.334,441,3.132,442,3.949,443,3.949,444,3.949,445,3.398,446,3.949,447,2.628]],["title/modules/GuardsModule.html",[202,1.284,311,2.044]],["body/modules/GuardsModule.html",[0,0.115,1,1.211,3,0.324,4,0.285,5,0.285,16,0.026,36,0.573,43,0.324,46,0.015,47,0.019,48,0.015,96,0.986,104,3.331,172,1.487,202,2.14,204,1.848,205,1.848,206,2.168,207,2.168,208,1.848,209,2.812,210,3.12,214,2.812,215,2.168,216,2.168,219,2.607,223,1.681,225,2.368,226,2.907,311,3.735,324,2.607,325,3.309,448,3.309,449,3.309,450,3.918,451,3.918]],["title/interfaces/JWTToken.html",[373,2.251,452,2.251]],["body/interfaces/JWTToken.html",[3,0.396,4,0.349,5,0.349,7,0.396,8,1.906,15,0.601,16,0.025,17,1.168,43,0.396,46,0.018,47,0.022,48,0.018,373,3.834,390,5.413,452,3.189,453,4.792,454,4.046]],["title/classes/Junior.html",[0,0.099,223,1.119]],["body/classes/Junior.html",[0,0.144,2,1.144,3,0.306,4,0.269,5,0.269,7,0.306,8,1.62,10,2.234,11,2.234,13,2.234,15,0.732,16,0.026,17,1.221,18,1.931,20,2.144,23,0.871,25,4.626,27,4.134,36,0.454,37,2.709,38,3.127,39,1.508,41,1.406,43,0.306,44,2.747,46,0.014,47,0.019,48,0.014,223,1.62,441,3.035,445,2.464,447,2.464,455,3.127,456,3.703,457,3.703,458,3.703,459,3.703,460,3.703]],["title/controllers/JuniorController.html",[49,1.595,314,2.044]],["body/controllers/JuniorController.html",[0,0.063,3,0.176,4,0.155,5,0.155,7,0.176,15,0.568,16,0.027,18,1.711,20,1.763,23,0.772,36,0.53,43,0.176,46,0.008,47,0.013,48,0.008,49,1.008,51,1.008,53,1.804,54,1.168,55,2.793,56,3.823,59,2.784,60,3.823,61,2.784,62,3.4,65,1.711,71,1.719,72,1.719,73,1.719,74,4.7,76,3.823,79,1.804,86,1.804,88,1.804,90,1.804,91,1.421,92,1.804,93,3.4,94,1.804,95,1.804,96,0.538,97,1.421,100,2.053,101,1.804,102,1.804,103,1.291,104,2.495,105,1.804,106,1.421,107,1.804,108,1.291,109,1.804,111,1.804,113,0.811,114,1.444,115,0.83,124,2.784,127,1.832,128,2.308,130,3.823,131,3.4,132,1.804,133,1.804,134,1.804,135,1.585,136,1.804,137,1.804,138,1.804,139,1.089,140,1.804,141,1.804,144,1.804,147,1.804,148,1.804,150,1.804,223,0.707,314,1.992,353,2.053,360,2.736,439,2.506,461,1.804,462,2.784,463,2.784,464,2.136,465,2.136,466,2.136,467,2.136,468,2.136,469,2.136,470,2.136,471,2.136,472,2.736,473,2.136,474,2.136,475,2.136,476,2.136,477,3.013,478,3.297,479,2.136,480,1.804,481,1.421,482,2.136,483,2.136,484,2.136,485,2.136,486,2.136,487,2.136,488,2.136,489,2.136,490,2.136,491,2.136]],["title/injectables/JuniorEditInterceptor.html",[152,0.912,481,2.251]],["body/injectables/JuniorEditInterceptor.html",[0,0.113,3,0.217,4,0.191,5,0.191,7,0.217,15,0.483,16,0.027,23,0.575,31,1.586,36,0.55,39,1.069,41,1.462,43,0.217,46,0.01,47,0.015,48,0.01,54,1.364,55,1.997,65,0.868,71,1.462,72,1.462,73,1.462,91,1.747,96,0.661,113,1.462,114,1.149,115,0.661,127,0.93,128,1.238,152,1.038,153,1.238,155,3.251,157,2.78,160,3.251,161,3.727,162,3.851,163,4.242,165,1.947,166,1.963,167,3.251,168,1.586,169,2.216,170,1.947,171,1.586,172,0.996,174,2.216,175,1.586,176,1.586,177,1.947,179,2.524,180,1.947,181,2.216,182,2.216,183,3.251,185,2.756,186,2.78,187,1.586,188,5.004,192,3.851,193,3.251,194,3.851,195,3.251,200,2.216,201,2.216,223,0.868,439,2.131,481,2.562,492,2.216,493,2.216,494,2.625,495,2.857,496,2.625,497,2.625,498,1.947,499,2.625,500,4.56,501,3.85,502,2.625,503,2.625,504,2.216,505,2.625,506,2.625,507,2.625,508,2.625,509,2.625,510,2.625,511,2.625]],["title/modules/JuniorModule.html",[202,1.284,312,1.872]],["body/modules/JuniorModule.html",[0,0.104,1,1.47,3,0.293,4,0.258,5,0.258,16,0.026,36,0.583,43,0.293,46,0.014,47,0.018,48,0.014,51,2.244,96,0.893,172,1.346,202,2.038,204,1.673,205,1.673,206,1.963,207,1.963,208,1.673,209,2.971,210,2.971,214,2.633,215,1.963,216,1.963,218,3.166,219,2.36,221,2.425,222,2.631,223,1.173,225,2.143,312,3.482,314,3.244,324,2.36,353,3.39,393,2.633,480,2.995,512,2.995,513,2.995,514,2.995,515,3.547,516,2.631,517,3.547,518,3.547]],["title/injectables/JuniorService.html",[152,0.912,353,1.724]],["body/injectables/JuniorService.html",[0,0.042,3,0.118,4,0.104,5,0.104,7,0.118,10,0.58,11,0.968,13,0.58,15,0.623,16,0.027,17,1.114,20,0.623,23,0.766,31,1.85,36,0.461,39,0.58,43,0.118,46,0.005,47,0.009,48,0.005,54,0.842,55,2.748,65,1.743,71,1.887,72,1.887,73,1.887,96,0.358,97,0.947,113,0.903,114,1.742,115,0.599,116,3.021,127,1.867,128,2.748,135,1.764,152,0.641,153,0.671,157,2.526,166,2.935,168,0.86,171,0.86,172,0.54,175,0.86,176,0.86,179,2.84,185,2.162,186,2.202,187,0.86,223,1.423,236,2.008,244,1.201,245,1.201,246,1.201,247,0.947,248,1.582,249,1.201,256,2.008,261,1.201,262,1.201,266,1.201,267,2.654,274,1.201,275,1.201,276,1.201,277,1.201,281,1.201,353,1.212,393,2.751,413,1.056,439,1.98,441,2.202,462,3.021,463,2.008,472,2.162,493,1.201,495,1.764,498,1.056,516,1.056,519,1.201,520,2.377,521,2.377,522,2.377,523,2.377,524,2.377,525,3.577,526,2.377,527,3.062,528,1.423,529,2.377,530,1.423,531,1.423,532,2.377,533,1.423,534,2.377,535,1.423,536,2.377,537,1.423,538,2.377,539,1.423,540,1.423,541,2.377,542,1.423,543,2.377,544,2.008,545,2.377,546,2.377,547,2.377,548,2.377,549,2.377,550,2.377,551,2.377,552,1.423,553,2.377,554,2.377,555,2.377,556,2.377,557,1.423,558,0.947,559,1.423,560,1.423,561,1.423,562,1.423,563,1.201,564,1.423,565,1.423,566,2.377,567,1.423,568,1.423,569,1.423,570,1.423,571,1.423,572,1.423,573,1.423,574,1.423,575,1.423,576,1.423,577,2.377,578,2.377,579,1.423,580,1.423,581,1.423,582,1.423,583,1.423,584,2.377,585,1.423,586,1.423,587,1.423,588,1.423,589,2.377,590,3.062,591,2.377,592,1.423,593,1.423,594,1.423,595,1.423,596,1.423,597,1.423,598,3.062,599,1.423,600,1.423,601,1.423,602,1.423,603,1.423]],["title/classes/JuniorUserViewModel.html",[0,0.099,558,2.251]],["body/classes/JuniorUserViewModel.html",[0,0.109,2,1.153,3,0.308,4,0.271,5,0.271,7,0.308,8,1.627,10,2.242,11,2.242,13,2.242,15,0.763,16,0.026,17,1.223,23,0.908,36,0.346,37,2.064,43,0.308,46,0.014,47,0.019,48,0.014,71,1.416,72,1.416,73,1.416,113,1.416,223,1.936,283,4.154,289,3.15,290,3.15,293,3.15,294,3.15,295,3.15,296,3.15,441,3.046,516,2.767,558,3.274,604,3.15,605,4.92,606,3.73,607,3.73,608,3.73,609,3.73,610,3.73]],["title/injectables/JwtStrategy.html",[152,0.912,334,2.044]],["body/injectables/JwtStrategy.html",[0,0.111,3,0.313,4,0.275,5,0.275,7,0.313,15,0.475,16,0.027,23,0.742,31,2.288,36,0.546,43,0.313,46,0.015,47,0.019,48,0.015,54,1.76,55,2.428,65,1.252,71,1.437,72,1.437,73,1.437,96,0.953,103,2.288,113,2.105,127,1.341,139,2.533,152,1.34,153,1.786,334,3.002,340,3.197,344,3.197,611,3.197,612,4.968,613,3.786,614,4.968,615,3.786,616,3.786,617,3.786,618,3.786,619,3.197,620,3.786,621,3.786,622,3.786,623,3.786,624,3.786,625,3.786,626,3.786,627,3.786,628,3.786,629,3.786]],["title/classes/LoginAdminDto.html",[0,0.099,87,2.044]],["body/classes/LoginAdminDto.html",[0,0.155,2,1.291,3,0.345,4,0.304,5,0.304,7,0.345,8,1.751,9,3.216,14,3.512,15,0.664,16,0.026,17,1.155,18,1.751,23,0.79,36,0.387,40,3.522,41,1.586,43,0.345,46,0.016,47,0.02,48,0.016,87,3.199,115,1.622,435,3.115,630,3.528,631,4.177,632,4.177,633,4.177]],["title/classes/LoginJuniorDto.html",[0,0.099,360,2.044]],["body/classes/LoginJuniorDto.html",[0,0.156,2,1.302,3,0.348,4,0.306,5,0.306,7,0.348,8,1.76,11,2.376,15,0.667,16,0.026,17,1.159,18,1.76,23,0.794,36,0.391,41,1.599,43,0.348,46,0.016,47,0.02,48,0.016,115,1.625,360,3.216,393,3.228,435,3.222,634,3.557,635,4.212,636,4.212]],["title/classes/RegisterAdminDto.html",[0,0.099,67,2.044]],["body/classes/RegisterAdminDto.html",[0,0.138,2,1.077,3,0.288,4,0.254,5,0.254,7,0.288,8,1.555,9,2.945,10,2.168,12,3.216,13,2.168,14,3.216,15,0.746,16,0.026,17,1.204,18,1.968,23,0.888,29,2.602,36,0.323,40,3.129,41,1.323,43,0.288,46,0.013,47,0.018,48,0.013,67,2.841,115,1.697,435,3.326,637,2.943,638,3.485,639,3.485,640,3.485,641,3.485,642,3.485,643,3.485]],["title/classes/RegisterJuniorDto.html",[0,0.099,472,2.044]],["body/classes/RegisterJuniorDto.html",[0,0.149,2,1.211,3,0.324,4,0.285,5,0.285,7,0.324,8,1.681,10,2.297,13,2.297,15,0.707,16,0.026,17,1.197,18,1.865,23,0.842,36,0.363,41,1.487,43,0.324,46,0.015,47,0.019,48,0.015,115,1.663,435,3.229,441,3.12,445,2.607,447,2.607,472,3.07,644,3.309,645,3.918,646,3.918,647,3.309,648,3.918]],["title/classes/ResetJuniorDto.html",[0,0.099,477,2.251]],["body/classes/ResetJuniorDto.html",[0,0.162,2,1.383,3,0.369,4,0.325,5,0.325,7,0.369,8,1.828,15,0.561,16,0.026,17,1.045,18,1.48,23,0.668,36,0.415,41,1.698,43,0.369,46,0.017,47,0.021,48,0.017,115,1.509,435,2.817,441,3.318,445,2.977,447,2.977,477,3.677,647,3.778,649,3.778,650,4.473]],["title/guards/RolesGuard.html",[104,1.724,651,2.509]],["body/guards/RolesGuard.html",[0,0.075,1,1.388,3,0.211,4,0.186,5,0.186,7,0.211,11,1.83,15,0.563,16,0.027,17,0.849,20,1.12,23,0.671,36,0.531,39,1.042,43,0.211,46,0.01,47,0.014,48,0.01,54,1.338,55,2.426,65,1.25,71,1.706,72,1.706,73,1.706,96,0.644,104,1.926,108,3.199,113,1.434,114,2.426,115,1.131,127,1.592,128,2.119,152,1.019,157,3.171,159,3.333,161,3.681,165,1.898,166,2.53,171,1.546,172,0.971,177,1.898,178,1.898,179,3.255,180,1.898,223,0.846,224,2.16,324,1.702,495,3.333,498,1.898,563,2.16,652,2.558,653,2.16,654,4.962,655,3.778,656,2.558,657,5.54,658,2.558,659,3.778,660,2.558,661,3.778,662,2.558,663,2.16,664,2.558,665,2.558,666,2.558,667,2.558,668,2.558,669,2.558,670,2.558,671,3.778,672,2.558,673,2.558,674,3.778,675,2.558,676,2.558,677,2.558,678,2.558,679,2.558]],["title/coverage.html",[680,3.89]],["body/coverage.html",[0,0.185,1,1.155,5,0.183,6,2.128,15,0.316,16,0.026,22,1.87,32,1.87,46,0.01,47,0.014,48,0.01,49,2.101,50,1.523,52,2.128,67,1.523,80,1.395,87,1.523,98,1.285,100,1.285,104,1.285,106,1.677,110,1.677,139,1.285,152,1.538,154,2.128,186,1.395,208,1.189,223,0.834,227,2.128,248,1.677,250,1.677,282,2.128,299,1.677,300,2.128,303,1.395,314,1.523,319,1.677,327,2.128,334,1.523,348,2.128,353,1.285,360,1.523,373,1.677,393,1.395,394,2.128,399,2.128,432,2.128,439,1.395,440,2.128,452,1.677,454,2.128,455,2.128,461,2.128,472,1.523,477,1.677,481,1.677,492,2.128,519,2.128,558,1.677,604,2.128,611,2.128,630,2.128,634,2.128,637,2.128,644,2.128,649,2.128,651,1.87,653,2.128,680,2.128,681,2.52,682,2.52,683,2.52,684,6.837,685,5.26,686,2.128,687,5.703,688,5.983,689,4.453,690,5.51,691,4.925,692,3.155,693,4.453,694,3.155,695,4.453,696,2.52,697,2.52,698,2.128,699,3.736,700,2.128,701,1.87,702,2.128,703,2.128,704,2.128,705,2.52,706,2.52]],["title/dependencies.html",[205,1.918,707,2.829]],["body/dependencies.html",[0,0.155,16,0.027,21,3.528,39,1.702,41,1.586,46,0.016,47,0.02,48,0.016,96,1.052,103,2.524,139,2.13,170,3.099,172,1.586,205,1.971,247,2.78,337,3.099,619,4.47,663,3.528,708,5.811,709,4.177,710,4.177,711,4.177,712,4.177,713,4.177,714,4.177,715,4.177,716,4.177,717,4.177,718,4.177,719,4.177,720,4.177,721,4.177,722,4.177,723,4.177,724,4.177,725,4.177,726,4.177,727,4.177]],["title/miscellaneous/enumerations.html",[728,1.334,729,3.433]],["body/miscellaneous/enumerations.html",[1,1.578,7,0.422,16,0.023,46,0.02,47,0.023,48,0.02,108,3.616,223,1.689,728,2.409,729,4.312,730,5.107,731,5.107,732,5.107]],["title/miscellaneous/functions.html",[728,1.334,733,3.433]],["body/miscellaneous/functions.html",[7,0.409,16,0.024,46,0.019,47,0.023,48,0.019,65,1.64,166,2.527,208,2.957,698,4.185,703,4.185,704,5.293,728,2.338,733,4.185,734,4.957,735,4.957]],["title/index.html",[7,0.234,736,2.829,737,2.829]],["body/index.html",[4,0.239,16,0.025,46,0.013,47,0.017,48,0.013,49,1.548,51,1.548,123,2.771,157,1.816,409,2.771,413,2.435,426,4.356,504,2.771,544,2.771,738,3.281,739,3.281,740,4.513,741,3.281,742,3.281,743,3.281,744,3.281,745,3.281,746,3.281,747,3.281,748,3.281,749,3.281,750,3.281,751,5.158,752,3.281,753,3.281,754,3.281,755,6.019,756,3.281,757,3.281,758,3.281,759,5.824,760,3.281,761,3.281,762,4.513,763,3.281,764,3.281,765,6.019,766,3.281,767,3.281,768,3.281,769,3.281,770,3.281,771,3.281,772,4.513,773,3.281,774,3.281,775,3.281,776,3.281,777,4.513,778,3.281,779,3.281,780,3.281,781,3.281,782,4.513,783,3.281,784,3.281,785,4.513,786,3.281,787,3.281,788,4.513,789,4.513,790,3.281,791,3.281,792,3.281,793,3.281,794,2.771,795,3.281,796,3.281,797,3.281,798,3.281,799,3.281,800,3.281,801,3.281,802,3.281,803,3.281,804,3.281,805,3.281,806,3.281,807,3.281,808,3.281,809,3.281,810,3.281]],["title/modules.html",[204,2.173]],["body/modules.html",[16,0.022,46,0.018,47,0.022,48,0.018,203,2.615,204,2.229,221,2.409,307,3.144,311,2.855,312,2.615,794,5.516,811,6.533,812,6.533,813,6.533]],["title/overview.html",[814,3.89]],["body/overview.html",[2,1.021,16,0.026,46,0.013,47,0.017,48,0.013,51,1.558,98,3.149,100,3.149,104,2.84,153,1.558,202,1.254,203,3.337,204,1.558,205,1.558,206,1.828,207,1.828,208,1.558,209,1.828,210,1.828,211,2.789,212,2.789,213,2.789,214,2.509,215,1.828,216,1.828,221,3.207,303,2.864,307,4.374,308,2.789,309,2.789,310,2.789,311,3.366,312,3.337,331,2.789,332,2.789,333,2.789,334,3.128,353,3.149,448,2.789,449,2.789,452,2.198,512,2.789,513,2.789,514,2.789,651,2.451,814,2.789,815,3.303,816,3.303,817,3.303,818,3.303,819,4.533]],["title/miscellaneous/typealiases.html",[728,1.334,820,4.065]],["body/miscellaneous/typealiases.html",[7,0.426,15,0.647,16,0.023,46,0.02,47,0.023,48,0.02,701,3.828,728,2.434,821,5.159,822,5.083,823,4.356]],["title/miscellaneous/variables.html",[728,1.334,824,3.433]],["body/miscellaneous/variables.html",[1,1.382,7,0.268,15,0.727,16,0.027,17,1.045,20,1.418,22,3.319,29,2.475,32,3.319,37,2.475,45,5.188,46,0.012,47,0.017,48,0.012,106,2.976,108,3.096,139,2.28,196,2.735,248,2.976,343,2.735,686,2.735,692,2.735,694,2.735,700,2.735,701,2.403,702,3.777,728,1.528,822,2.735,823,2.735,824,2.735,825,3.239,826,3.239,827,4.473,828,4.473,829,6.144,830,3.239,831,3.239,832,3.239,833,3.239,834,4.473,835,5.995,836,4.473,837,4.473,838,3.239,839,3.239,840,3.239,841,3.239,842,3.239,843,3.239,844,3.239,845,3.239,846,4.473,847,3.239]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["0.10.1",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0.2.19",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":819,"title":{},"body":{"overview.html":{}}}],["10",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":818,"title":{},"body":{"overview.html":{}}}],["18",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["2/11",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":816,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":815,"title":{},"body":{"overview.html":{}}}],["5432",{"_index":422,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["6.1.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":817,"title":{},"body":{"overview.html":{}}}],["7.12.1",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9000)).tostring",{"_index":597,"title":{},"body":{"injectables/JuniorService.html":{}}}],["access_token",{"_index":390,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/JWTToken.html":{}}}],["activechallenge",{"_index":584,"title":{},"body":{"injectables/JuniorService.html":{}}}],["additional",{"_index":502,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["admin",{"_index":1,"title":{"classes/Admin.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["admin.controller",{"_index":220,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.entity",{"_index":173,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{}}}],["admin.issuperuser",{"_index":678,"title":{},"body":{"guards/RolesGuard.html":{}}}],["admin.service",{"_index":99,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.controller",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["admin/admin.entity",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"guards/RolesGuard.html":{}}}],["admin/admin.module",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["admin/admin.service",{"_index":369,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["admin/dto",{"_index":370,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["admincontroller",{"_index":50,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["admineditinterceptor",{"_index":110,"title":{"injectables/AdminEditInterceptor.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"coverage.html":{}}}],["adminmodule",{"_index":203,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["adminrepo",{"_index":159,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"guards/RolesGuard.html":{}}}],["adminservice",{"_index":98,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["adminuserviewmodel",{"_index":250,"title":{"classes/AdminUserViewModel.html":{}},"body":{"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"coverage.html":{}}}],["adminuserviewmodel(e",{"_index":253,"title":{},"body":{"injectables/AdminService.html":{}}}],["affected",{"_index":553,"title":{},"body":{"injectables/JuniorService.html":{}}}],["aliases",{"_index":821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":121,"title":{},"body":{"controllers/AdminController.html":{}}}],["allowedroles",{"_index":106,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowedroles(roles.admin",{"_index":131,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["allowedroles(roles.junior",{"_index":485,"title":{},"body":{"controllers/JuniorController.html":{}}}],["allowedroles(roles.superuser",{"_index":143,"title":{},"body":{"controllers/AdminController.html":{}}}],["amazing",{"_index":795,"title":{},"body":{"index.html":{}}}],["angular",{"_index":749,"title":{},"body":{"index.html":{}}}],["api",{"_index":329,"title":{},"body":{"injectables/AppService.html":{}}}],["app",{"_index":757,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":304,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":299,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":746,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":307,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":303,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["attempt",{"_index":365,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attempt.expected",{"_index":385,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attempt.provided",{"_index":388,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["attemptchallenge",{"_index":520,"title":{},"body":{"injectables/JuniorService.html":{}}}],["attemptchallenge(juniorid",{"_index":529,"title":{},"body":{"injectables/JuniorService.html":{}}}],["authentication.consts",{"_index":340,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["authentication.service",{"_index":339,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication/authentication.consts",{"_index":249,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["authentication/authentication.module",{"_index":222,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/JuniorModule.html":{}}}],["authentication/authentication.service",{"_index":101,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["authenticationmodule",{"_index":221,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/JuniorModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservice",{"_index":100,"title":{"injectables/AuthenticationService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":102,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["author",{"_index":803,"title":{},"body":{"index.html":{}}}],["autologin",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["await",{"_index":128,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["back",{"_index":546,"title":{},"body":{"injectables/JuniorService.html":{}}}],["backers",{"_index":796,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":168,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["badrequestexception(content.dataincorrect",{"_index":511,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["badrequestexception(content.datanotchanged",{"_index":200,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["badrequestexception(content.usernotfound",{"_index":187,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["bcrypt",{"_index":247,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorService.html":{},"dependencies.html":{}}}],["before",{"_index":118,"title":{},"body":{"controllers/AdminController.html":{},"classes/ConfigHelper.html":{}}}],["benefical",{"_index":569,"title":{},"body":{"injectables/JuniorService.html":{}}}],["body",{"_index":91,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["body.email",{"_index":189,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["body.email.tolowercase",{"_index":190,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["body.firstname",{"_index":192,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["body.issuperuser",{"_index":197,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["body.lastname",{"_index":194,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["body.phonenumber",{"_index":500,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["bool",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":29,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/RegisterAdminDto.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":208,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":813,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":811,"title":{},"body":{"modules.html":{}}}],["building",{"_index":741,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":163,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["canactivate",{"_index":654,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":659,"title":{},"body":{"guards/RolesGuard.html":{}}}],["challenge",{"_index":393,"title":{"classes/Challenge.html":{}},"body":{"classes/Challenge.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/LoginJuniorDto.html":{},"coverage.html":{}}}],["challengedata",{"_index":601,"title":{},"body":{"injectables/JuniorService.html":{}}}],["challengehash",{"_index":598,"title":{},"body":{"injectables/JuniorService.html":{}}}],["challengerepo",{"_index":527,"title":{},"body":{"injectables/JuniorService.html":{}}}],["check",{"_index":503,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["checking",{"_index":507,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["class",{"_index":0,"title":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"overview.html":{}}}],["cluster_adminmodule",{"_index":211,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":212,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":213,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule",{"_index":331,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_exports",{"_index":332,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_providers",{"_index":333,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_guardsmodule",{"_index":448,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_guardsmodule_exports",{"_index":449,"title":{},"body":{"modules/GuardsModule.html":{},"overview.html":{}}}],["cluster_juniormodule",{"_index":512,"title":{},"body":{"modules/JuniorModule.html":{},"overview.html":{}}}],["cluster_juniormodule_exports",{"_index":513,"title":{},"body":{"modules/JuniorModule.html":{},"overview.html":{}}}],["cluster_juniormodule_providers",{"_index":514,"title":{},"body":{"modules/JuniorModule.html":{},"overview.html":{}}}],["column",{"_index":25,"title":{},"body":{"classes/Admin.html":{},"classes/Challenge.html":{},"classes/Junior.html":{}}}],["column({default",{"_index":30,"title":{},"body":{"classes/Admin.html":{}}}],["common/transformers",{"_index":42,"title":{},"body":{"classes/Admin.html":{}}}],["compare",{"_index":368,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["compare(attempt.provided",{"_index":386,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["confighandler",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["confighelper",{"_index":319,"title":{"classes/ConfigHelper.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigHelper.html":{},"coverage.html":{}}}],["confighelper.getjwtsecret",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":245,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["conflictexception(content.adminalreadyexists",{"_index":258,"title":{},"body":{"injectables/AdminService.html":{}}}],["conflictexception(content.junioralreadyexists",{"_index":577,"title":{},"body":{"injectables/JuniorService.html":{}}}],["conflictexception(content.usernotfound",{"_index":583,"title":{},"body":{"injectables/JuniorService.html":{}}}],["connection",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":179,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["constructor(adminrepo",{"_index":156,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{}}}],["constructor(adminservice",{"_index":352,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(entity",{"_index":283,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["constructor(juniorrepo",{"_index":493,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["constructor(private",{"_index":305,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["constructor(reflector",{"_index":656,"title":{},"body":{"guards/RolesGuard.html":{}}}],["contain",{"_index":780,"title":{},"body":{"index.html":{}}}],["container",{"_index":769,"title":{},"body":{"index.html":{}}}],["content",{"_index":175,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["content.created",{"_index":266,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["content.json",{"_index":176,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["content.updated",{"_index":281,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["context",{"_index":165,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":666,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":181,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":667,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":49,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/JuniorController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/JuniorController.html":{},"coverage.html":{},"index.html":{}}}],["controller('admin",{"_index":112,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('junior",{"_index":482,"title":{},"body":{"controllers/JuniorController.html":{}}}],["controllers",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/JuniorController.html":{},"modules/JuniorModule.html":{},"index.html":{},"overview.html":{}}}],["corrected",{"_index":547,"title":{},"body":{"injectables/JuniorService.html":{}}}],["coverage",{"_index":680,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{}}}],["create(@body",{"_index":145,"title":{},"body":{"controllers/AdminController.html":{}}}],["create(userdata",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{}}}],["createadmin",{"_index":228,"title":{},"body":{"injectables/AdminService.html":{}}}],["createadmin(details",{"_index":234,"title":{},"body":{"injectables/AdminService.html":{}}}],["createjunior",{"_index":521,"title":{},"body":{"injectables/JuniorService.html":{}}}],["createjunior(details",{"_index":532,"title":{},"body":{"injectables/JuniorService.html":{}}}],["createparamdecorator((data",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtest",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["createtest(@body",{"_index":126,"title":{},"body":{"controllers/AdminController.html":{}}}],["createtest(userdata",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{}}}],["currently",{"_index":543,"title":{},"body":{"injectables/JuniorService.html":{}}}],["database",{"_index":426,"title":{},"body":{"classes/ConfigHelper.html":{},"index.html":{}}}],["datachanged",{"_index":188,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["db",{"_index":419,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["decided",{"_index":779,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":207,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"controllers/AppController.html":{},"classes/Challenge.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["default",{"_index":45,"title":{},"body":{"classes/Admin.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["deleted",{"_index":772,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":205,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":750,"title":{},"body":{"index.html":{}}}],["details",{"_index":236,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["details.email",{"_index":273,"title":{},"body":{"injectables/AdminService.html":{}}}],["details.email.tolowercase",{"_index":270,"title":{},"body":{"injectables/AdminService.html":{}}}],["details.firstname",{"_index":275,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["details.issuperuser",{"_index":279,"title":{},"body":{"injectables/AdminService.html":{}}}],["details.lastname",{"_index":277,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["details.phonenumber",{"_index":590,"title":{},"body":{"injectables/JuniorService.html":{}}}],["development",{"_index":758,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":430,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["docker",{"_index":768,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":97,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["dto/index",{"_index":174,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["during",{"_index":784,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":782,"title":{},"body":{"index.html":{}}}],["edit",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["edit(@body",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["edit(userdata",{"_index":79,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["editadmin",{"_index":229,"title":{},"body":{"injectables/AdminService.html":{}}}],["editadmin(details",{"_index":237,"title":{},"body":{"injectables/AdminService.html":{}}}],["editadmindto",{"_index":80,"title":{"classes/EditAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/EditAdminDto.html":{},"coverage.html":{}}}],["editjunior",{"_index":522,"title":{},"body":{"injectables/JuniorService.html":{}}}],["editjunior(details",{"_index":534,"title":{},"body":{"injectables/JuniorService.html":{}}}],["editjuniordto",{"_index":439,"title":{"classes/EditJuniorDto.html":{}},"body":{"classes/EditJuniorDto.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"coverage.html":{}}}],["efficient",{"_index":742,"title":{},"body":{"index.html":{}}}],["email",{"_index":9,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["emailinuse",{"_index":271,"title":{},"body":{"injectables/AdminService.html":{}}}],["encodeuri(await",{"_index":599,"title":{},"body":{"injectables/JuniorService.html":{}}}],["entities",{"_index":429,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["entities/index",{"_index":516,"title":{},"body":{"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{}}}],["entities/junior.entity",{"_index":497,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["entity",{"_index":37,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"miscellaneous/variables.html":{}}}],["entity.email",{"_index":292,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["entity.firstname",{"_index":294,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity.id",{"_index":290,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity.issuperuser",{"_index":298,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["entity.lastname",{"_index":296,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["entity.phonenumber",{"_index":610,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["entry",{"_index":566,"title":{},"body":{"injectables/JuniorService.html":{}}}],["entry.challenge",{"_index":574,"title":{},"body":{"injectables/JuniorService.html":{}}}],["enumerations",{"_index":729,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["exception",{"_index":571,"title":{},"body":{"injectables/JuniorService.html":{}}}],["executioncontext",{"_index":161,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["expected",{"_index":379,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["expiresin",{"_index":346,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["expiry",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["exports",{"_index":210,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["express",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":621,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":617,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":625,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":31,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{}}}],["fi",{"_index":510,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["find",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findone",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstname",{"_index":10,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{}}}],["forwardref",{"_index":218,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/JuniorModule.html":{}}}],["framework",{"_index":740,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["function",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":733,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('list",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["get('login",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["getadminbyemail",{"_index":230,"title":{},"body":{"injectables/AdminService.html":{}}}],["getadminbyemail(email",{"_index":239,"title":{},"body":{"injectables/AdminService.html":{}}}],["getalladmins",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["getdatabaseconnection",{"_index":401,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getjunior",{"_index":523,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjunior(id",{"_index":536,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjuniorbyphonenumber",{"_index":524,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjuniorbyphonenumber(phonenumber",{"_index":538,"title":{},"body":{"injectables/JuniorService.html":{}}}],["getjwtsecret",{"_index":402,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["getstatus",{"_index":301,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettestdb",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":736,"title":{"index.html":{}},"body":{}}],["getuserroles",{"_index":655,"title":{},"body":{"guards/RolesGuard.html":{}}}],["getuserroles(id",{"_index":661,"title":{},"body":{"guards/RolesGuard.html":{}}}],["grow",{"_index":791,"title":{},"body":{"index.html":{}}}],["guard",{"_index":651,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":652,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guardsmodule",{"_index":311,"title":{"modules/GuardsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules.html":{},"overview.html":{}}}],["hash",{"_index":246,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["hash(registrationdata.password",{"_index":260,"title":{},"body":{"injectables/AdminService.html":{}}}],["hash(valuetohash",{"_index":600,"title":{},"body":{"injectables/JuniorService.html":{}}}],["hashedpassword",{"_index":259,"title":{},"body":{"injectables/AdminService.html":{}}}],["hasrole",{"_index":671,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heavily",{"_index":747,"title":{},"body":{"index.html":{}}}],["here",{"_index":504,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"index.html":{}}}],["hit",{"_index":136,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["host",{"_index":417,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["https://nestjs.com",{"_index":807,"title":{},"body":{"index.html":{}}}],["id",{"_index":11,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["identifier",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":626,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":177,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["imports",{"_index":225,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["inject",{"_index":366,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inject(forwardref",{"_index":375,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":153,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":171,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["injectrepository(admin",{"_index":178,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"guards/RolesGuard.html":{}}}],["injectrepository(challenge",{"_index":560,"title":{},"body":{"injectables/JuniorService.html":{}}}],["injectrepository(junior",{"_index":498,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["inspired",{"_index":748,"title":{},"body":{"index.html":{}}}],["installation",{"_index":754,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":756,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":155,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["intercept(context",{"_index":160,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["interceptors/edit.interceptor",{"_index":111,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["interface",{"_index":452,"title":{"interfaces/JWTToken.html":{}},"body":{"interfaces/JWTToken.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":453,"title":{},"body":{"interfaces/JWTToken.html":{}}}],["introduced",{"_index":550,"title":{},"body":{"injectables/JuniorService.html":{}}}],["investigated",{"_index":775,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":40,"title":{},"body":{"classes/Admin.html":{},"classes/EditAdminDto.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["isemail()@column({unique",{"_index":19,"title":{},"body":{"classes/Admin.html":{}}}],["isemail()@isnotempty",{"_index":638,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["isjunior",{"_index":674,"title":{},"body":{"guards/RolesGuard.html":{}}}],["islive",{"_index":403,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["isnotempty",{"_index":435,"title":{},"body":{"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["isnotempty()@isemail",{"_index":631,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["isphonenumber",{"_index":447,"title":{},"body":{"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["isphonenumber('fi",{"_index":445,"title":{},"body":{"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["isphonenumber('fi')@column({unique",{"_index":459,"title":{},"body":{"classes/Junior.html":{}}}],["isphonenumber('fi')@isnotempty",{"_index":647,"title":{},"body":{"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["issue",{"_index":555,"title":{},"body":{"injectables/JuniorService.html":{}}}],["issuperuser",{"_index":12,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["jest.fn",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.fn(entity",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":798,"title":{},"body":{"index.html":{}}}],["jsondatatoboolean",{"_index":32,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["junior",{"_index":223,"title":{"classes/Junior.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["junior.controller",{"_index":517,"title":{},"body":{"modules/JuniorModule.html":{}}}],["junior.service",{"_index":480,"title":{},"body":{"controllers/JuniorController.html":{},"modules/JuniorModule.html":{}}}],["junior/dto",{"_index":371,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["junior/entities/index",{"_index":224,"title":{},"body":{"modules/AdminModule.html":{},"guards/RolesGuard.html":{}}}],["junior/entities/junior.entity",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/GuardsModule.html":{}}}],["junior/junior.controller",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["junior/junior.module",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["junior/junior.service",{"_index":372,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["juniorcontroller",{"_index":314,"title":{"controllers/JuniorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/JuniorController.html":{},"modules/JuniorModule.html":{},"coverage.html":{}}}],["junioreditinterceptor",{"_index":481,"title":{"injectables/JuniorEditInterceptor.html":{}},"body":{"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"coverage.html":{}}}],["juniorid",{"_index":531,"title":{},"body":{"injectables/JuniorService.html":{}}}],["juniormodule",{"_index":312,"title":{"modules/JuniorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/JuniorModule.html":{},"modules.html":{},"overview.html":{}}}],["juniorrepo",{"_index":495,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["juniorservice",{"_index":353,"title":{"injectables/JuniorService.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"coverage.html":{},"overview.html":{}}}],["junioruserviewmodel",{"_index":558,"title":{"classes/JuniorUserViewModel.html":{}},"body":{"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"coverage.html":{}}}],["junioruserviewmodel(e",{"_index":562,"title":{},"body":{"injectables/JuniorService.html":{}}}],["jwt",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthenticationModule.html":{},"controllers/JuniorController.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.expiry",{"_index":347,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwt.model",{"_index":374,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwt.secret",{"_index":344,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwt.strategy",{"_index":341,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtfromrequest",{"_index":624,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":336,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtmodule.register",{"_index":342,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["jwtservice",{"_index":354,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jwtstrategy",{"_index":334,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthenticationModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttoken",{"_index":373,"title":{"interfaces/JWTToken.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/JWTToken.html":{},"coverage.html":{}}}],["kamil",{"_index":804,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":13,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{}}}],["legend",{"_index":206,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["license",{"_index":810,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":789,"title":{},"body":{"index.html":{}}}],["listalladmins",{"_index":231,"title":{},"body":{"injectables/AdminService.html":{}}}],["listalljuniors",{"_index":525,"title":{},"body":{"injectables/JuniorService.html":{}}}],["literal",{"_index":363,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["live",{"_index":119,"title":{},"body":{"controllers/AdminController.html":{}}}],["login",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["login(@body",{"_index":141,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["login(userdata",{"_index":86,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["loginadmin",{"_index":349,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginadmin(logindata",{"_index":356,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginadmindto",{"_index":87,"title":{"classes/LoginAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AuthenticationService.html":{},"classes/LoginAdminDto.html":{},"coverage.html":{}}}],["logindata",{"_index":358,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindata.challenge",{"_index":383,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindata.password",{"_index":378,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginjunior",{"_index":350,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginjunior(logindata",{"_index":359,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginjuniordto",{"_index":360,"title":{"classes/LoginJuniorDto.html":{}},"body":{"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"classes/LoginJuniorDto.html":{},"coverage.html":{}}}],["lowercase",{"_index":22,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":412,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["matching",{"_index":47,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(1000",{"_index":595,"title":{},"body":{"injectables/JuniorService.html":{}}}],["math.random",{"_index":596,"title":{},"body":{"injectables/JuniorService.html":{}}}],["metadata",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["miscellaneous",{"_index":728,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":788,"title":{},"body":{"index.html":{}}}],["mocktype",{"_index":822,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":762,"title":{},"body":{"index.html":{}}}],["module",{"_index":202,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["modules",{"_index":204,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":413,"title":{},"body":{"classes/ConfigHelper.html":{},"injectables/JuniorService.html":{},"index.html":{}}}],["myśliwiec",{"_index":805,"title":{},"body":{"index.html":{}}}],["name",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["need",{"_index":544,"title":{},"body":{"injectables/JuniorService.html":{},"index.html":{}}}],["nest",{"_index":751,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":809,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":167,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["nestjs/common",{"_index":96,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"modules/GuardsModule.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":663,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":337,"title":{},"body":{"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":103,"title":{},"body":{"controllers/AdminController.html":{},"modules/AuthenticationModule.html":{},"controllers/JuniorController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":172,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/ConfigHelper.html":{},"modules/GuardsModule.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["new",{"_index":186,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"coverage.html":{}}}],["next",{"_index":162,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["next.handle",{"_index":201,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["node.js",{"_index":739,"title":{},"body":{"index.html":{}}}],["npm",{"_index":755,"title":{},"body":{"index.html":{}}}],["number",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nuta",{"_index":428,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["object",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":169,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["open",{"_index":790,"title":{},"body":{"index.html":{}}}],["optional",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["orm",{"_index":505,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["otherwise",{"_index":774,"title":{},"body":{"index.html":{}}}],["out",{"_index":216,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["outside",{"_index":767,"title":{},"body":{"index.html":{}}}],["overview",{"_index":814,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":707,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["pass",{"_index":545,"title":{},"body":{"injectables/JuniorService.html":{}}}],["passed",{"_index":773,"title":{},"body":{"index.html":{}}}],["passport",{"_index":619,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":338,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["passportstrategy",{"_index":620,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":622,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":14,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/ConfigHelper.html":{},"classes/LoginAdminDto.html":{},"classes/RegisterAdminDto.html":{}}}],["passwordmatch",{"_index":384,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["payload",{"_index":616,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":629,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["phonenumber",{"_index":441,"title":{},"body":{"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["phonenumberinuse",{"_index":591,"title":{},"body":{"injectables/JuniorService.html":{}}}],["pin:${pin",{"_index":580,"title":{},"body":{"injectables/JuniorService.html":{}}}],["please",{"_index":799,"title":{},"body":{"index.html":{}}}],["port",{"_index":420,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["post",{"_index":90,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('edit",{"_index":147,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('login",{"_index":140,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('register",{"_index":144,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["post('registertemp",{"_index":125,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('reset",{"_index":478,"title":{},"body":{"controllers/JuniorController.html":{}}}],["postgres",{"_index":416,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["prefix",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["primarycolumn",{"_index":398,"title":{},"body":{"classes/Challenge.html":{}}}],["primarycolumn({unique",{"_index":396,"title":{},"body":{"classes/Challenge.html":{}}}],["primarygeneratedcolumn",{"_index":38,"title":{},"body":{"classes/Admin.html":{},"classes/Junior.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":27,"title":{},"body":{"classes/Admin.html":{},"classes/Junior.html":{}}}],["private",{"_index":114,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["process.env.jwt",{"_index":410,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.node_env",{"_index":408,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_db_name",{"_index":427,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_hostname",{"_index":418,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_password",{"_index":425,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_port",{"_index":421,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["process.env.rds_username",{"_index":424,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["prod",{"_index":415,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["production",{"_index":409,"title":{},"body":{"classes/ConfigHelper.html":{},"index.html":{}}}],["progressive",{"_index":738,"title":{},"body":{"index.html":{}}}],["project",{"_index":785,"title":{},"body":{"index.html":{}}}],["promise",{"_index":166,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Admin.html":{},"classes/AdminUserViewModel.html":{},"classes/Challenge.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{}}}],["provided",{"_index":120,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthenticationService.html":{}}}],["providers",{"_index":209,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["providing",{"_index":570,"title":{},"body":{"injectables/JuniorService.html":{}}}],["ran",{"_index":766,"title":{},"body":{"index.html":{}}}],["re",{"_index":776,"title":{},"body":{"index.html":{}}}],["read",{"_index":800,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{}}}],["reflect",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":657,"title":{},"body":{"guards/RolesGuard.html":{}}}],["registeradmin",{"_index":232,"title":{},"body":{"injectables/AdminService.html":{}}}],["registeradmin(registrationdata",{"_index":242,"title":{},"body":{"injectables/AdminService.html":{}}}],["registeradmindto",{"_index":67,"title":{"classes/RegisterAdminDto.html":{}},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/RegisterAdminDto.html":{},"coverage.html":{}}}],["registerjunior",{"_index":462,"title":{},"body":{"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["registerjunior(@body",{"_index":483,"title":{},"body":{"controllers/JuniorController.html":{}}}],["registerjunior(registrationdata",{"_index":541,"title":{},"body":{"injectables/JuniorService.html":{}}}],["registerjunior(userdata",{"_index":471,"title":{},"body":{"controllers/JuniorController.html":{}}}],["registerjuniordto",{"_index":472,"title":{"classes/RegisterJuniorDto.html":{}},"body":{"controllers/JuniorController.html":{},"injectables/JuniorService.html":{},"classes/RegisterJuniorDto.html":{},"coverage.html":{}}}],["registrationdata",{"_index":244,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["registrationdata.email",{"_index":263,"title":{},"body":{"injectables/AdminService.html":{}}}],["registrationdata.firstname",{"_index":261,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["registrationdata.issuperuser",{"_index":264,"title":{},"body":{"injectables/AdminService.html":{}}}],["registrationdata.lastname",{"_index":262,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["registrationdata.phonenumber",{"_index":578,"title":{},"body":{"injectables/JuniorService.html":{}}}],["relevant",{"_index":548,"title":{},"body":{"injectables/JuniorService.html":{}}}],["remember",{"_index":411,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["remove",{"_index":117,"title":{},"body":{"controllers/AdminController.html":{}}}],["repository",{"_index":157,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["repositorymockfactory",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["req",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.user",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":180,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"guards/RolesGuard.html":{}}}],["request.body",{"_index":182,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["request.userid",{"_index":668,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":215,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}],["resetjuniordto",{"_index":477,"title":{"classes/ResetJuniorDto.html":{}},"body":{"controllers/JuniorController.html":{},"classes/ResetJuniorDto.html":{},"coverage.html":{}}}],["resetlogin",{"_index":463,"title":{},"body":{"controllers/JuniorController.html":{},"injectables/JuniorService.html":{}}}],["resetlogin(@body",{"_index":487,"title":{},"body":{"controllers/JuniorController.html":{}}}],["resetlogin(phonenumber",{"_index":551,"title":{},"body":{"injectables/JuniorService.html":{}}}],["resetlogin(userdata",{"_index":476,"title":{},"body":{"controllers/JuniorController.html":{}}}],["result",{"_index":46,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["returning",{"_index":568,"title":{},"body":{"injectables/JuniorService.html":{}}}],["returns",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/ConfigHelper.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":108,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.enum",{"_index":664,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.guard",{"_index":451,"title":{},"body":{"modules/GuardsModule.html":{}}}],["roles.includes(role",{"_index":673,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.push(roles.admin",{"_index":677,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.push(roles.junior",{"_index":675,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.push(roles.superuser",{"_index":679,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles/roles.decorator",{"_index":107,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["roles/roles.enum",{"_index":109,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["roles/roles.guard",{"_index":105,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["roles/roles.module",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["rolesguard",{"_index":104,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AdminController.html":{},"modules/GuardsModule.html":{},"controllers/JuniorController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["rolesguard)@allowedroles(roles.admin)@get('list",{"_index":468,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.admin)@get('login",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{}}}],["rolesguard)@allowedroles(roles.admin)@post('register",{"_index":474,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.admin)@useinterceptors(junioreditinterceptor)@post('edit",{"_index":466,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.junior)@get('login",{"_index":464,"title":{},"body":{"controllers/JuniorController.html":{}}}],["rolesguard)@allowedroles(roles.superuser)@get('list",{"_index":84,"title":{},"body":{"controllers/AdminController.html":{}}}],["rolesguard)@allowedroles(roles.superuser)@useinterceptors(admineditinterceptor)@usepipes(new",{"_index":81,"title":{},"body":{"controllers/AdminController.html":{}}}],["rolesguard)@allowedroles(roles.superuser)@usepipes(new",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{}}}],["route",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["routes",{"_index":781,"title":{},"body":{"index.html":{}}}],["run",{"_index":759,"title":{},"body":{"index.html":{}}}],["running",{"_index":330,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":170,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{},"dependencies.html":{}}}],["saltrounds",{"_index":248,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["same",{"_index":554,"title":{},"body":{"injectables/JuniorService.html":{}}}],["scalable",{"_index":743,"title":{},"body":{"index.html":{}}}],["secret",{"_index":343,"title":{},"body":{"modules/AuthenticationModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":627,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":414,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["security",{"_index":573,"title":{},"body":{"injectables/JuniorService.html":{}}}],["seems",{"_index":506,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["server",{"_index":744,"title":{},"body":{"index.html":{}}}],["setchallenge",{"_index":526,"title":{},"body":{"injectables/JuniorService.html":{}}}],["setchallenge(phonenumber",{"_index":556,"title":{},"body":{"injectables/JuniorService.html":{}}}],["setmetadata('roles",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":745,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":345,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["simple",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["simplified",{"_index":122,"title":{},"body":{"controllers/AdminController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"modules/GuardsModule.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"modules/JuniorModule.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["spawned",{"_index":771,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":793,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":770,"title":{},"body":{"index.html":{}}}],["src/.../admin.decorator.ts",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.consts.ts",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":734,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transformers.ts",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/admin/admin.controller.ts",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.controller.ts:21",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:28",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:35",{"_index":89,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:43",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:52",{"_index":83,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:59",{"_index":85,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.decorator.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/admin/admin.entity.ts",{"_index":6,"title":{},"body":{"classes/Admin.html":{},"coverage.html":{}}}],["src/admin/admin.entity.ts:12",{"_index":26,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:15",{"_index":34,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:18",{"_index":35,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:22",{"_index":24,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:25",{"_index":33,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.entity.ts:9",{"_index":28,"title":{},"body":{"classes/Admin.html":{}}}],["src/admin/admin.module.ts",{"_index":217,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":227,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/admin.service.ts:12",{"_index":233,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:19",{"_index":241,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:23",{"_index":240,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:27",{"_index":235,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:31",{"_index":243,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:43",{"_index":238,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/dto/edit.dto.ts",{"_index":432,"title":{},"body":{"classes/EditAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/edit.dto.ts:11",{"_index":434,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:13",{"_index":438,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:15",{"_index":437,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:6",{"_index":436,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/edit.dto.ts:9",{"_index":433,"title":{},"body":{"classes/EditAdminDto.html":{}}}],["src/admin/dto/login.dto.ts",{"_index":630,"title":{},"body":{"classes/LoginAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/login.dto.ts:10",{"_index":633,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["src/admin/dto/login.dto.ts:7",{"_index":632,"title":{},"body":{"classes/LoginAdminDto.html":{}}}],["src/admin/dto/register.dto.ts",{"_index":637,"title":{},"body":{"classes/RegisterAdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/register.dto.ts:10",{"_index":643,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:13",{"_index":640,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:16",{"_index":642,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:19",{"_index":641,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/dto/register.dto.ts:7",{"_index":639,"title":{},"body":{"classes/RegisterAdminDto.html":{}}}],["src/admin/interceptors/edit.interceptor.ts",{"_index":154,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"coverage.html":{}}}],["src/admin/interceptors/edit.interceptor.ts:10",{"_index":158,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["src/admin/interceptors/edit.interceptor.ts:15",{"_index":164,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["src/admin/vm/admin.vm.ts",{"_index":282,"title":{},"body":{"classes/AdminUserViewModel.html":{},"coverage.html":{}}}],["src/admin/vm/admin.vm.ts:4",{"_index":287,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:5",{"_index":285,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:6",{"_index":286,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:7",{"_index":288,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/admin/vm/admin.vm.ts:8",{"_index":284,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["src/app.controller.ts",{"_index":300,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":302,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":327,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":328,"title":{},"body":{"injectables/AppService.html":{}}}],["src/authentication/authentication.consts.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/authentication/authentication.module.ts",{"_index":335,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/authentication/authentication.service.ts",{"_index":348,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/authentication/authentication.service.ts:12",{"_index":355,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:20",{"_index":357,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:28",{"_index":361,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/authentication.service.ts:36",{"_index":364,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/authentication/jwt.model.ts",{"_index":454,"title":{},"body":{"interfaces/JWTToken.html":{},"coverage.html":{}}}],["src/authentication/jwt.strategy.ts",{"_index":611,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/authentication/jwt.strategy.ts:16",{"_index":615,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/authentication/jwt.strategy.ts:7",{"_index":613,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/transformers.ts",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/confighandler.ts",{"_index":399,"title":{},"body":{"classes/ConfigHelper.html":{},"coverage.html":{}}}],["src/confighandler.ts:13",{"_index":404,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["src/confighandler.ts:5",{"_index":407,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["src/confighandler.ts:9",{"_index":406,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["src/junior/dto/edit.dto.ts",{"_index":440,"title":{},"body":{"classes/EditJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/edit.dto.ts:11",{"_index":442,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/edit.dto.ts:13",{"_index":444,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/edit.dto.ts:6",{"_index":443,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/edit.dto.ts:9",{"_index":446,"title":{},"body":{"classes/EditJuniorDto.html":{}}}],["src/junior/dto/login.dto.ts",{"_index":634,"title":{},"body":{"classes/LoginJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/login.dto.ts:6",{"_index":636,"title":{},"body":{"classes/LoginJuniorDto.html":{}}}],["src/junior/dto/login.dto.ts:9",{"_index":635,"title":{},"body":{"classes/LoginJuniorDto.html":{}}}],["src/junior/dto/register.dto.ts",{"_index":644,"title":{},"body":{"classes/RegisterJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/register.dto.ts:10",{"_index":645,"title":{},"body":{"classes/RegisterJuniorDto.html":{}}}],["src/junior/dto/register.dto.ts:13",{"_index":646,"title":{},"body":{"classes/RegisterJuniorDto.html":{}}}],["src/junior/dto/register.dto.ts:7",{"_index":648,"title":{},"body":{"classes/RegisterJuniorDto.html":{}}}],["src/junior/dto/reset.dto.ts",{"_index":649,"title":{},"body":{"classes/ResetJuniorDto.html":{},"coverage.html":{}}}],["src/junior/dto/reset.dto.ts:7",{"_index":650,"title":{},"body":{"classes/ResetJuniorDto.html":{}}}],["src/junior/entities/challenge.entity.ts",{"_index":394,"title":{},"body":{"classes/Challenge.html":{},"coverage.html":{}}}],["src/junior/entities/challenge.entity.ts:10",{"_index":395,"title":{},"body":{"classes/Challenge.html":{}}}],["src/junior/entities/challenge.entity.ts:7",{"_index":397,"title":{},"body":{"classes/Challenge.html":{}}}],["src/junior/entities/junior.entity.ts",{"_index":455,"title":{},"body":{"classes/Junior.html":{},"coverage.html":{}}}],["src/junior/entities/junior.entity.ts:10",{"_index":456,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/entities/junior.entity.ts:13",{"_index":458,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/entities/junior.entity.ts:17",{"_index":460,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/entities/junior.entity.ts:7",{"_index":457,"title":{},"body":{"classes/Junior.html":{}}}],["src/junior/interceptors/edit.interceptor.ts",{"_index":492,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{},"coverage.html":{}}}],["src/junior/interceptors/edit.interceptor.ts:11",{"_index":494,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["src/junior/interceptors/edit.interceptor.ts:16",{"_index":496,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["src/junior/junior.controller.ts",{"_index":461,"title":{},"body":{"controllers/JuniorController.html":{},"coverage.html":{}}}],["src/junior/junior.controller.ts:23",{"_index":475,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:30",{"_index":465,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:37",{"_index":470,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:42",{"_index":479,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:50",{"_index":467,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.controller.ts:57",{"_index":469,"title":{},"body":{"controllers/JuniorController.html":{}}}],["src/junior/junior.module.ts",{"_index":515,"title":{},"body":{"modules/JuniorModule.html":{}}}],["src/junior/junior.service.ts",{"_index":519,"title":{},"body":{"injectables/JuniorService.html":{},"coverage.html":{}}}],["src/junior/junior.service.ts:12",{"_index":528,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:21",{"_index":540,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:25",{"_index":537,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:29",{"_index":539,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:33",{"_index":533,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:37",{"_index":530,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:51",{"_index":542,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:67",{"_index":552,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:75",{"_index":535,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/junior.service.ts:89",{"_index":557,"title":{},"body":{"injectables/JuniorService.html":{}}}],["src/junior/vm/junior.vm.ts",{"_index":604,"title":{},"body":{"classes/JuniorUserViewModel.html":{},"coverage.html":{}}}],["src/junior/vm/junior.vm.ts:4",{"_index":607,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/junior/vm/junior.vm.ts:5",{"_index":608,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/junior/vm/junior.vm.ts:6",{"_index":606,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/junior/vm/junior.vm.ts:7",{"_index":605,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["src/main.ts",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/roles/roles.decorator.ts",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/roles/roles.enum.ts",{"_index":731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/roles/roles.guard.ts",{"_index":653,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/roles/roles.guard.ts:17",{"_index":660,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:29",{"_index":662,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.guard.ts:9",{"_index":658,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/roles/roles.module.ts",{"_index":450,"title":{},"body":{"modules/GuardsModule.html":{}}}],["start",{"_index":760,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":763,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":764,"title":{},"body":{"index.html":{}}}],["started",{"_index":737,"title":{"index.html":{}},"body":{}}],["starter",{"_index":753,"title":{},"body":{"index.html":{}}}],["statements",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":400,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["stay",{"_index":801,"title":{},"body":{"index.html":{}}}],["str",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.tolocalelowercase",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":618,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":392,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["suffice",{"_index":783,"title":{},"body":{"index.html":{}}}],["super",{"_index":623,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["superuser",{"_index":732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":794,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":812,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":431,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["table",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["terms",{"_index":572,"title":{},"body":{"injectables/JuniorService.html":{}}}],["test",{"_index":777,"title":{},"body":{"index.html":{}}}],["test/.../mock.ts",{"_index":823,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["test/.../testdb.ts",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test/mock.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["test/testdb.sql",{"_index":778,"title":{},"body":{"index.html":{}}}],["test/testdb.ts",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["test:e2esupport",{"_index":787,"title":{},"body":{"index.html":{}}}],["testing",{"_index":123,"title":{},"body":{"controllers/AdminController.html":{},"index.html":{}}}],["tests",{"_index":765,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":792,"title":{},"body":{"index.html":{}}}],["this.adminrepo.find()).map(e",{"_index":252,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.findone",{"_index":254,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.findone(body.id",{"_index":184,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["this.adminrepo.findone(details.id",{"_index":268,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.findone(id",{"_index":676,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.adminrepo.save(details",{"_index":255,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminrepo.save(user",{"_index":280,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.editadmin(userdata",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.getadminbyemail(logindata.email",{"_index":376,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.adminservice.listalladmins",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.registeradmin(userdata",{"_index":129,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.getstatus",{"_index":306,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticationservice.loginadmin(userdata",{"_index":142,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authenticationservice.loginjunior(userdata",{"_index":486,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.challengerepo.findone(juniorid",{"_index":567,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.findone(user.id",{"_index":585,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.remove(activechallenge",{"_index":586,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.remove(entry",{"_index":575,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.challengerepo.save(challengedata",{"_index":603,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.createadmin(admin",{"_index":265,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.createjunior(junior",{"_index":579,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.email",{"_index":291,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["this.firstname",{"_index":293,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["this.getadminbyemail(details.email",{"_index":272,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getadminbyemail(registrationdata.email",{"_index":257,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.getjuniorbyphonenumber(details.phonenumber",{"_index":592,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getjuniorbyphonenumber(phonenumber",{"_index":582,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getjuniorbyphonenumber(phonenumber)).id",{"_index":602,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getjuniorbyphonenumber(registrationdata.phonenumber",{"_index":576,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.getuserroles(id",{"_index":670,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.id",{"_index":289,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["this.issuperuser",{"_index":297,"title":{},"body":{"classes/AdminUserViewModel.html":{}}}],["this.juniorrepo.find()).map(e",{"_index":561,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.findone",{"_index":564,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.findone(body.id",{"_index":499,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["this.juniorrepo.findone(details.id",{"_index":588,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.findone(id",{"_index":563,"title":{},"body":{"injectables/JuniorService.html":{},"guards/RolesGuard.html":{}}}],["this.juniorrepo.save(details",{"_index":565,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorrepo.save(user",{"_index":593,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.juniorservice.attemptchallenge(user",{"_index":387,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.juniorservice.editjunior(userdata",{"_index":490,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.juniorservice.getjunior(logindata.id",{"_index":382,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.juniorservice.listalljuniors",{"_index":491,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.juniorservice.registerjunior(userdata",{"_index":484,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.juniorservice.resetlogin(userdata.phonenumber",{"_index":488,"title":{},"body":{"controllers/JuniorController.html":{}}}],["this.jwtservice.sign",{"_index":391,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.lastname",{"_index":295,"title":{},"body":{"classes/AdminUserViewModel.html":{},"classes/JuniorUserViewModel.html":{}}}],["this.phonenumber",{"_index":609,"title":{},"body":{"classes/JuniorUserViewModel.html":{}}}],["this.reflector.get('roles",{"_index":665,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.setchallenge(junior.phonenumber",{"_index":581,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.setchallenge(phonenumber",{"_index":587,"title":{},"body":{"injectables/JuniorService.html":{}}}],["this.validateuser",{"_index":377,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["throw",{"_index":185,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{}}}],["todo",{"_index":116,"title":{},"body":{"controllers/AdminController.html":{},"injectables/JuniorService.html":{}}}],["touch",{"_index":802,"title":{},"body":{"index.html":{}}}],["transform",{"_index":124,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["transformer",{"_index":21,"title":{},"body":{"classes/Admin.html":{},"dependencies.html":{}}}],["true",{"_index":20,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":808,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/Admin.html":{},"controllers/AdminController.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"classes/AdminUserViewModel.html":{},"injectables/AuthenticationService.html":{},"classes/Challenge.html":{},"classes/ConfigHelper.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"interfaces/JWTToken.html":{},"classes/Junior.html":{},"controllers/JuniorController.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"classes/JuniorUserViewModel.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":820,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":196,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":39,"title":{},"body":{"classes/Admin.html":{},"injectables/AdminEditInterceptor.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Challenge.html":{},"classes/Junior.html":{},"injectables/JuniorEditInterceptor.html":{},"injectables/JuniorService.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":219,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{}}}],["typeormmodule.forfeature([admin",{"_index":226,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/GuardsModule.html":{}}}],["typeormmodule.forfeature([junior",{"_index":518,"title":{},"body":{"modules/JuniorModule.html":{}}}],["typeormmodule.forroot(confighelper.getdatabaseconnection",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":405,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["typescript",{"_index":752,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":367,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["unauthorizedexception(content.failedlogin",{"_index":389,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["undefined",{"_index":198,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["unique",{"_index":44,"title":{},"body":{"classes/Admin.html":{},"classes/Challenge.html":{},"classes/Junior.html":{}}}],["unit",{"_index":786,"title":{},"body":{"index.html":{}}}],["update",{"_index":508,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["useguards",{"_index":94,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useguards(authguard('jwt",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useguards(undefined",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useinterceptors",{"_index":95,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["useinterceptors(admineditinterceptor",{"_index":146,"title":{},"body":{"controllers/AdminController.html":{}}}],["useinterceptors(junioreditinterceptor",{"_index":489,"title":{},"body":{"controllers/JuniorController.html":{}}}],["usepipes",{"_index":92,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["usepipes(new",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["user",{"_index":267,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AuthenticationService.html":{},"injectables/JuniorService.html":{}}}],["user.email",{"_index":269,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.firstname",{"_index":274,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["user.id",{"_index":381,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.issuperuser",{"_index":278,"title":{},"body":{"injectables/AdminService.html":{}}}],["user.lastname",{"_index":276,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["user.password",{"_index":380,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.phonenumber",{"_index":589,"title":{},"body":{"injectables/JuniorService.html":{}}}],["userdata",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["userexists",{"_index":256,"title":{},"body":{"injectables/AdminService.html":{},"injectables/JuniorService.html":{}}}],["userid",{"_index":628,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":423,"title":{},"body":{"classes/ConfigHelper.html":{}}}],["userroles",{"_index":669,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userroles.some((role",{"_index":672,"title":{},"body":{"guards/RolesGuard.html":{}}}],["usertoedit",{"_index":183,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["usertoedit.email",{"_index":191,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["usertoedit.firstname",{"_index":193,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["usertoedit.issuperuser",{"_index":199,"title":{},"body":{"injectables/AdminEditInterceptor.html":{}}}],["usertoedit.lastname",{"_index":195,"title":{},"body":{"injectables/AdminEditInterceptor.html":{},"injectables/JuniorEditInterceptor.html":{}}}],["usertoedit.phonenumber",{"_index":501,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["valid",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["validate",{"_index":612,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":614,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":351,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validateuser(attempt",{"_index":362,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["validationpipe",{"_index":93,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["validationpipe())@post('edit",{"_index":82,"title":{},"body":{"controllers/AdminController.html":{}}}],["validationpipe())@post('login",{"_index":88,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["validationpipe())@post('register",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["validationpipe())@post('registertemp",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{}}}],["validationpipe())@useguards(undefined",{"_index":473,"title":{},"body":{"controllers/JuniorController.html":{}}}],["validator",{"_index":41,"title":{},"body":{"classes/Admin.html":{},"classes/EditAdminDto.html":{},"classes/EditJuniorDto.html":{},"classes/Junior.html":{},"injectables/JuniorEditInterceptor.html":{},"classes/LoginAdminDto.html":{},"classes/LoginJuniorDto.html":{},"classes/RegisterAdminDto.html":{},"classes/RegisterJuniorDto.html":{},"classes/ResetJuniorDto.html":{},"dependencies.html":{}}}],["validator()).isphonenumber(body.phonenumber",{"_index":509,"title":{},"body":{"injectables/JuniorEditInterceptor.html":{}}}],["value",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valuetohash",{"_index":594,"title":{},"body":{"injectables/JuniorService.html":{}}}],["valuetransformer",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":824,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JuniorController.html":{}}}],["vm/admin.vm",{"_index":251,"title":{},"body":{"injectables/AdminService.html":{}}}],["vm/junior.vm",{"_index":559,"title":{},"body":{"injectables/JuniorService.html":{}}}],["watch",{"_index":761,"title":{},"body":{"index.html":{}}}],["website",{"_index":806,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":549,"title":{},"body":{"injectables/JuniorService.html":{}}}],["you'd",{"_index":797,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":214,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/GuardsModule.html":{},"modules/JuniorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Admin.html":{"url":"classes/Admin.html","title":"class - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isSuperUser\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@Column({unique: true, transformer: lowercase})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false, transformer: jsonDataToBoolean})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/admin.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { IsEmail } from 'class-validator';\nimport { lowercase, jsonDataToBoolean } from '../common/transformers';\n\n@Entity()\nexport class Admin {\n\n    @PrimaryGeneratedColumn('uuid')\n    id: string;\n\n    @Column()\n    firstName: string;\n\n    @Column()\n    lastName: string;\n\n    @Column()\n    password: string;\n\n    @IsEmail()\n    @Column({ unique: true, transformer: lowercase })\n    email: string;\n\n    @Column({ default: false, transformer: jsonDataToBoolean })\n    isSuperUser: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                autoLogin\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createTest\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getAllAdmins\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autoLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@Get('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userData: RegisterAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.SUPERUSER)@UsePipes(new ValidationPipe())@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTest(userData: RegisterAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('registerTemp')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(userData: EditAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.SUPERUSER)@UseInterceptors(AdminEditInterceptor)@UsePipes(new ValidationPipe())@Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                EditAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllAdmins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.SUPERUSER)@Get('list')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userData: LoginAdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                LoginAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UsePipes, ValidationPipe, UseGuards, UseInterceptors, Get } from '@nestjs/common';\nimport { RegisterAdminDto, LoginAdminDto, EditAdminDto } from './dto';\nimport { AdminService } from './admin.service';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RolesGuard } from '../roles/roles.guard';\nimport { AllowedRoles } from '../roles/roles.decorator';\nimport { Roles } from '../roles/roles.enum';\nimport { AdminEditInterceptor } from './interceptors/edit.interceptor';\n\n@Controller('admin')\nexport class AdminController {\n  constructor(\n    private readonly adminService: AdminService,\n    private readonly authenticationService: AuthenticationService,\n  ) { }\n\n  // TODO remove this before Live, only provided to allow simplified testing.\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('registerTemp')\n  async createTest(@Body() userData: RegisterAdminDto) {\n    return await this.adminService.registerAdmin(userData);\n  }\n\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.ADMIN)\n  @Get('login')\n  async autoLogin() {\n    // This is a simple route the frontend can hit to verify a valid JWT.\n    return true;\n  }\n\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('login')\n  async login(@Body() userData: LoginAdminDto) {\n    return await this.authenticationService.loginAdmin(userData);\n  }\n\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.SUPERUSER)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('register')\n  async create(@Body() userData: RegisterAdminDto) {\n    return await this.adminService.registerAdmin(userData);\n  }\n\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.SUPERUSER)\n  @UseInterceptors(AdminEditInterceptor)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Post('edit')\n  async edit(@Body() userData: EditAdminDto) {\n    return await this.adminService.editAdmin(userData);\n  }\n\n  @UseGuards(AuthGuard('jwt'), RolesGuard)\n  @AllowedRoles(Roles.SUPERUSER)\n  @Get('list')\n  async getAllAdmins() {\n    return await this.adminService.listAllAdmins();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminEditInterceptor.html":{"url":"injectables/AdminEditInterceptor.html","title":"injectable - AdminEditInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminEditInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/interceptors/edit.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/admin/interceptors/edit.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/interceptors/edit.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, BadRequestException } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Admin } from './../admin.entity';\nimport { Repository } from 'typeorm';\nimport { EditAdminDto } from '../dto/index';\nimport * as content from '../../content.json';\n\n@Injectable()\nexport class AdminEditInterceptor implements NestInterceptor {\n    constructor(\n        @InjectRepository(Admin)\n        private readonly adminRepo: Repository) { }\n\n    async intercept(context: ExecutionContext, next: CallHandler): Promise> {\n        const request = context.switchToHttp().getRequest();\n        const body = request.body as EditAdminDto;\n        const userToEdit = await this.adminRepo.findOne(body.id);\n        if (!userToEdit) { throw new BadRequestException(content.UserNotFound); }\n        let dataChanged = false;\n        body.email ? dataChanged = dataChanged || body.email.toLowerCase() !== userToEdit.email : body.email = userToEdit.email;\n        body.firstName ? dataChanged = dataChanged || body.firstName !== userToEdit.firstName : body.firstName = userToEdit.firstName;\n        body.lastName ? dataChanged = dataChanged || body.lastName !== userToEdit.lastName : body.lastName = userToEdit.lastName;\n        typeof body.isSuperUser !== 'undefined' ? dataChanged = dataChanged || body.isSuperUser !== userToEdit.isSuperUser\n            : body.isSuperUser = userToEdit.isSuperUser;\n        if (!dataChanged) { throw new BadRequestException(content.DataNotChanged); }\n        return next.handle();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AdminController } from './admin.controller';\nimport { AdminService } from './admin.service';\nimport { Admin } from './admin.entity';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { Junior } from '../junior/entities/index';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Admin, Junior]),\n  forwardRef(() => AuthenticationModule)],\n  controllers: [AdminController],\n  providers: [AdminService],\n  exports: [AdminService],\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAdmin\n                            \n                            \n                                    Async\n                                editAdmin\n                            \n                            \n                                    Async\n                                getAdminByEmail\n                            \n                            \n                                    Async\n                                listAllAdmins\n                            \n                            \n                                    Async\n                                registerAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAdmin(details: Admin)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                Admin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editAdmin(details: EditAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                EditAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAdminByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAdminByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listAllAdmins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllAdmins()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAdmin(registrationData: RegisterAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registrationData\n                                    \n                                                RegisterAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, BadRequestException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Admin } from './admin.entity';\nimport * as content from '../content.json';\nimport { EditAdminDto, RegisterAdminDto } from './dto';\nimport { hash } from 'bcrypt';\nimport { saltRounds } from '../authentication/authentication.consts';\nimport { AdminUserViewModel } from './vm/admin.vm';\n\n@Injectable()\nexport class AdminService {\n\n    constructor(\n        @InjectRepository(Admin)\n        private readonly adminRepo: Repository,\n    ) { }\n\n    async listAllAdmins(): Promise {\n        return (await this.adminRepo.find()).map(e => new AdminUserViewModel(e));\n    }\n\n    async getAdminByEmail(email: string): Promise {\n        return await this.adminRepo.findOne({ email });\n    }\n\n    async createAdmin(details: Admin) {\n        await this.adminRepo.save(details);\n    }\n\n    async registerAdmin(registrationData: RegisterAdminDto): Promise {\n        const userExists = await this.getAdminByEmail(registrationData.email);\n        if (userExists) { throw new ConflictException(content.AdminAlreadyExists); }\n        const hashedPassword = await hash(registrationData.password, saltRounds);\n        const admin = {\n            firstName: registrationData.firstName, lastName: registrationData.lastName,\n            email: registrationData.email, password: hashedPassword, isSuperUser: registrationData.isSuperUser,\n        } as Admin;\n        await this.createAdmin(admin);\n        return `${registrationData.email} ${content.Created}`;\n    }\n\n    async editAdmin(details: EditAdminDto): Promise {\n        const user = await this.adminRepo.findOne(details.id);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        if (user.email !== details.email.toLowerCase()) {\n            const emailInUse = await this.getAdminByEmail(details.email);\n            if (emailInUse) { throw new ConflictException(content.AdminAlreadyExists); }\n        }\n        user.email = details.email;\n        user.firstName = details.firstName;\n        user.lastName = details.lastName;\n        user.isSuperUser = details.isSuperUser;\n        await this.adminRepo.save(user);\n        return `${details.email} ${content.Updated}`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminUserViewModel.html":{"url":"classes/AdminUserViewModel.html","title":"class - AdminUserViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminUserViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/vm/admin.vm.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isSuperUser\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Admin)\n                    \n                \n                        \n                            \n                                Defined in src/admin/vm/admin.vm.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        Admin\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/vm/admin.vm.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Admin } from '../admin.entity';\n\nexport class AdminUserViewModel {\n    id: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    isSuperUser: boolean;\n\n    constructor(entity: Admin) {\n        this.id = entity.id;\n        this.email = entity.email;\n        this.firstName = entity.firstName;\n        this.lastName = entity.lastName;\n        this.isSuperUser = entity.isSuperUser;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getStatus(): string {\n    return this.appService.getStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nJuniorModule\n\nJuniorModule\n\nAppModule -->\n\nJuniorModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            AdminController\n                        \n                        \n                            JuniorController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AuthenticationModule\n                        \n                        \n                            GuardsModule\n                        \n                        \n                            JuniorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { AppController } from './app.controller';\nimport { AdminController } from './admin/admin.controller';\nimport { AdminModule } from './admin/admin.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { ConfigHelper } from './configHandler';\nimport { JuniorModule } from './junior/junior.module';\nimport { JuniorController } from './junior/junior.controller';\nimport { AppService } from './app.service';\nimport { GuardsModule } from './roles/roles.module';\nimport { Admin } from './admin/admin.entity';\nimport { Junior } from './junior/entities/junior.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(ConfigHelper.getDatabaseConnection()),\n    TypeOrmModule.forFeature([Admin, Junior]),\n    AdminModule,\n    JuniorModule,\n    AuthenticationModule,\n    GuardsModule,\n  ],\n  providers: [AppService],\n  controllers: [AppController, AdminController, JuniorController],\n})\nexport class AppModule {\n  constructor(private readonly connection: Connection) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getStatus(): string {\n    return `API is running`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/authentication/authentication.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthenticationService } from './authentication.service';\nimport { AdminModule } from '../admin/admin.module';\nimport { jwt } from './authentication.consts';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JuniorModule } from '../junior/junior.module';\n\n@Module({\n  imports: [forwardRef(() => AdminModule), forwardRef(() => JuniorModule),\n    PassportModule,\n  JwtModule.register({\n    secret: jwt.secret,\n    signOptions: { expiresIn: jwt.expiry },\n  })],\n  providers: [AuthenticationService, JwtStrategy],\n  exports: [AuthenticationService],\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loginAdmin\n                            \n                            \n                                    Async\n                                loginJunior\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService, juniorService: JuniorService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/authentication/authentication.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        juniorService\n                                                  \n                                                        \n                                                                        JuniorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAdmin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAdmin(loginData: LoginAdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginData\n                                    \n                                                LoginAdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginJunior(loginData: LoginJuniorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginData\n                                    \n                                                LoginJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(attempt: literal type, user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/authentication.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attempt\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, forwardRef, BadRequestException, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { compare } from 'bcrypt';\nimport { AdminService } from '../admin/admin.service';\nimport { LoginAdminDto } from '../admin/dto';\nimport * as content from '../content.json';\nimport { LoginJuniorDto } from '../junior/dto';\nimport { JuniorService } from '../junior/junior.service';\nimport { JWTToken } from './jwt.model';\n\n@Injectable()\nexport class AuthenticationService {\n    constructor(\n        @Inject(forwardRef(() => AdminService))\n        private readonly adminService: AdminService,\n        @Inject(forwardRef(() => JuniorService))\n        private readonly juniorService: JuniorService,\n        private readonly jwtService: JwtService) { }\n\n    async loginAdmin(loginData: LoginAdminDto): Promise {\n        const user = await this.adminService.getAdminByEmail(loginData.email);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        return await this.validateUser({\n            provided: loginData.password, expected: user.password,\n        }, user.id);\n    }\n\n    async loginJunior(loginData: LoginJuniorDto): Promise {\n        const user = await this.juniorService.getJunior(loginData.id);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        return await this.validateUser({\n            provided: loginData.challenge,\n        }, user.id);\n    }\n\n    async validateUser(attempt: { provided: string, expected?: string }, user: string): Promise {\n        const passwordMatch = attempt.expected ? await compare(attempt.provided, attempt.expected) :\n            await this.juniorService.attemptChallenge(user, attempt.provided);\n\n        if (!passwordMatch) { throw new UnauthorizedException(content.FailedLogin); }\n        return { access_token: this.jwtService.sign({ sub: user }) } as JWTToken;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Challenge.html":{"url":"classes/Challenge.html","title":"class - Challenge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Challenge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/entities/challenge.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                challenge\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            challenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/challenge.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/challenge.entity.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Challenge {\n\n    @PrimaryColumn({ unique: true })\n    id: string;\n\n    @Column()\n    challenge: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigHelper.html":{"url":"classes/ConfigHelper.html","title":"class - ConfigHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configHandler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getDatabaseConnection\n                            \n                            \n                                    Static\n                                getJWTSecret\n                            \n                            \n                                    Private\n                                    Static\n                                isLive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getDatabaseConnection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/configHandler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getJWTSecret\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJWTSecret()\n                \n            \n\n\n            \n                \n                    Defined in src/configHandler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isLive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLive()\n                \n            \n\n\n            \n                \n                    Defined in src/configHandler.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nexport class ConfigHelper {\n\n    private static isLive() {\n        return process.env.NODE_ENV === 'production';\n    }\n\n    static getJWTSecret(): string {\n        return process.env.JWT || 'Remember to make me more secure before prod!';\n    }\n\n    static getDatabaseConnection(): TypeOrmModuleOptions {\n        return {\n            type: 'postgres',\n            host: process.env.RDS_HOSTNAME || 'db',\n            port: +process.env.RDS_PORT || 5432,\n            username: process.env.RDS_USERNAME || 'postgres',\n            password: process.env.RDS_PASSWORD || 'password',\n            database: process.env.RDS_DB_NAME || 'nuta',\n            entities: ['dist/**/*.entity{.ts,.js}'],\n            synchronize: true,\n        };\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditAdminDto.html":{"url":"classes/EditAdminDto.html","title":"class - EditAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/edit.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                isSuperUser\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/edit.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\nexport class EditAdminDto {\n\n    @IsNotEmpty()\n    readonly id: string;\n\n    @IsEmail()\n    email: string;\n\n    firstName: string;\n\n    lastName: string;\n\n    isSuperUser: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditJuniorDto.html":{"url":"classes/EditJuniorDto.html","title":"class - EditJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/edit.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/edit.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber } from 'class-validator';\n\nexport class EditJuniorDto {\n\n    @IsNotEmpty()\n    readonly id: string;\n\n    @IsPhoneNumber('FI')\n    phoneNumber: string;\n\n    firstName: string;\n\n    lastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GuardsModule.html":{"url":"modules/GuardsModule.html","title":"module - GuardsModule","body":"\n                   \n\n\n\n\n    Modules\n    GuardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_exports\n\n\n\n\nRolesGuard \n\nRolesGuard \n\n\n\nGuardsModule\n\nGuardsModule\n\nRolesGuard  -->\n\nGuardsModule->RolesGuard \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            RolesGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { RolesGuard } from './roles.guard';\nimport { Junior } from '../junior/entities/junior.entity';\nimport { Admin } from '../admin/admin.entity';\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([Admin, Junior]),\n    ],\n    providers: [RolesGuard],\n    exports: [RolesGuard],\n})\nexport class GuardsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTToken.html":{"url":"interfaces/JWTToken.html","title":"interface - JWTToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JWTToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/jwt.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JWTToken {\n    access_token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Junior.html":{"url":"classes/Junior.html","title":"class - Junior","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Junior\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/entities/junior.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')@Column({unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/entities/junior.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\nimport { IsPhoneNumber } from 'class-validator';\n\n@Entity()\nexport class Junior {\n    @PrimaryGeneratedColumn('uuid')\n    id: string;\n\n    @Column()\n    firstName: string;\n\n    @Column()\n    lastName: string;\n\n    @IsPhoneNumber('FI')\n    @Column({ unique: true })\n    phoneNumber: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JuniorController.html":{"url":"controllers/JuniorController.html","title":"controller - JuniorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JuniorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/junior.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                junior\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                autoLogin\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getAllAdmins\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerJunior\n                            \n                            \n                                    Async\n                                resetLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            autoLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    autoLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.JUNIOR)@Get('login')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(userData: EditJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@UseInterceptors(JuniorEditInterceptor)@Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                EditJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllAdmins\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllAdmins()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@Get('list')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userData: LoginJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                LoginJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJunior(userData: RegisterJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@UseGuards(undefined, RolesGuard)@AllowedRoles(Roles.ADMIN)@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetLogin(userData: ResetJuniorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')\n                \n            \n\n            \n                \n                    Defined in src/junior/junior.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                ResetJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UsePipes, ValidationPipe, Post, Body, UseGuards, UseInterceptors, Get } from '@nestjs/common';\nimport { JuniorService } from './junior.service';\nimport { LoginJuniorDto, RegisterJuniorDto, EditJuniorDto, ResetJuniorDto } from './dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { AuthenticationService } from '../authentication/authentication.service';\nimport { AllowedRoles } from '../roles/roles.decorator';\nimport { Roles } from '../roles/roles.enum';\nimport { RolesGuard } from '../roles/roles.guard';\nimport { JuniorEditInterceptor } from './interceptors/edit.interceptor';\n\n@Controller('junior')\nexport class JuniorController {\n\n    constructor(\n        private readonly juniorService: JuniorService,\n        private readonly authenticationService: AuthenticationService,\n    ) { }\n\n    @UsePipes(new ValidationPipe({ transform: true }))\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.ADMIN)\n    @Post('register')\n    async registerJunior(@Body() userData: RegisterJuniorDto) {\n        return await this.juniorService.registerJunior(userData);\n    }\n\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.JUNIOR)\n    @Get('login')\n    async autoLogin() {\n        // This is a simple route the frontend can hit to verify a valid JWT.\n        return true;\n    }\n\n    @UsePipes(new ValidationPipe({ transform: true }))\n    @Post('login')\n    async login(@Body() userData: LoginJuniorDto) {\n        return await this.authenticationService.loginJunior(userData);\n    }\n\n    @Post('reset')\n    async resetLogin(@Body() userData: ResetJuniorDto) {\n        return await this.juniorService.resetLogin(userData.phoneNumber);\n    }\n\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.ADMIN)\n    @UseInterceptors(JuniorEditInterceptor)\n    @Post('edit')\n    async edit(@Body() userData: EditJuniorDto) {\n        return await this.juniorService.editJunior(userData);\n    }\n\n    @UseGuards(AuthGuard('jwt'), RolesGuard)\n    @AllowedRoles(Roles.ADMIN)\n    @Get('list')\n    async getAllAdmins() {\n        return await this.juniorService.listAllJuniors();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JuniorEditInterceptor.html":{"url":"injectables/JuniorEditInterceptor.html","title":"injectable - JuniorEditInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JuniorEditInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/interceptors/edit.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(juniorRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/junior/interceptors/edit.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        juniorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/interceptors/edit.interceptor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, BadRequestException } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Junior } from '../entities/junior.entity';\nimport { Repository } from 'typeorm';\nimport { EditJuniorDto } from '../dto/index';\nimport * as content from '../../content.json';\nimport { Validator } from 'class-validator';\n\n@Injectable()\nexport class JuniorEditInterceptor implements NestInterceptor {\n    constructor(\n        @InjectRepository(Junior)\n        private readonly juniorRepo: Repository) { }\n\n    async intercept(context: ExecutionContext, next: CallHandler): Promise> {\n        const request = context.switchToHttp().getRequest();\n        const body = request.body as EditJuniorDto;\n        const userToEdit = await this.juniorRepo.findOne(body.id);\n        if (!userToEdit) { throw new BadRequestException(content.UserNotFound); }\n        let dataChanged = false;\n        body.phoneNumber ? dataChanged = dataChanged || body.phoneNumber !== userToEdit.phoneNumber : body.phoneNumber = userToEdit.phoneNumber;\n        body.firstName ? dataChanged = dataChanged || body.firstName !== userToEdit.firstName : body.firstName = userToEdit.firstName;\n        body.lastName ? dataChanged = dataChanged || body.lastName !== userToEdit.lastName : body.lastName = userToEdit.lastName;\n        // Additional check here as the ORM seems not to be checking this on update.\n        if (!(new Validator()).isPhoneNumber(body.phoneNumber, 'FI')) { throw new BadRequestException(content.DataIncorrect); }\n        if (!dataChanged) { throw new BadRequestException(content.DataNotChanged); }\n        return next.handle();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JuniorModule.html":{"url":"modules/JuniorModule.html","title":"module - JuniorModule","body":"\n                   \n\n\n\n\n    Modules\n    JuniorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JuniorModule\n\n\n\ncluster_JuniorModule_exports\n\n\n\ncluster_JuniorModule_providers\n\n\n\n\nJuniorService \n\nJuniorService \n\n\n\nJuniorModule\n\nJuniorModule\n\nJuniorService  -->\n\nJuniorModule->JuniorService \n\n\n\n\n\nJuniorService\n\nJuniorService\n\nJuniorModule -->\n\nJuniorService->JuniorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/junior/junior.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JuniorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JuniorController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JuniorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { JuniorService } from './junior.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Junior, Challenge } from './entities/index';\nimport { JuniorController } from './junior.controller';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { Admin } from '../admin/admin.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Junior, Admin, Challenge]),\n  forwardRef(() => AuthenticationModule)],\n  controllers: [JuniorController],\n  providers: [JuniorService],\n  exports: [JuniorService],\n})\nexport class JuniorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JuniorService.html":{"url":"injectables/JuniorService.html","title":"injectable - JuniorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JuniorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/junior.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                attemptChallenge\n                            \n                            \n                                    Async\n                                createJunior\n                            \n                            \n                                    Async\n                                editJunior\n                            \n                            \n                                    Async\n                                getJunior\n                            \n                            \n                                    Async\n                                getJuniorByPhoneNumber\n                            \n                            \n                                    Async\n                                listAllJuniors\n                            \n                            \n                                    Async\n                                registerJunior\n                            \n                            \n                                    Async\n                                resetLogin\n                            \n                            \n                                    Private\n                                    Async\n                                setChallenge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(juniorRepo: Repository, challengeRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/junior/junior.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        juniorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        challengeRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            attemptChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attemptChallenge(juniorId: string, challenge: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    juniorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    challenge\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createJunior(details: Junior)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                Junior\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editJunior(details: EditJuniorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                EditJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJunior(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getJuniorByPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJuniorByPhoneNumber(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listAllJuniors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllJuniors()\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerJunior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerJunior(registrationData: RegisterJuniorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:51\n                \n            \n\n\n            \n                \n                    TODO:\nCurrently this returns the challenge as we need pass that back to frontend.\nWill be corrected when relevant workflow is introduced.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registrationData\n                                    \n                                                RegisterJuniorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetLogin(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:67\n                \n            \n\n\n            \n                \n                    TODO:\naffected by the same issue as registerJunior.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setChallenge(phoneNumber: string)\n                \n            \n\n\n            \n                \n                    Defined in src/junior/junior.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, BadRequestException } from '@nestjs/common';\nimport { Junior, Challenge } from './entities/index';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { RegisterJuniorDto, EditJuniorDto } from './dto';\nimport { hash } from 'bcrypt';\nimport { saltRounds } from '../authentication/authentication.consts';\nimport * as content from '../content.json';\nimport { JuniorUserViewModel } from './vm/junior.vm';\n\n@Injectable()\nexport class JuniorService {\n\n    constructor(\n        @InjectRepository(Junior)\n        private readonly juniorRepo: Repository,\n        @InjectRepository(Challenge)\n        private readonly challengeRepo: Repository,\n    ) { }\n\n    async listAllJuniors(): Promise {\n        return (await this.juniorRepo.find()).map(e => new JuniorUserViewModel(e));\n    }\n\n    async getJunior(id: string): Promise {\n        return await this.juniorRepo.findOne(id);\n    }\n\n    async getJuniorByPhoneNumber(phoneNumber: string): Promise {\n        return await this.juniorRepo.findOne({ phoneNumber });\n    }\n\n    async createJunior(details: Junior) {\n        await this.juniorRepo.save(details);\n    }\n\n    async attemptChallenge(juniorId: string, challenge: string): Promise {\n        const entry = await this.challengeRepo.findOne(juniorId);\n        // Returning false could be more benefical than providing an exception in terms of security.\n        if (!entry) { return false; }\n        if (challenge !== entry.challenge) { return false; }\n        await this.challengeRepo.remove(entry);\n        return true;\n    }\n\n    /**\n     * TODO:\n     * Currently this returns the challenge as we need pass that back to frontend.\n     * Will be corrected when relevant workflow is introduced.\n     */\n    async registerJunior(registrationData: RegisterJuniorDto): Promise {\n        const userExists = await this.getJuniorByPhoneNumber(registrationData.phoneNumber);\n        if (userExists) { throw new ConflictException(content.JuniorAlreadyExists); }\n        const junior = {\n            firstName: registrationData.firstName, lastName: registrationData.lastName,\n            phoneNumber: registrationData.phoneNumber,\n        } as Junior;\n        await this.createJunior(junior);\n        // return `${registrationData.phoneNumber} ${content.Created} (PIN:${pin})`;\n        return await this.setChallenge(junior.phoneNumber);\n    }\n\n    /**\n     * TODO:\n     * affected by the same issue as registerJunior.\n     */\n    async resetLogin(phoneNumber: string): Promise {\n        const user = await this.getJuniorByPhoneNumber(phoneNumber);\n        if (!user) { throw new ConflictException(content.UserNotFound); }\n        const activeChallenge = await this.challengeRepo.findOne(user.id);\n        if (activeChallenge) { this.challengeRepo.remove(activeChallenge); }\n        return await this.setChallenge(phoneNumber);\n    }\n\n    async editJunior(details: EditJuniorDto): Promise {\n        const user = await this.juniorRepo.findOne(details.id);\n        if (!user) { throw new BadRequestException(content.UserNotFound); }\n        if (user.phoneNumber !== details.phoneNumber) {\n            const phoneNumberInUse = await this.getJuniorByPhoneNumber(details.phoneNumber);\n            if (phoneNumberInUse) { throw new ConflictException(content.JuniorAlreadyExists); }\n        }\n        user.phoneNumber = details.phoneNumber;\n        user.firstName = details.firstName;\n        user.lastName = details.lastName;\n        await this.juniorRepo.save(user);\n        return `${details.phoneNumber} ${content.Updated}`;\n    }\n\n    private async setChallenge(phoneNumber: string): Promise {\n        const valueToHash = (Math.floor(1000 + Math.random() * 9000)).toString();\n        const challengeHash = encodeURI(await hash(valueToHash, saltRounds));\n        const challengeData = { id: (await this.getJuniorByPhoneNumber(phoneNumber)).id, challenge: challengeHash } as Challenge;\n        await this.challengeRepo.save(challengeData);\n        return challengeHash;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JuniorUserViewModel.html":{"url":"classes/JuniorUserViewModel.html","title":"class - JuniorUserViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JuniorUserViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/vm/junior.vm.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: Junior)\n                    \n                \n                        \n                            \n                                Defined in src/junior/vm/junior.vm.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                        Junior\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/junior/vm/junior.vm.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Junior } from '../entities/index';\n\nexport class JuniorUserViewModel {\n    id: string;\n    phoneNumber: string;\n    firstName: string;\n    lastName: string;\n\n    constructor(entity: Junior) {\n        this.id = entity.id;\n        this.phoneNumber = entity.phoneNumber;\n        this.firstName = entity.firstName;\n        this.lastName = entity.lastName;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/authentication/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/authentication/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/authentication/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwt } from './authentication.consts';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt.secret,\n        });\n    }\n\n    async validate(payload: any) {\n        return { userId: payload.sub };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAdminDto.html":{"url":"classes/LoginAdminDto.html","title":"class - LoginAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/login.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/login.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\nexport class LoginAdminDto {\n\n    @IsNotEmpty()\n    @IsEmail()\n    readonly email: string;\n\n    @IsNotEmpty()\n    readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginJuniorDto.html":{"url":"classes/LoginJuniorDto.html","title":"class - LoginJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                challenge\n                            \n                            \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            challenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/login.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/login.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginJuniorDto {\n\n    @IsNotEmpty()\n    readonly id: string;\n\n    @IsNotEmpty()\n    readonly challenge: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterAdminDto.html":{"url":"classes/RegisterAdminDto.html","title":"class - RegisterAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isSuperUser\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmail()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isSuperUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/admin/dto/register.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsEmail } from 'class-validator';\n\nexport class RegisterAdminDto {\n\n    @IsEmail()\n    @IsNotEmpty()\n    readonly email: string;\n\n    @IsNotEmpty()\n    readonly password: string;\n\n    @IsNotEmpty()\n    readonly firstName: string;\n\n    @IsNotEmpty()\n    readonly lastName: string;\n\n    @IsNotEmpty()\n    readonly isSuperUser: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterJuniorDto.html":{"url":"classes/RegisterJuniorDto.html","title":"class - RegisterJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/register.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/register.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/register.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/register.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber } from 'class-validator';\n\nexport class RegisterJuniorDto {\n\n    @IsPhoneNumber('FI')\n    @IsNotEmpty()\n    readonly phoneNumber: string;\n\n    @IsNotEmpty()\n    readonly firstName: string;\n\n    @IsNotEmpty()\n    readonly lastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetJuniorDto.html":{"url":"classes/ResetJuniorDto.html","title":"class - ResetJuniorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetJuniorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/junior/dto/reset.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsPhoneNumber('FI')@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/junior/dto/reset.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsPhoneNumber } from 'class-validator';\n\nexport class ResetJuniorDto {\n\n    @IsPhoneNumber('FI')\n    @IsNotEmpty()\n    readonly phoneNumber: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/roles/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                    Async\n                                getUserRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, juniorRepo: Repository, adminRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        juniorRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUserRoles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserRoles(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/roles/roles.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Roles } from './roles.enum';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Junior } from '../junior/entities/index';\nimport { Repository } from 'typeorm';\nimport { Admin } from '../admin/admin.entity';\n@Injectable()\nexport class RolesGuard implements CanActivate {\n    constructor(\n        private readonly reflector: Reflector,\n        @InjectRepository(Junior)\n        private readonly juniorRepo: Repository,\n        @InjectRepository(Admin)\n        private readonly adminRepo: Repository) { }\n\n    async canActivate(context: ExecutionContext): Promise {\n        const roles = this.reflector.get('roles', context.getHandler());\n        if (!roles) {\n            return true;\n        }\n        const request = context.switchToHttp().getRequest().user;\n        const id = request.userId;\n        const userRoles = await this.getUserRoles(id);\n        const hasRole = () => userRoles.some((role) => roles.includes(role));\n        return id && hasRole();\n    }\n\n    private async getUserRoles(id: string): Promise {\n        const roles = [];\n        const isJunior = await this.juniorRepo.findOne(id);\n        if (isJunior) {\n            roles.push(Roles.JUNIOR);\n        } else {\n            const admin = await this.adminRepo.findOne(id);\n            if (admin) {\n                roles.push(Roles.ADMIN);\n                if (admin.isSuperUser) {\n                    roles.push(Roles.SUPERUSER);\n                }\n            }\n        }\n        return roles;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/admin.decorator.ts\n            \n            variable\n            Admin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/admin/admin.entity.ts\n            \n            class\n            Admin\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/admin/dto/edit.dto.ts\n            \n            class\n            EditAdminDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/admin/dto/login.dto.ts\n            \n            class\n            LoginAdminDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/dto/register.dto.ts\n            \n            class\n            RegisterAdminDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/admin/interceptors/edit.interceptor.ts\n            \n            injectable\n            AdminEditInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin/vm/admin.vm.ts\n            \n            class\n            AdminUserViewModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/authentication.consts.ts\n            \n            variable\n            jwt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/authentication.consts.ts\n            \n            variable\n            saltRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/authentication/jwt.model.ts\n            \n            interface\n            JWTToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/authentication/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/transformers.ts\n            \n            variable\n            jsonDataToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/transformers.ts\n            \n            variable\n            lowercase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configHandler.ts\n            \n            class\n            ConfigHelper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/junior/dto/edit.dto.ts\n            \n            class\n            EditJuniorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/junior/dto/login.dto.ts\n            \n            class\n            LoginJuniorDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/junior/dto/register.dto.ts\n            \n            class\n            RegisterJuniorDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/junior/dto/reset.dto.ts\n            \n            class\n            ResetJuniorDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/junior/entities/challenge.entity.ts\n            \n            class\n            Challenge\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/junior/entities/junior.entity.ts\n            \n            class\n            Junior\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/junior/interceptors/edit.interceptor.ts\n            \n            injectable\n            JuniorEditInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/junior/junior.controller.ts\n            \n            controller\n            JuniorController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/junior/junior.service.ts\n            \n            injectable\n            JuniorService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/junior/vm/junior.vm.ts\n            \n            class\n            JuniorUserViewModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.decorator.ts\n            \n            variable\n            AllowedRoles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                test/Mock.ts\n            \n            variable\n            repositoryMockFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/testdb.ts\n            \n            function\n            getTestDB\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.0\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            bcrypt : ^3.0.6\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.10.1\n        \n            passport : ^0.4.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^7.12.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            typeorm : ^0.2.19\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/roles/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 JUNIOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                 SUPERUSER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getTestDB   (test/.../testdb.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    test/testdb.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getTestDB\n                        \n                        \n                    \n                \n            \n            \n                \ngetTestDB()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nTests should be ran outside of the Docker container.\nWhen testing a sqlite database will be spawned and deleted if all tests are passed. Otherwise this database can be investigated. To re-test the database will need to be deleted from test/testdb.sql\nAs we have decided that controllers should only contain routes, e2e tests should suffice for controller tests during this project.\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2eSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GuardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JuniorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_exports\n\n\n\ncluster_AuthenticationModule_providers\n\n\n\ncluster_GuardsModule\n\n\n\ncluster_GuardsModule_exports\n\n\n\ncluster_JuniorModule\n\n\n\ncluster_JuniorModule_exports\n\n\n\ncluster_JuniorModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAppModule -->\n\nAuthenticationModule->AppModule\n\n\n\n\n\nAuthenticationService \n\nAuthenticationService \n\nAuthenticationService  -->\n\nAuthenticationModule->AuthenticationService \n\n\n\n\n\nGuardsModule\n\nGuardsModule\n\nAppModule -->\n\nGuardsModule->AppModule\n\n\n\n\n\nRolesGuard \n\nRolesGuard \n\nRolesGuard  -->\n\nGuardsModule->RolesGuard \n\n\n\n\n\nJuniorModule\n\nJuniorModule\n\nAppModule -->\n\nJuniorModule->AppModule\n\n\n\n\n\nJuniorService \n\nJuniorService \n\nJuniorService  -->\n\nJuniorModule->JuniorService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAuthenticationModule -->\n\nAuthenticationService->AuthenticationModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthenticationModule -->\n\nJwtStrategy->AuthenticationModule\n\n\n\n\n\nJuniorService\n\nJuniorService\n\nJuniorModule -->\n\nJuniorService->JuniorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MockType   (test/.../Mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test/Mock.ts\n    \n    \n        \n            \n                \n                    \n                    MockType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Admin   (src/.../admin.decorator.ts)\n                        \n                        \n                            AllowedRoles   (src/.../roles.decorator.ts)\n                        \n                        \n                            jsonDataToBoolean   (src/.../transformers.ts)\n                        \n                        \n                            jwt   (src/.../authentication.consts.ts)\n                        \n                        \n                            lowercase   (src/.../transformers.ts)\n                        \n                        \n                            repositoryMockFactory   (test/.../Mock.ts)\n                        \n                        \n                            saltRounds   (src/.../authentication.consts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/admin.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Admin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => req.user)\n                        \n                    \n\n\n            \n        \n\n    src/roles/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllowedRoles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: Roles[]) => SetMetadata('roles', roles)\n                        \n                    \n\n\n            \n        \n\n    src/common/transformers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jsonDataToBoolean\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueTransformer\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    to: (str: string | boolean) => typeof str === 'string' ? str.toLocaleLowerCase() === 'true' : str,\n    from: (bool: boolean) => bool,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lowercase\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ValueTransformer\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    to: (str: string) => str.toLocaleLowerCase(),\n    from: (str: string) => str,\n}\n                        \n                    \n\n\n            \n        \n\n    src/authentication/authentication.consts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: ConfigHelper.getJWTSecret(),\n    expiry: `7d`,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saltRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n\n    test/Mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            repositoryMockFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockType>\n\n                        \n                    \n                    \n                        \n                            Default value : jest.fn(() => ({\n    findOne: jest.fn(entity => entity),\n    find: jest.fn(entity => entity),\n}))\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
